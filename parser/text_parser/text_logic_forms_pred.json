{
  "0": {
    "text_logic_forms": [
      "Congruent(Triangle(R,S,T),Triangle(X,Y,Z))",
      "Find(y)"
    ],
    "output_text": "[Congruent(Triangle(R,S,T),Triangle(X,Y,Z))]. [Find(y)].",
    "success": true
  },
  "1": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,R)",
      "Find(y)"
    ],
    "output_text": "Use [Parallelogram(M,N,P,R)] to [Find(y)].",
    "success": true
  },
  "2": {
    "text_logic_forms": [
      "IsMedianOf(Line(J,K),Quadrilateral(A,B,T,Q))",
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "Let [IsMedianOf(Line(J,K),Quadrilateral(A,B,T,Q))]. [Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "3": {
    "text_logic_forms": [
      "Trapezoid($)",
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Z)))] in [Trapezoid($)].",
    "success": true
  },
  "4": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "5": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "6": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))] to nearest tenth.",
    "success": true
  },
  "7": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "8": {
    "text_logic_forms": [
      "Circle(K)",
      "Equals(LengthOf(Line(M,N)),16)",
      "Equals(MeasureOf(Arc(M,N)),98)",
      "Find(LengthOf(Line(L,N)))"
    ],
    "output_text": "In [Circle(K)], [Equals(LengthOf(Line(M,N)),16)] and [Equals(MeasureOf(Arc(M,N)),98)] [Find(LengthOf(Line(L,N)))]. Round to nearest hundredth.",
    "success": true
  },
  "9": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "10": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "11": {
    "text_logic_forms": [
      "Circle(X)",
      "Equals(LengthOf(Line(A,B)),30)",
      "Equals(LengthOf(Line(C,D)),30)",
      "Equals(MeasureOf(Arc(C,Z)),40)",
      "Find(MeasureOf(Arc(A,B)))"
    ],
    "output_text": "In [Circle(X)], [Equals(LengthOf(Line(A,B)),30)] [Equals(LengthOf(Line(C,D)),30)] and [Equals(MeasureOf(Arc(C,Z)),40)] [Find(MeasureOf(Arc(A,B)))].",
    "success": true
  },
  "12": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "13": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "14": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "15": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "16": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,D)),27)",
      "Equals(LengthOf(Line(A,B)),8)",
      "Equals(LengthOf(Line(A,E)),12)",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,D)),27)] [Equals(LengthOf(Line(A,B)),8)] and [Equals(LengthOf(Line(A,E)),12)] [Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "17": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,Q)",
      "Equals(MeasureOf(Angle(M)),10x)",
      "Equals(MeasureOf(Angle(N)),20x)",
      "Find(MeasureOf(Angle(Q)))"
    ],
    "output_text": "[Parallelogram(M,N,P,Q)] with [Equals(MeasureOf(Angle(M)),10x)] and [Equals(MeasureOf(Angle(N)),20x)] [Find(MeasureOf(Angle(Q)))].",
    "success": true
  },
  "18": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "19": {
    "text_logic_forms": [
      "Find(SinOf(x))"
    ],
    "output_text": "[Find(SinOf(x))].",
    "success": true
  },
  "20": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "21": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),101)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(4)),101)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "22": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "23": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,S)))].",
    "success": true
  },
  "24": {
    "text_logic_forms": [
      "Parallelogram(W,X,Y,Z)",
      "Find(MeasureOf(Angle(W,Z,Y)))"
    ],
    "output_text": "Use [Parallelogram(W,X,Y,Z)] to [Find(MeasureOf(Angle(W,Z,Y)))].",
    "success": true
  },
  "25": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "26": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "27": {
    "text_logic_forms": [
      "Circle(H)",
      "Equals(DiameterOf(Circle(H)),18)",
      "Equals(LengthOf(Line(L,M)),12)",
      "Equals(MeasureOf(Arc(L,M)),84)",
      "Find(MeasureOf(Arc(L,K)))"
    ],
    "output_text": " [Circle(H)], [Equals(DiameterOf(Circle(H)),18)] [Equals(LengthOf(Line(L,M)),12)] and [Equals(MeasureOf(Arc(L,M)),84)] [Find(MeasureOf(Arc(L,K)))].",
    "success": true
  },
  "28": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "29": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest degree.",
    "success": true
  },
  "30": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "31": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "32": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),4x)",
      "Equals(MeasureOf(Angle(12)),2x-6)",
      "Find(MeasureOf(Angle(11)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(11)),4x)] [Equals(MeasureOf(Angle(12)),2x-6)] [Find(MeasureOf(Angle(11)))].",
    "success": true
  },
  "33": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(A,B)),2x+3)",
      "Equals(LengthOf(Line(B,C)),5x)",
      "Find(x)"
    ],
    "output_text": "In [Rhombus(A,B,C,D)], [Equals(LengthOf(Line(A,B)),2x+3)] and [Equals(LengthOf(Line(B,C)),5x)] [Find(x)].",
    "success": true
  },
  "34": {
    "text_logic_forms": [
      "Find(LengthOf(Arc(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Arc(A,B)))]. Round to nearest hundredth.",
    "success": true
  },
  "35": {
    "text_logic_forms": [
      "Trapezoid(Q,R,T,U)",
      "IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))",
      "IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))",
      "Equals(LengthOf(Line(Q,R)),2)",
      "Equals(LengthOf(Line(V,S)),7)",
      "Find(LengthOf(Line(U,T)))"
    ],
    "output_text": "[Trapezoid(Q,R,T,U)], [IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))], [IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))],. If [Equals(LengthOf(Line(Q,R)),2)] and [Equals(LengthOf(Line(V,S)),7)] [Find(LengthOf(Line(U,T)))].",
    "success": true
  },
  "36": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "37": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "38": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "39": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram(J,K,L,M)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram(J,K,L,M)))].",
    "success": true
  },
  "40": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "41": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(M,N,P)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(M,N,P)))].",
    "success": true
  },
  "42": {
    "text_logic_forms": [
      "Parallel(Line(G,J),Line(F,K))",
      "Equals(LengthOf(Line(G,F)),12)",
      "Equals(LengthOf(Line(H,G)),6)",
      "Equals(LengthOf(Line(H,J)),8)",
      "Equals(LengthOf(Line(J,K)),x-4)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(G,J),Line(F,K))]. [Equals(LengthOf(Line(G,F)),12)] [Equals(LengthOf(Line(H,G)),6)] [Equals(LengthOf(Line(H,J)),8)] [Equals(LengthOf(Line(J,K)),x-4)].",
    "success": true
  },
  "43": {
    "text_logic_forms": [
      "Parallelogram(N,Q,R,M)",
      "Find(w)"
    ],
    "output_text": "Use [Parallelogram(N,Q,R,M)] to [Find(w)].",
    "success": true
  },
  "44": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "45": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "46": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "47": {
    "text_logic_forms": [
      "Find(PerimeterOf(Trapezoid(P,Q,R,S)))"
    ],
    "output_text": "[Find(PerimeterOf(Trapezoid(P,Q,R,S)))].",
    "success": true
  },
  "48": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "49": {
    "text_logic_forms": [
      "Parallelogram(W,X,Y,Z)",
      "Find(MeasureOf(Angle(Y,Z,W)))"
    ],
    "output_text": " [Parallelogram(W,X,Y,Z)]. [Find(MeasureOf(Angle(Y,Z,W)))].",
    "success": true
  },
  "50": {
    "text_logic_forms": [
      "Similar(Triangle(D,E,F),Triangle(G,F,H))",
      "Find(PerimeterOf(Triangle(D,E,F)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(D,E,F)))] if [Similar(Triangle(D,E,F),Triangle(G,F,H))].",
    "success": true
  },
  "51": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),3a+40)",
      "Equals(MeasureOf(Angle(2)),2a+25)",
      "Equals(MeasureOf(Angle(3)),5b-26)",
      "Find(a)"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),3a+40)] [Equals(MeasureOf(Angle(2)),2a+25)] and [Equals(MeasureOf(Angle(3)),5b-26)] [Find(a)].",
    "success": true
  },
  "52": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(D,G,F)),53)",
      "Equals(MeasureOf(Angle(A,G,C)),40)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))] if [Equals(MeasureOf(Angle(D,G,F)),53)] and [Equals(MeasureOf(Angle(A,G,C)),40)].",
    "success": true
  },
  "53": {
    "text_logic_forms": [
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Find(MeasureOf(Arc(A,C,E)))"
    ],
    "output_text": "[IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))]. [Find(MeasureOf(Arc(A,C,E)))].",
    "success": true
  },
  "54": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "55": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "56": {
    "text_logic_forms": [
      "IsIncenterOf(Point(P),Triangle(A,E,C))",
      "Find(MeasureOf(Angle(D,A,C)))"
    ],
    "output_text": "[IsIncenterOf(Point(P),Triangle(A,E,C))]. [Find(MeasureOf(Angle(D,A,C)))].",
    "success": true
  },
  "57": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(A,B)),14)",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(A,B)),14)] [Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "58": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(5)))] if [Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))].",
    "success": true
  },
  "59": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),53)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),53)] [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "60": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "61": {
    "text_logic_forms": [
      "Equals(c,8)",
      "Equals(b,10)",
      "Equals(MeasureOf(Angle(A)),60)",
      "Find(a)"
    ],
    "output_text": "[Find(a)] if [Equals(c,8)] [Equals(b,10)] and [Equals(MeasureOf(Angle(A)),60)].",
    "success": true
  },
  "62": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(LengthOf(Line(A,B)),Line(B,C))",
      "Equals(LengthOf(Line(D,F)),3x-7)",
      "Equals(LengthOf(Line(F,E)),x+9)",
      "Find(x)"
    ],
    "output_text": "In [Circle(F)], [Equals(LengthOf(Line(A,B)),Line(B,C))], [Equals(LengthOf(Line(D,F)),3x-7)] and [Equals(LengthOf(Line(F,E)),x+9)] [Find(x)]?",
    "success": true
  },
  "63": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "64": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(2)),2x)",
      "Equals(MeasureOf(Angle(3)),x)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(2)),2x)] [Equals(MeasureOf(Angle(3)),x)] [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "65": {
    "text_logic_forms": [
      "IsDiameterOf(Line(A,D),Circle(B))",
      "IsDiameterOf(Line(C,G),Circle(B))",
      "Find(MeasureOf(Arc(C,G,D)))"
    ],
    "output_text": "[IsDiameterOf(Line(A,D),Circle(B))], [IsDiameterOf(Line(C,G),Circle(B))]. [Find(MeasureOf(Arc(C,G,D)))].",
    "success": true
  },
  "66": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "67": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "68": {
    "text_logic_forms": [
      "Similar(Triangle(A,B,C),Triangle(C,B,D))",
      "Equals(LengthOf(Line(A,D)),5)",
      "Equals(LengthOf(Line(C,D)),12)",
      "Equals(LengthOf(Line(B,C)),31.2)",
      "Find(PerimeterOf(Triangle(A,B,C)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(A,B,C)))], if [Similar(Triangle(A,B,C),Triangle(C,B,D))], [Equals(LengthOf(Line(A,D)),5)] [Equals(LengthOf(Line(C,D)),12)] and [Equals(LengthOf(Line(B,C)),31.2)].",
    "success": true
  },
  "69": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "70": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth.",
    "success": true
  },
  "71": {
    "text_logic_forms": [
      "Equilateral(Triangle(E,F,G))",
      "BisectsAngle(Line(E,H),Angle(E))",
      "Find(x)"
    ],
    "output_text": "[Equilateral(Triangle(E,F,G))] and [BisectsAngle(Line(E,H),Angle(E))]. [Find(x)].",
    "success": true
  },
  "72": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "73": {
    "text_logic_forms": [
      "Triangle(P,Q,R)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] in [Triangle(P,Q,R)].",
    "success": true
  },
  "74": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "75": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(U)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(U)))].",
    "success": true
  },
  "76": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "77": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "78": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "79": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "80": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "81": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "82": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(E,F,G)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(E,F,G)))]?",
    "success": true
  },
  "83": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "84": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "85": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "86": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(2)),110)",
      "Equals(MeasureOf(Angle(12)),55)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(2)),110)] and [Equals(MeasureOf(Angle(12)),55)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "87": {
    "text_logic_forms": [
      "Rectangle(M,N,Q,R)",
      "Equals(LengthOf(Line(N,R)),2x+10)",
      "Equals(LengthOf(Line(N,P)),2x-30)",
      "Find(LengthOf(Line(M,P)))"
    ],
    "output_text": " [Rectangle(M,N,Q,R)]. If [Equals(LengthOf(Line(N,R)),2x+10)] and [Equals(LengthOf(Line(N,P)),2x-30)] [Find(LengthOf(Line(M,P)))].",
    "success": true
  },
  "88": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(AreaOf(Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], [Find(AreaOf(Green(Shape($))))].",
    "success": true
  },
  "89": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "90": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(12)),64)",
      "Find(MeasureOf(Angle(11)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(12)),64)] [Find(MeasureOf(Angle(11)))].",
    "success": true
  },
  "91": {
    "text_logic_forms": [
      "Find(LengthOf(Line(B,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,D)))].",
    "success": true
  },
  "92": {
    "text_logic_forms": [
      "IsPerpendicularBisectorOf(Line(m),Line(X,Z))",
      "Equals(LengthOf(Line(W,Z)),4a-15)",
      "Equals(LengthOf(Line(W,Z)),a+12)",
      "Find(LengthOf(Line(W,X)))"
    ],
    "output_text": "[IsPerpendicularBisectorOf(Line(m),Line(X,Z))], [Equals(LengthOf(Line(W,Z)),4a-15)] and [Equals(LengthOf(Line(W,Z)),a+12)] [Find(LengthOf(Line(W,X)))].",
    "success": true
  },
  "93": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "94": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "95": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))].",
    "success": true
  },
  "96": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(P,O)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(P,O)))].",
    "success": true
  },
  "97": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "98": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "99": {
    "text_logic_forms": [
      "IsDiameterOf(Line(A,D),Circle(B))",
      "IsDiameterOf(Line(C,G),Circle(B))",
      "Find(MeasureOf(Arc(A,C,F)))"
    ],
    "output_text": "[IsDiameterOf(Line(A,D),Circle(B))], [IsDiameterOf(Line(C,G),Circle(B))]. [Find(MeasureOf(Arc(A,C,F)))].",
    "success": true
  },
  "100": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R)))] to nearest tenth.",
    "success": true
  },
  "101": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "102": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "103": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(J,K,L)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(J,K,L)))].",
    "success": true
  },
  "104": {
    "text_logic_forms": [
      "Equals(b,18)",
      "Find(c)"
    ],
    "output_text": "If [Equals(b,18)] [Find(c)].",
    "success": true
  },
  "105": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "106": {
    "text_logic_forms": [
      "Triangle(A,C,E)",
      "IsCentroidOf(Point(P),Triangle(A,C,E))",
      "Equals(LengthOf(Line(P,F)),6)",
      "Equals(LengthOf(Line(A,D)),15)",
      "Find(LengthOf(Line(P,C)))"
    ],
    "output_text": " [Triangle(A,C,E)], [IsCentroidOf(Point(P),Triangle(A,C,E))]. [Equals(LengthOf(Line(P,F)),6)] and [Equals(LengthOf(Line(A,D)),15)] [Find(LengthOf(Line(P,C)))].",
    "success": true
  },
  "107": {
    "text_logic_forms": [
      "InscribedIn(Equilateral(Pentagon(P,Q,R,S,T)),Circle(U))",
      "Find(MeasureOf(Angle(P,T,S)))"
    ],
    "output_text": "[InscribedIn(Equilateral(Pentagon(P,Q,R,S,T)),Circle(U))]. [Find(MeasureOf(Angle(P,T,S)))].",
    "success": true
  },
  "108": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "109": {
    "text_logic_forms": [],
    "output_text": "A plane travels from Des Moines to Phoenix, on to Atlanta and back to Des Moines,. Find distance in from Des Moines to Phoenix if trip was 3482.",
    "success": false
  },
  "110": {
    "text_logic_forms": [
      "IsDiameterOf(Line(P,M),Circle(R))",
      "Find(MeasureOf(Arc(M,Q)))"
    ],
    "output_text": "[IsDiameterOf(Line(P,M),Circle(R))]. [Find(MeasureOf(Arc(M,Q)))].",
    "success": true
  },
  "111": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "112": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "113": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "114": {
    "text_logic_forms": [
      "Trapezoid(Q,R,T,U)",
      "IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))",
      "IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))",
      "Equals(LengthOf(Line(R,Q)),5)",
      "Equals(LengthOf(Line(V,S)),11)",
      "Find(LengthOf(Line(U,T)))"
    ],
    "output_text": "[Trapezoid(Q,R,T,U)], [IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))], [IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))],. If [Equals(LengthOf(Line(R,Q)),5)] and [Equals(LengthOf(Line(V,S)),11)] [Find(LengthOf(Line(U,T)))].",
    "success": true
  },
  "115": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(F,K)),3x-1)",
      "Equals(LengthOf(Line(K,G)),4y+3)",
      "Equals(LengthOf(Line(J,K)),6y-2)",
      "Equals(LengthOf(Line(K,H)),2x+3)",
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "If [Equals(LengthOf(Line(F,K)),3x-1)] [Equals(LengthOf(Line(K,G)),4y+3)] [Equals(LengthOf(Line(J,K)),6y-2)] and [Equals(LengthOf(Line(K,H)),2x+3)] [Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "116": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "117": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),104)",
      "Equals(MeasureOf(Angle(14)),118)",
      "Find(MeasureOf(Angle(10)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(4)),104)] [Equals(MeasureOf(Angle(14)),118)] [Find(MeasureOf(Angle(10)))].",
    "success": true
  },
  "118": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "119": {
    "text_logic_forms": [
      "Find(CosOf(Angle(A)))"
    ],
    "output_text": "[Find(CosOf(Angle(A)))].",
    "success": true
  },
  "120": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "121": {
    "text_logic_forms": [
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,Y)))].",
    "success": true
  },
  "122": {
    "text_logic_forms": [
      "Congruent(Triangle(R,S,T),Triangle(V,U,T))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(R,S,T),Triangle(V,U,T))]. [Find(x)].",
    "success": true
  },
  "123": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "124": {
    "text_logic_forms": [
      "Congruent(Quadrilateral(B,C,D,E),Quadrilateral(R,S,T,U))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Quadrilateral(B,C,D,E),Quadrilateral(R,S,T,U))]. [Find(x)].",
    "success": true
  },
  "125": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))].",
    "success": true
  },
  "126": {
    "text_logic_forms": [
      "Square(W,X,Y,Z)",
      "Equals(LengthOf(Line(W,T)),3)",
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": " [Square(W,X,Y,Z)]. If [Equals(LengthOf(Line(W,T)),3)] [Find(LengthOf(Line(X,Y)))].",
    "success": true
  },
  "127": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),4p+15)",
      "Equals(MeasureOf(Angle(3)),3p-10)",
      "Equals(MeasureOf(Angle(4)),6r+5)",
      "Find(r)"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),4p+15)] [Equals(MeasureOf(Angle(3)),3p-10)] and [Equals(MeasureOf(Angle(4)),6r+5)] [Find(r)].",
    "success": true
  },
  "128": {
    "text_logic_forms": [
      "UseTheorem(Perpendicular_Bisector_Theorem)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[UseTheorem(Perpendicular_Bisector_Theorem)], [Find(LengthOf(Line(A,B)))]?",
    "success": true
  },
  "129": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(8)),96)",
      "Equals(MeasureOf(Angle(12)),42)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(8)),96)] and [Equals(MeasureOf(Angle(12)),42)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "130": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),62)",
      "Equals(MeasureOf(Angle(14)),38)",
      "Find(MeasureOf(Angle(12)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(11)),62)] and [Equals(MeasureOf(Angle(14)),38)] [Find(MeasureOf(Angle(12)))].",
    "success": true
  },
  "131": {
    "text_logic_forms": [
      "Find(CosOf(Angle(S)))"
    ],
    "output_text": "[Find(CosOf(Angle(S)))].",
    "success": true
  },
  "132": {
    "text_logic_forms": [
      "Circle(A)",
      "Equals(LengthOf(Line(W,X)),22)",
      "Equals(LengthOf(Line(X,Y)),22)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "In [Circle(A)], [Equals(LengthOf(Line(W,X)),22)] [Equals(LengthOf(Line(X,Y)),22)] [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "133": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "134": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "135": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))].",
    "success": true
  },
  "136": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "137": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "138": {
    "text_logic_forms": [
      "Equals(b,3)",
      "Find(c)"
    ],
    "output_text": "If [Equals(b,3)] [Find(c)].",
    "success": true
  },
  "139": {
    "text_logic_forms": [
      "Find(AreaOf(Sector($)))"
    ],
    "output_text": "[Find(AreaOf(Sector($)))]?",
    "success": true
  },
  "140": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "141": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "142": {
    "text_logic_forms": [
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "143": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "144": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "145": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(D,A,B)),2)",
      "MeasureOf(Angle(A,D,C))",
      "Equals(LengthOf(Line(C,B)),6)",
      "Find(LengthOf(Line(D,A)))"
    ],
    "output_text": "In [Rhombus(A,B,C,D)], [Equals(MeasureOf(Angle(D,A,B)),2)] [MeasureOf(Angle(A,D,C))] and [Equals(LengthOf(Line(C,B)),6)] [Find(LengthOf(Line(D,A)))].",
    "success": true
  },
  "146": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "147": {
    "text_logic_forms": [
      "Equals(a,14)",
      "Equals(b,48)",
      "Equals(c,50)",
      "Find(TanOf(Angle(B)))"
    ],
    "output_text": "[Equals(a,14)] [Equals(b,48)] and [Equals(c,50)] [Find(TanOf(Angle(B)))].",
    "success": true
  },
  "148": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "149": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "150": {
    "text_logic_forms": [
      "Find(SinOf(Angle(R)))"
    ],
    "output_text": "[Find(SinOf(Angle(R)))].",
    "success": true
  },
  "151": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "152": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "153": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "154": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "155": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Find(y)"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. [Find(y)].",
    "success": true
  },
  "156": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "157": {
    "text_logic_forms": [
      "Find(PerimeterOf(Quadrilateral(A,B,C,D)))"
    ],
    "output_text": "[Find(PerimeterOf(Quadrilateral(A,B,C,D)))].",
    "success": true
  },
  "158": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Y)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Y)))].",
    "success": true
  },
  "159": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "160": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "161": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))].",
    "success": true
  },
  "162": {
    "text_logic_forms": [
      "IsDiameterOf(Line(A,D),Circle(B))",
      "IsDiameterOf(Line(C,G),Circle(B))",
      "Find(MeasureOf(Arc(G,C,F)))"
    ],
    "output_text": "[IsDiameterOf(Line(A,D),Circle(B))], [IsDiameterOf(Line(C,G),Circle(B))]. [Find(MeasureOf(Arc(G,C,F)))].",
    "success": true
  },
  "163": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "164": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "165": {
    "text_logic_forms": [
      "Find(LengthOf(Line(J,M)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,M)))].",
    "success": true
  },
  "166": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "Equilateral(Triangle(D,C,E))",
      "Isosceles(Triangle(F,C,G))",
      "Equals(Angle(3),Angle(C))",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": ", [Isosceles(Triangle(A,B,C))], [Equilateral(Triangle(D,C,E))] and [Isosceles(Triangle(F,C,G))]. [Find(MeasureOf(Angle(3)))], [Equals(Angle(3),Angle(C))].",
    "success": true
  },
  "167": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),53)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),53)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "168": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(M)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(M)))].",
    "success": true
  },
  "169": {
    "text_logic_forms": [
      "Triangle($)",
      "Find(h)"
    ],
    "output_text": "[Find(h)] in [Triangle($)].",
    "success": true
  },
  "170": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "171": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(A,B)),2x+3)",
      "Equals(LengthOf(Line(B,C)),5x)",
      "Equals(MeasureOf(Angle(A,B,C)),83.2)",
      "Find(MeasureOf(Angle(B,C,D)))"
    ],
    "output_text": "In [Rhombus(A,B,C,D)], [Equals(LengthOf(Line(A,B)),2x+3)] and [Equals(LengthOf(Line(B,C)),5x)] [Find(MeasureOf(Angle(B,C,D)))] if [Equals(MeasureOf(Angle(A,B,C)),83.2)].",
    "success": true
  },
  "172": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "173": {
    "text_logic_forms": [
      "Isosceles(Triangle(K,L,N))",
      "Isosceles(Triangle(L,M,N))",
      "Equals(MeasureOf(Angle(J,K,N)),130)",
      "Find(MeasureOf(Angle(M)))"
    ],
    "output_text": "[Isosceles(Triangle(K,L,N))], [Isosceles(Triangle(L,M,N))] and [Equals(MeasureOf(Angle(J,K,N)),130)] [Find(MeasureOf(Angle(M)))].",
    "success": true
  },
  "174": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D,G,E)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D,G,E)))].",
    "success": true
  },
  "175": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(Q,R)),2)",
      "Equals(LengthOf(Line(X,W)),12)",
      "Equals(LengthOf(Line(Q,W)),15)",
      "Equals(LengthOf(Line(S,T)),5)",
      "Find(LengthOf(Line(W,V)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(Q,R)),2)] [Equals(LengthOf(Line(X,W)),12)] [Equals(LengthOf(Line(Q,W)),15)] and [Equals(LengthOf(Line(S,T)),5)] [Find(LengthOf(Line(W,V)))].",
    "success": true
  },
  "176": {
    "text_logic_forms": [
      "Circle(A)",
      "Equals(MeasureOf(Angle(E,A,D)),42)",
      "Find(MeasureOf(Arc(C,B,E)))"
    ],
    "output_text": "In [Circle(A)], [Equals(MeasureOf(Angle(E,A,D)),42)] [Find(MeasureOf(Arc(C,B,E)))].",
    "success": true
  },
  "177": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "178": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "Equilateral(Triangle(D,C,E))",
      "Isosceles(Triangle(F,C,G))",
      "Equals(Angle(2),Angle(C))",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": ", [Isosceles(Triangle(A,B,C))], [Equilateral(Triangle(D,C,E))] and [Isosceles(Triangle(F,C,G))]. [Find(MeasureOf(Angle(2)))], [Equals(Angle(2),Angle(C))].",
    "success": true
  },
  "179": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "180": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(A,D,C)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(A,D,C)))].",
    "success": true
  },
  "181": {
    "text_logic_forms": [
      "Isosceles(Quadrilateral(Q,R,S,T))",
      "Trapezoid($)",
      "IsMedianOf(Line(X,Y),Trapezoid($))",
      "Equals(LengthOf(Line(Q,R)),22)",
      "Equals(LengthOf(Line(X,Y)),15)",
      "Find(LengthOf(Line(T,S)))"
    ],
    "output_text": "[Isosceles(Quadrilateral(Q,R,S,T))] [Trapezoid($)], [IsMedianOf(Line(X,Y),Trapezoid($))]. [Find(LengthOf(Line(T,S)))] if [Equals(LengthOf(Line(Q,R)),22)] and [Equals(LengthOf(Line(X,Y)),15)].",
    "success": true
  },
  "182": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),94)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),94)] [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "183": {
    "text_logic_forms": [
      "InscribedIn(Quadrilateral(W,X,Y,Z),Circle(V))",
      "Find(MeasureOf(Angle(Y)))"
    ],
    "output_text": "[InscribedIn(Quadrilateral(W,X,Y,Z),Circle(V))]. [Find(MeasureOf(Angle(Y)))].",
    "success": true
  },
  "184": {
    "text_logic_forms": [
      "Perpendicular(Line(A,B),Line(B,C))",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))] if [Perpendicular(Line(A,B),Line(B,C))].",
    "success": true
  },
  "185": {
    "text_logic_forms": [
      "Equals(AreaOf(Rhombus(W,X,Y,Z)),100)",
      "Equals(LengthOf(Line(X,Z)),10)",
      "Find(LengthOf(Line(W,Y)))"
    ],
    "output_text": "[Equals(AreaOf(Rhombus(W,X,Y,Z)),100)] [Find(LengthOf(Line(W,Y)))] if [Equals(LengthOf(Line(X,Z)),10)].",
    "success": true
  },
  "186": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(l))",
      "Equals(MeasureOf(Angle(1)),73)"
    ],
    "output_text": ", which cannot be true if [Parallel(Line(m),Line(l))] and [Equals(MeasureOf(Angle(1)),73)]?",
    "success": true
  },
  "187": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "188": {
    "text_logic_forms": [
      "Parallelogram(R,S,T,U)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] in [Parallelogram(R,S,T,U)].",
    "success": true
  },
  "189": {
    "text_logic_forms": [
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "190": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(A)),Mul(RadiusOf(Circle(B)),2))",
      "Equals(RadiusOf(Circle(A)),Mul(RadiusOf(Circle(C)),4))",
      "Equals(SumOf(CircumferenceOf(Circle($1)),CircumferenceOf(Circle($2)),CircumferenceOf(Circle($3))),42\\pi)",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": ", [Equals(RadiusOf(Circle(A)),Mul(RadiusOf(Circle(B)),2))], [Equals(RadiusOf(Circle(A)),Mul(RadiusOf(Circle(C)),4))]. If [Equals(SumOf(CircumferenceOf(Circle($1)),CircumferenceOf(Circle($2)),CircumferenceOf(Circle($3))),42\\pi)] [Find(LengthOf(Line(A,C)))].",
    "success": true
  },
  "191": {
    "text_logic_forms": [
      "IsIncenterOf(Point(J),Angle(A,B,C))",
      "Find(MeasureOf(Angle(J,A,C)))"
    ],
    "output_text": "[IsIncenterOf(Point(J),Angle(A,B,C))]. [Find(MeasureOf(Angle(J,A,C)))].",
    "success": true
  },
  "192": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(T,U)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(T,U)))].",
    "success": true
  },
  "193": {
    "text_logic_forms": [
      "Find(LengthOf(Line(W,X)))"
    ],
    "output_text": "[Find(LengthOf(Line(W,X)))].",
    "success": true
  },
  "194": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(S,U)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(S,U)))].",
    "success": true
  },
  "195": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "196": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth.",
    "success": true
  },
  "197": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),53)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),53)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "198": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "199": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))].",
    "success": true
  },
  "200": {
    "text_logic_forms": [
      "Line(B,A)",
      "Line(B,C)",
      "PointLiesOnLine(B,Line(A,C))",
      "BisectsAngle(Line(B,D),Angle(A,B,F))",
      "Equals(MeasureOf(Angle(A,B,F)),3x-8)",
      "Equals(MeasureOf(Angle(A,B,D)),x+14)",
      "Find(MeasureOf(Angle(A,B,D)))"
    ],
    "output_text": "[Line(B,A)], [Line(B,C)], [PointLiesOnLine(B,Line(A,C))] and [BisectsAngle(Line(B,D),Angle(A,B,F))]. If [Equals(MeasureOf(Angle(A,B,F)),3x-8)] and [Equals(MeasureOf(Angle(A,B,D)),x+14)] [Find(MeasureOf(Angle(A,B,D)))].",
    "success": true
  },
  "201": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "202": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "203": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "204": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),43)",
      "Find(MeasureOf(Angle(10)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),43)] [Find(MeasureOf(Angle(10)))].",
    "success": true
  },
  "205": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "206": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "207": {
    "text_logic_forms": [
      "Find(LengthOf(Line(B,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,E)))].",
    "success": true
  },
  "208": {
    "text_logic_forms": [
      "Find(AreaOf(Rhombus($)))"
    ],
    "output_text": "[Find(AreaOf(Rhombus($)))].",
    "success": true
  },
  "209": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))].",
    "success": true
  },
  "210": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "211": {
    "text_logic_forms": [
      "Equals(RatioOf(Line(I,J),Line(X,J)),RatioOf(Line(H,J),Line(Y,J)))",
      "Equals(MeasureOf(Angle(W,X,J)),130)",
      "Equals(MeasureOf(Angle(W,Z,G)),20)",
      "Find(MeasureOf(Angle(J,I,H)))"
    ],
    "output_text": "If [Equals(RatioOf(Line(I,J),Line(X,J)),RatioOf(Line(H,J),Line(Y,J)))], [Equals(MeasureOf(Angle(W,X,J)),130)] and [Equals(MeasureOf(Angle(W,Z,G)),20)] [Find(MeasureOf(Angle(J,I,H)))].",
    "success": true
  },
  "212": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "213": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest hundredth.",
    "success": true
  },
  "214": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))].",
    "success": true
  },
  "215": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(B)),76)",
      "Equals(MeasureOf(Angle(A)),HalfOf(MeasureOf(Angle(B))))",
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(B)),76)] [Equals(MeasureOf(Angle(A)),HalfOf(MeasureOf(Angle(B))))]. [Find(MeasureOf(Angle(C)))]?",
    "success": true
  },
  "216": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(F,J)),Line(F,H))",
      "Equals(LengthOf(Line(G,F)),Line(G,H))",
      "Equals(MeasureOf(Angle(J,F,H)),34)",
      "Find(MeasureOf(Angle(J)))"
    ],
    "output_text": ", [Equals(LengthOf(Line(F,J)),Line(F,H))] and [Equals(LengthOf(Line(G,F)),Line(G,H))]. If [Equals(MeasureOf(Angle(J,F,H)),34)] [Find(MeasureOf(Angle(J)))].",
    "success": true
  },
  "217": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "218": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T,U,V)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T,U,V)))].",
    "success": true
  },
  "219": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "220": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "221": {
    "text_logic_forms": [
      "Equals(PerimeterOf(Triangle(B,P,A)),12)",
      "Equals(LengthOf(Line(B,M)),\\sqrt{13})",
      "Equals(LengthOf(Line(C,N)),3\\sqrt{13})",
      "Find(PerimeterOf(Triangle(C,P,D)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(C,P,D)))] if [Equals(PerimeterOf(Triangle(B,P,A)),12)] [Equals(LengthOf(Line(B,M)),\\sqrt{13})] and [Equals(LengthOf(Line(C,N)),3\\sqrt{13})].",
    "success": true
  },
  "222": {
    "text_logic_forms": [
      "Triangle(A,C,E)",
      "IsCentroidOf(Point(P),Triangle(A,C,E))",
      "Equals(LengthOf(Line(P,F)),6)",
      "Equals(LengthOf(Line(A,D)),15)",
      "Find(LengthOf(Line(A,P)))"
    ],
    "output_text": " [Triangle(A,C,E)], [IsCentroidOf(Point(P),Triangle(A,C,E))]. [Equals(LengthOf(Line(P,F)),6)] and [Equals(LengthOf(Line(A,D)),15)] [Find(LengthOf(Line(A,P)))].",
    "success": true
  },
  "223": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(S)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(S)))].",
    "success": true
  },
  "224": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "225": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(X)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(X)))].",
    "success": true
  },
  "226": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "227": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(C,N)),8)",
      "Find(LengthOf(Line(D,N)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(C,N)),8)] [Find(LengthOf(Line(D,N)))].",
    "success": true
  },
  "228": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "229": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "230": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,C)))].",
    "success": true
  },
  "231": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth.",
    "success": true
  },
  "232": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(X,M)),4)",
      "Equals(LengthOf(Line(X,N)),6)",
      "Equals(LengthOf(Line(N,Z)),9)",
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(X,M)),4)] [Equals(LengthOf(Line(X,N)),6)] and [Equals(LengthOf(Line(N,Z)),9)] [Find(LengthOf(Line(X,Y)))].",
    "success": true
  },
  "233": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(G,H)),78)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Equals(MeasureOf(Arc(G,H)),78)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "234": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(B,D)),4)",
      "Find(LengthOf(Line(D,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,E)))], [Equals(LengthOf(Line(A,D)),12)] and [Equals(LengthOf(Line(B,D)),4)].",
    "success": true
  },
  "235": {
    "text_logic_forms": [
      "Find(ScaleFactorOf(Shape(W),Shape(W')))"
    ],
    "output_text": "[Find(ScaleFactorOf(Shape(W),Shape(W')))].",
    "success": true
  },
  "236": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "237": {
    "text_logic_forms": [
      "Parallel(Line(a),Line(b))",
      "Parallel(Line(c),Line(d))",
      "Equals(MeasureOf(Angle(4)),57)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": ", [Parallel(Line(a),Line(b))], [Parallel(Line(c),Line(d))] and [Equals(MeasureOf(Angle(4)),57)] [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "238": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(P)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(P)))].",
    "success": true
  },
  "239": {
    "text_logic_forms": [
      "RightAngle(Angle(R,S,T))",
      "Perpendicular(Line(S,U),Line(R,T))",
      "Perpendicular(Line(U,V),Line(S,T))",
      "Equals(MeasureOf(Angle(R,T,S)),47)",
      "Find(MeasureOf(Angle(R,S,U)))"
    ],
    "output_text": "If [RightAngle(Angle(R,S,T))], [Perpendicular(Line(S,U),Line(R,T))], [Perpendicular(Line(U,V),Line(S,T))] and [Equals(MeasureOf(Angle(R,T,S)),47)] [Find(MeasureOf(Angle(R,S,U)))].",
    "success": true
  },
  "240": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "241": {
    "text_logic_forms": [
      "Triangle(J,K,L)",
      "Equals(LengthOf(Line(P,T)),2)",
      "Find(LengthOf(Line(K,P)))"
    ],
    "output_text": "In [Triangle(J,K,L)], [Equals(LengthOf(Line(P,T)),2)] [Find(LengthOf(Line(K,P)))].",
    "success": true
  },
  "242": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(S,R,T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(S,R,T)))].",
    "success": true
  },
  "243": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(LengthOf(Line(A,C)),9x-1)",
      "Equals(LengthOf(Line(A,F)),2x+7)",
      "Find(LengthOf(Line(A,F)))"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. If [Equals(LengthOf(Line(A,C)),9x-1)] and [Equals(LengthOf(Line(A,F)),2x+7)] [Find(LengthOf(Line(A,F)))].",
    "success": true
  },
  "244": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(K,L))",
      "Equals(LengthOf(Line(K,N)),9)",
      "Equals(LengthOf(Line(L,N)),16)",
      "Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))",
      "Find(LengthOf(Line(M,L)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(K,L))], [Equals(LengthOf(Line(K,N)),9)] [Equals(LengthOf(Line(L,N)),16)] and [Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))], [Find(LengthOf(Line(M,L)))].",
    "success": true
  },
  "245": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(T,R)),8)",
      "Equals(LengthOf(Line(L,R)),3)",
      "Equals(LengthOf(Line(R,W)),6)",
      "Find(LengthOf(Line(W,S)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(T,R)),8)] [Equals(LengthOf(Line(L,R)),3)] and [Equals(LengthOf(Line(R,W)),6)] [Find(LengthOf(Line(W,S)))].",
    "success": true
  },
  "246": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "247": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "248": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "249": {
    "text_logic_forms": [
      "Equals(Triangle($),Triangle($1,$2,$3))",
      "Equals(MeasureOf(Angle($1)),30)",
      "Equals(MeasureOf(Angle($2)),60)",
      "Equals(MeasureOf(Angle($3)),90)",
      "Find(x)"
    ],
    "output_text": "[Equals(Triangle($),Triangle($1,$2,$3))], [Equals(MeasureOf(Angle($1)),30)], [Equals(MeasureOf(Angle($2)),60)], [Equals(MeasureOf(Angle($3)),90)]. [Find(x)].",
    "success": true
  },
  "250": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "251": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(D,G,F)),53)",
      "Equals(MeasureOf(Angle(A,G,C)),40)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))] if [Equals(MeasureOf(Angle(D,G,F)),53)] and [Equals(MeasureOf(Angle(A,G,C)),40)].",
    "success": true
  },
  "252": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "253": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "254": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(S)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(S)))].",
    "success": true
  },
  "255": {
    "text_logic_forms": [
      "Find(TanOf(Angle(A)))"
    ],
    "output_text": "[Find(TanOf(Angle(A)))].",
    "success": true
  },
  "256": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "257": {
    "text_logic_forms": [
      "Find(LengthOf(Line(X,Z)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,Z)))].",
    "success": true
  },
  "258": {
    "text_logic_forms": [
      "Find(CosOf(Angle(R)))"
    ],
    "output_text": "[Find(CosOf(Angle(R)))].",
    "success": true
  },
  "259": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)]. Round to nearest tenth.",
    "success": true
  },
  "260": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "261": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "262": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "263": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "264": {
    "text_logic_forms": [
      "IsDiameterOf(Line(D,F),Circle(A))",
      "IsDiameterOf(Line(P,G),Circle(A))",
      "Equals(LengthOf(Line(A,G)),12)",
      "Find(LengthOf(Line(L,A)))"
    ],
    "output_text": "[IsDiameterOf(Line(D,F),Circle(A))], [IsDiameterOf(Line(P,G),Circle(A))]. If [Equals(LengthOf(Line(A,G)),12)] [Find(LengthOf(Line(L,A)))].",
    "success": true
  },
  "265": {
    "text_logic_forms": [
      "Rhombus(F,G,H,J)",
      "IsDiagonalOf(Line(F,H),Rhombus(F,G,H,J))",
      "IsDiagonalOf(Line(G,J),Rhombus(F,G,H,J))",
      "IntersectAt(Line(F,H),Line(G,J),Point(K))",
      "Equals(MeasureOf(Angle(F,J,H)),82)",
      "Find(MeasureOf(Angle(K,H,J)))"
    ],
    "output_text": "[Rhombus(F,G,H,J)]. [IsDiagonalOf(Line(F,H),Rhombus(F,G,H,J))], [IsDiagonalOf(Line(G,J),Rhombus(F,G,H,J))]. [IntersectAt(Line(F,H),Line(G,J),Point(K))]. If [Equals(MeasureOf(Angle(F,J,H)),82)] [Find(MeasureOf(Angle(K,H,J)))].",
    "success": true
  },
  "266": {
    "text_logic_forms": [
      "Similar(Triangle(D,E,F),Triangle(A,C,B))",
      "Find(PerimeterOf(Triangle(D,E,F)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(D,E,F)))], if [Similar(Triangle(D,E,F),Triangle(A,C,B))].",
    "success": true
  },
  "267": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(D,P,C)),3x-15)",
      "Find(x)"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(MeasureOf(Angle(D,P,C)),3x-15)] [Find(x)].",
    "success": true
  },
  "268": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "269": {
    "text_logic_forms": [
      "Equals(a,14)",
      "Equals(b,48)",
      "Equals(c,50)",
      "Find(CosOf(Angle(B)))"
    ],
    "output_text": "[Equals(a,14)] [Equals(b,48)] and [Equals(c,50)] [Find(CosOf(Angle(B)))].",
    "success": true
  },
  "270": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth.",
    "success": true
  },
  "271": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "272": {
    "text_logic_forms": [
      "Congruent(Circle(C),Circle(D))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Circle(C),Circle(D))]. [Find(x)].",
    "success": true
  },
  "273": {
    "text_logic_forms": [
      "Equals(a,14)",
      "Equals(b,48)",
      "Equals(c,50)",
      "Find(TanOf(Angle(A)))"
    ],
    "output_text": "[Equals(a,14)] [Equals(b,48)] and [Equals(c,50)] [Find(TanOf(Angle(A)))].",
    "success": true
  },
  "274": {
    "text_logic_forms": [
      "Shape($)"
    ],
    "output_text": "Which of following statements about [Shape($)] is true?",
    "success": false
  },
  "275": {
    "text_logic_forms": [
      "Circle(Z)",
      "Equals(Angle(W,Z,X),Angle(X,Z,Y))",
      "Equals(MeasureOf(Angle(V,Z,U)),4x)",
      "Equals(MeasureOf(Angle(U,Z,Y)),2x+24)",
      "IsDiameterOf(Line(V,Y),Circle($))",
      "IsDiameterOf(Line(W,U),Circle($))",
      "Find(MeasureOf(Arc(U,Y)))"
    ],
    "output_text": "In [Circle(Z)], [Equals(Angle(W,Z,X),Angle(X,Z,Y))], [Equals(MeasureOf(Angle(V,Z,U)),4x)] [Equals(MeasureOf(Angle(U,Z,Y)),2x+24)] and [IsDiameterOf(Line(V,Y),Circle($))], [IsDiameterOf(Line(W,U),Circle($))]. [Find(MeasureOf(Arc(U,Y)))].",
    "success": true
  },
  "276": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(6)))] if [Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))].",
    "success": true
  },
  "277": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))].",
    "success": true
  },
  "278": {
    "text_logic_forms": [
      "IsAltitudeOf(Line(D,G),Shape($))",
      "IsAltitudeOf(Line(J,M),Shape($))",
      "Similar(Triangle(K,J,L),Triangle(E,D,C))",
      "Find(LengthOf(Line(D,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,C)))] if [IsAltitudeOf(Line(D,G),Shape($))], [IsAltitudeOf(Line(J,M),Shape($))] and [Similar(Triangle(K,J,L),Triangle(E,D,C))].",
    "success": true
  },
  "279": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))].",
    "success": true
  },
  "280": {
    "text_logic_forms": [
      "Find(LengthOf(Line(E,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(E,C)))].",
    "success": true
  },
  "281": {
    "text_logic_forms": [
      "UseTheorem(Pythagorean_Theorem)",
      "Find(LengthOf(HypotenuseOf(Right(Triangle($)))))"
    ],
    "output_text": "[UseTheorem(Pythagorean_Theorem)] to [Find(LengthOf(HypotenuseOf(Right(Triangle($)))))].",
    "success": true
  },
  "282": {
    "text_logic_forms": [
      "Equals(HeightOf(Triangle($)),Add(BaseOf(Polygon($)),5))",
      "Equals(AreaOf(Triangle($)),52)",
      "Find(BaseOf(Polygon($)))"
    ],
    "output_text": "[Equals(HeightOf(Triangle($)),Add(BaseOf(Polygon($)),5))]. [Equals(AreaOf(Triangle($)),52)] [Find(BaseOf(Polygon($)))].",
    "success": true
  },
  "283": {
    "text_logic_forms": [
      "Find(AreaOf(Quadrilateral($)))"
    ],
    "output_text": "[Find(AreaOf(Quadrilateral($)))].",
    "success": true
  },
  "284": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "285": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,T)))].",
    "success": true
  },
  "286": {
    "text_logic_forms": [
      "Circle(F)",
      "Find(MeasureOf(Arc(A,D,B)))"
    ],
    "output_text": "In [Circle(F)], [Find(MeasureOf(Arc(A,D,B)))].",
    "success": true
  },
  "287": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "288": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "289": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "290": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "291": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))]. Round to nearest degree.",
    "success": true
  },
  "292": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "293": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "294": {
    "text_logic_forms": [
      "Circle(F)",
      "Find(MeasureOf(Arc(A,E,D)))"
    ],
    "output_text": "In [Circle(F)], [Find(MeasureOf(Arc(A,E,D)))].",
    "success": true
  },
  "295": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "296": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "297": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "298": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(y)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(y)].",
    "success": true
  },
  "299": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))] if [Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))].",
    "success": true
  },
  "300": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "301": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "302": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "303": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "304": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(J,H),Triangle(K,L,M))",
      "IsMidsegmentOf(Line(J,P),Triangle(K,L,M))",
      "IsMidsegmentOf(Line(P,H),Triangle(K,L,M))",
      "Find(x)"
    ],
    "output_text": "[IsMidsegmentOf(Line(J,H),Triangle(K,L,M))], [IsMidsegmentOf(Line(J,P),Triangle(K,L,M))], [IsMidsegmentOf(Line(P,H),Triangle(K,L,M))],. [Find(x)].",
    "success": true
  },
  "305": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(R,T)),16)",
      "Equals(LengthOf(Line(Q,P)),24)",
      "Equals(LengthOf(Line(S,T)),9)",
      "Find(LengthOf(Line(P,S)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(R,T)),16)] [Equals(LengthOf(Line(Q,P)),24)] and [Equals(LengthOf(Line(S,T)),9)] [Find(LengthOf(Line(P,S)))].",
    "success": true
  },
  "306": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(O)),10)",
      "Equals(LengthOf(Line(A,B)),10)",
      "Equals(LengthOf(Line(A,B)),60)",
      "Find(MeasureOf(Arc(A,X)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(O)),10)] [Equals(LengthOf(Line(A,B)),10)] and [Equals(LengthOf(Line(A,B)),60)] [Find(MeasureOf(Arc(A,X)))].",
    "success": true
  },
  "307": {
    "text_logic_forms": [
      "Trapezoid(Q,R,S,T)",
      "IsMidpointOf(Point(M),LegOf(Trapezoid(Q,R,S,T)))",
      "IsMidpointOf(Point(P),LegOf(Trapezoid(Q,R,S,T)))",
      "Equals(LengthOf(Line(T,S)),2x)",
      "Equals(LengthOf(Line(P,M)),20)",
      "Equals(LengthOf(Line(Q,R)),6x)",
      "Find(x)"
    ],
    "output_text": "[Trapezoid(Q,R,S,T)], [IsMidpointOf(Point(M),LegOf(Trapezoid(Q,R,S,T)))], [IsMidpointOf(Point(P),LegOf(Trapezoid(Q,R,S,T)))],. If [Equals(LengthOf(Line(T,S)),2x)] [Equals(LengthOf(Line(P,M)),20)] and [Equals(LengthOf(Line(Q,R)),6x)] [Find(x)].",
    "success": true
  },
  "308": {
    "text_logic_forms": [
      "Circle(C)",
      "Equals(MeasureOf(Angle(H,C,G)),2x)",
      "Equals(MeasureOf(Angle(H,C,D)),6x+28)",
      "Find(MeasureOf(Arc(E,F)))"
    ],
    "output_text": "In [Circle(C)], [Equals(MeasureOf(Angle(H,C,G)),2x)] and [Equals(MeasureOf(Angle(H,C,D)),6x+28)] [Find(MeasureOf(Arc(E,F)))].",
    "success": true
  },
  "309": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "310": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Circle(S)))"
    ],
    "output_text": "[Find(CircumferenceOf(Circle(S)))]. Round to nearest hundredth.",
    "success": true
  },
  "311": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "312": {
    "text_logic_forms": [
      "Rectangle(J,K,M,N)",
      "Equals(LengthOf(Line(N,Q)),2x+3)",
      "Equals(LengthOf(Line(Q,K)),5x-9)",
      "Find(LengthOf(Line(J,Q)))"
    ],
    "output_text": " [Rectangle(J,K,M,N)]. If [Equals(LengthOf(Line(N,Q)),2x+3)] and [Equals(LengthOf(Line(Q,K)),5x-9)] [Find(LengthOf(Line(J,Q)))].",
    "success": true
  },
  "313": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "314": {
    "text_logic_forms": [
      "Find(MeasureOf(x))"
    ],
    "output_text": "[Find(MeasureOf(x))].",
    "success": true
  },
  "315": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(x)].",
    "success": true
  },
  "316": {
    "text_logic_forms": [
      "Find(LengthOf(Line(D,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,E)))].",
    "success": true
  },
  "317": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "318": {
    "text_logic_forms": [
      "Parallelogram(Q,R,S,T)",
      "Find(x)"
    ],
    "output_text": "If [Parallelogram(Q,R,S,T)], [Find(x)].",
    "success": true
  },
  "319": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "320": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "321": {
    "text_logic_forms": [
      "IsChordOf(Line(A,C),Circle($))",
      "IsChordOf(Line(D,F),Circle($))",
      "Line(A,C)",
      "Line(D,F)",
      "Equals(RadiusOf(Circle(G)),26)",
      "Find(LengthOf(Line(D,E)))"
    ],
    "output_text": "[IsChordOf(Line(A,C),Circle($))], [IsChordOf(Line(D,F),Circle($))]. [Line(A,C)] and [Line(D,F)] are equidistant from center. If [Equals(RadiusOf(Circle(G)),26)] [Find(LengthOf(Line(D,E)))].",
    "success": false
  },
  "322": {
    "text_logic_forms": [
      "Similar(Triangle(R,S,T),Triangle(U,V,W))",
      "IsMedianOf(Line(T,A),Shape($))",
      "IsMedianOf(Line(W,B),Shape($))",
      "Equals(LengthOf(Line(T,A)),8)",
      "Equals(LengthOf(Line(R,A)),3)",
      "Equals(LengthOf(Line(W,B)),3x-6)",
      "Equals(LengthOf(Line(U,B)),x+2)",
      "Find(LengthOf(Line(U,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(U,B)))] if [Similar(Triangle(R,S,T),Triangle(U,V,W))], [IsMedianOf(Line(T,A),Shape($))], [IsMedianOf(Line(W,B),Shape($))], [Equals(LengthOf(Line(T,A)),8)] [Equals(LengthOf(Line(R,A)),3)] [Equals(LengthOf(Line(W,B)),3x-6)] and [Equals(LengthOf(Line(U,B)),x+2)].",
    "success": true
  },
  "323": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "324": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Assume inscribed [Regular(Polygon($))].",
    "success": true
  },
  "325": {
    "text_logic_forms": [
      "Trapezoid(T,R,S,V)",
      "IsMidpointOf(Point(M),LegOf(Trapezoid(T,R,S,V)))",
      "IsMidpointOf(Point(N),LegOf(Trapezoid(T,R,S,V)))",
      "Equals(LengthOf(Line(V,S)),21)",
      "Equals(LengthOf(Line(T,R)),44)",
      "Find(LengthOf(Line(M,N)))"
    ],
    "output_text": "[Trapezoid(T,R,S,V)], [IsMidpointOf(Point(M),LegOf(Trapezoid(T,R,S,V)))], [IsMidpointOf(Point(N),LegOf(Trapezoid(T,R,S,V)))],. If [Equals(LengthOf(Line(V,S)),21)] and [Equals(LengthOf(Line(T,R)),44)] [Find(LengthOf(Line(M,N)))].",
    "success": true
  },
  "326": {
    "text_logic_forms": [
      "Find(TanOf(Angle(B)))"
    ],
    "output_text": "[Find(TanOf(Angle(B)))].",
    "success": true
  },
  "327": {
    "text_logic_forms": [
      "Circle(G)",
      "Equals(MeasureOf(Angle(A,G,B)),30)",
      "Perpendicular(Line(C,G),Line(G,D))",
      "Find(MeasureOf(Arc(A,B)))"
    ],
    "output_text": "In [Circle(G)], [Equals(MeasureOf(Angle(A,G,B)),30)] and [Perpendicular(Line(C,G),Line(G,D))]. [Find(MeasureOf(Arc(A,B)))].",
    "success": true
  },
  "328": {
    "text_logic_forms": [
      "Find(LengthOf(Line(U,Z)))"
    ],
    "output_text": "[Find(LengthOf(Line(U,Z)))].",
    "success": true
  },
  "329": {
    "text_logic_forms": [
      "Find(PerimeterOf(Polygon($)))"
    ],
    "output_text": "[Find(PerimeterOf(Polygon($)))] for.",
    "success": true
  },
  "330": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "331": {
    "text_logic_forms": [
      "Find(RatioOf(CosOf(Angle(M))))"
    ],
    "output_text": "[Find(RatioOf(CosOf(Angle(M))))] to nearest hundredth.",
    "success": true
  },
  "332": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "333": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "334": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),104)",
      "Equals(MeasureOf(Angle(14)),118)",
      "Find(MeasureOf(Angle(9)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(4)),104)] [Equals(MeasureOf(Angle(14)),118)] [Find(MeasureOf(Angle(9)))].",
    "success": true
  },
  "335": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "336": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(S)),3x)",
      "Equals(MeasureOf(Angle(V)),x+16)",
      "Find(MeasureOf(Angle(S)))"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(S)),3x)] and [Equals(MeasureOf(Angle(V)),x+16)] [Find(MeasureOf(Angle(S)))].",
    "success": true
  },
  "337": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "338": {
    "text_logic_forms": [
      "Find(TanOf(Angle(R)))"
    ],
    "output_text": "[Find(TanOf(Angle(R)))].",
    "success": true
  },
  "339": {
    "text_logic_forms": [
      "Kite(A,B,C,D)",
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "If  [Kite(A,B,C,D)], [Find(MeasureOf(Angle(C)))]?",
    "success": true
  },
  "340": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "341": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(x)].",
    "success": true
  },
  "342": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "343": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "344": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "345": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "346": {
    "text_logic_forms": [
      "IsAltitudeOf(Line(C,P),Shape($))",
      "BisectsAngle(Line(C,Q),Angle(A,C,B))",
      "IsMidpointOf(Point(R),Line(A,B))",
      "Equals(MeasureOf(Angle(A,P,C)),72+x)",
      "Find(x)"
    ],
    "output_text": ", [IsAltitudeOf(Line(C,P),Shape($))], [BisectsAngle(Line(C,Q),Angle(A,C,B))] and [IsMidpointOf(Point(R),Line(A,B))]. [Find(x)] if [Equals(MeasureOf(Angle(A,P,C)),72+x)].",
    "success": true
  },
  "347": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "348": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "Equals(LengthOf(Line(A,B)),Line(B,C))",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,C)))] if [Isosceles(Triangle(A,B,C))] with [Equals(LengthOf(Line(A,B)),Line(B,C))].",
    "success": true
  },
  "349": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "350": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "351": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))].",
    "success": true
  },
  "352": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(MeasureOf(Angle(2)),40)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. [Equals(MeasureOf(Angle(2)),40)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "353": {
    "text_logic_forms": [
      "Similar(Triangle(A,B,C),Triangle(D,E,F))",
      "Equals(LengthOf(Line(A,B)),5)",
      "Equals(LengthOf(Line(B,C)),6)",
      "Equals(LengthOf(Line(A,C)),7)",
      "Equals(LengthOf(Line(D,E)),3)",
      "Find(PerimeterOf(Triangle(D,E,F)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(D,E,F)))], if [Similar(Triangle(A,B,C),Triangle(D,E,F))], [Equals(LengthOf(Line(A,B)),5)] [Equals(LengthOf(Line(B,C)),6)] [Equals(LengthOf(Line(A,C)),7)] and [Equals(LengthOf(Line(D,E)),3)].",
    "success": true
  },
  "354": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "355": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "356": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(C,F)),6(3-x))",
      "Equals(LengthOf(Line(D,B)),12y-4)",
      "Find(PerimeterOf(Polygon($)))"
    ],
    "output_text": "[Find(PerimeterOf(Polygon($)))] for. [Equals(LengthOf(Line(C,F)),6(3-x))] [Equals(LengthOf(Line(D,B)),12y-4)].",
    "success": true
  },
  "357": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "358": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "359": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "360": {
    "text_logic_forms": [
      "CircumscribedTo(Square($),Circle($))",
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[CircumscribedTo(Square($),Circle($))]. [Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "361": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "362": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. (Hint: Draw auxiliary line).",
    "success": true
  },
  "363": {
    "text_logic_forms": [
      "Find(RatioOf(SinOf(Angle(B))))"
    ],
    "output_text": "[Find(RatioOf(SinOf(Angle(B))))] to nearest hundredth.",
    "success": true
  },
  "364": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(P,B)),12)",
      "Equals(LengthOf(Line(A,B)),15)",
      "Equals(MeasureOf(Angle(A,B,D)),24)",
      "Find(MeasureOf(Angle(A,C,B)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(P,B)),12)] [Equals(LengthOf(Line(A,B)),15)] and [Equals(MeasureOf(Angle(A,B,D)),24)] [Find(MeasureOf(Angle(A,C,B)))].",
    "success": true
  },
  "365": {
    "text_logic_forms": [
      "Triangle($)",
      "Find(h)"
    ],
    "output_text": "[Find(h)] in [Triangle($)].",
    "success": true
  },
  "366": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,E)))].",
    "success": true
  },
  "367": {
    "text_logic_forms": [
      "Find(RatioOf(TanOf(Angle(B))))"
    ],
    "output_text": "[Find(RatioOf(TanOf(Angle(B))))] to nearest hundredth.",
    "success": true
  },
  "368": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "369": {
    "text_logic_forms": [
      "Perpendicular(Line(B,E),Line(A,D))",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Perpendicular(Line(B,E),Line(A,D))].",
    "success": true
  },
  "370": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,R)",
      "Find(MeasureOf(Angle(M,Q,R)))"
    ],
    "output_text": "Use [Parallelogram(M,N,P,R)] to [Find(MeasureOf(Angle(M,Q,R)))].",
    "success": true
  },
  "371": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "372": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "373": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "374": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "375": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(K,L,M)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(K,L,M)))].",
    "success": true
  },
  "376": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "377": {
    "text_logic_forms": [
      "Find(LengthOf(Line(X,W)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,W)))].",
    "success": true
  },
  "378": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "379": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))",
      "Equals(MeasureOf(Angle(A,G,F)),108)",
      "Equals(LengthOf(Line(G,F)),14)",
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(D,G)),4.5)",
      "Equals(LengthOf(Line(E,F)),8)",
      "Equals(LengthOf(Line(A,B)),26)",
      "Find(PerimeterOf(Trapezoid(A,E,F,G)))"
    ],
    "output_text": "[Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))], [Equals(MeasureOf(Angle(A,G,F)),108)] [Equals(LengthOf(Line(G,F)),14)] [Equals(LengthOf(Line(A,D)),12)] [Equals(LengthOf(Line(D,G)),4.5)] [Equals(LengthOf(Line(E,F)),8)] and [Equals(LengthOf(Line(A,B)),26)] [Find(PerimeterOf(Trapezoid(A,E,F,G)))].",
    "success": true
  },
  "380": {
    "text_logic_forms": [
      "Rhombus(W,X,Z,Y)",
      "Equals(MeasureOf(Angle(X,Z,Y)),56)",
      "Find(MeasureOf(Angle(Y,W,Z)))"
    ],
    "output_text": " [Rhombus(W,X,Z,Y)]. If [Equals(MeasureOf(Angle(X,Z,Y)),56)] [Find(MeasureOf(Angle(Y,W,Z)))].",
    "success": true
  },
  "381": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "382": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "383": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "384": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(S)),30)",
      "Equals(DiameterOf(Circle(R)),20)",
      "Equals(LengthOf(Line(D,S)),9)",
      "Find(LengthOf(Line(C,D)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(S)),30)] [Equals(DiameterOf(Circle(R)),20)] and [Equals(LengthOf(Line(D,S)),9)] [Find(LengthOf(Line(C,D)))].",
    "success": true
  },
  "385": {
    "text_logic_forms": [
      "Find(ScaleFactorOf(Shape(W),Shape(W')))"
    ],
    "output_text": "[Find(ScaleFactorOf(Shape(W),Shape(W')))].",
    "success": true
  },
  "386": {
    "text_logic_forms": [
      "Equals(x,7\\sqrt{3})",
      "Find(y)"
    ],
    "output_text": "If [Equals(x,7\\sqrt{3})] [Find(y)].",
    "success": true
  },
  "387": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "388": {
    "text_logic_forms": [
      "Triangle(P,Q,R)",
      "Parallel(Line(S,T),Line(R,Q))",
      "Equals(LengthOf(Line(P,T)),7.5)",
      "Equals(LengthOf(Line(T,Q)),3)",
      "Equals(LengthOf(Line(S,R)),2.5)",
      "Find(LengthOf(Line(P,S)))"
    ],
    "output_text": "In [Triangle(P,Q,R)], [Parallel(Line(S,T),Line(R,Q))]. If [Equals(LengthOf(Line(P,T)),7.5)] [Equals(LengthOf(Line(T,Q)),3)] and [Equals(LengthOf(Line(S,R)),2.5)] [Find(LengthOf(Line(P,S)))].",
    "success": true
  },
  "389": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(U,J)),9)",
      "Equals(LengthOf(Line(V,J)),3)",
      "Equals(LengthOf(Line(Z,T)),18)",
      "Find(LengthOf(Line(J,T)))"
    ],
    "output_text": "[Equals(LengthOf(Line(U,J)),9)] [Equals(LengthOf(Line(V,J)),3)] and [Equals(LengthOf(Line(Z,T)),18)] [Find(LengthOf(Line(J,T)))].",
    "success": true
  },
  "390": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "391": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "392": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(A)),8)",
      "Equals(DiameterOf(Circle(B)),18)",
      "Equals(DiameterOf(Circle(C)),11)",
      "Find(LengthOf(Line(F,B)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(A)),8)] [Equals(DiameterOf(Circle(B)),18)] [Equals(DiameterOf(Circle(C)),11)] [Find(LengthOf(Line(F,B)))].",
    "success": true
  },
  "393": {
    "text_logic_forms": [
      "IsMedianOf(Line(W,P),Shape($))",
      "BisectsAngle(Line(W,P),Angle($))",
      "Equals(LengthOf(Line(A,P)),3y+11)",
      "Equals(LengthOf(Line(P,H)),7y-5)",
      "Equals(MeasureOf(Angle(H,W,P)),x+12)",
      "Equals(MeasureOf(Angle(P,A,W)),3x-2)",
      "Equals(MeasureOf(Angle(H,W,A)),4x-16)",
      "Find(y)"
    ],
    "output_text": "If [IsMedianOf(Line(W,P),Shape($))], [BisectsAngle(Line(W,P),Angle($))], [Equals(LengthOf(Line(A,P)),3y+11)] [Equals(LengthOf(Line(P,H)),7y-5)] [Equals(MeasureOf(Angle(H,W,P)),x+12)] [Equals(MeasureOf(Angle(P,A,W)),3x-2)] and [Equals(MeasureOf(Angle(H,W,A)),4x-16)] [Find(y)].",
    "success": true
  },
  "394": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(8)),96)",
      "Equals(MeasureOf(Angle(12)),42)",
      "Find(MeasureOf(Angle(9)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(8)),96)] and [Equals(MeasureOf(Angle(12)),42)] [Find(MeasureOf(Angle(9)))].",
    "success": true
  },
  "395": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))].",
    "success": true
  },
  "396": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] in [Parallelogram(A,B,C,D)].",
    "success": true
  },
  "397": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(P,B)),12)",
      "Equals(LengthOf(Line(A,B)),15)",
      "Equals(MeasureOf(Angle(A,B,D)),24)",
      "Find(LengthOf(Line(A,P)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(P,B)),12)] [Equals(LengthOf(Line(A,B)),15)] and [Equals(MeasureOf(Angle(A,B,D)),24)] [Find(LengthOf(Line(A,P)))].",
    "success": true
  },
  "398": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(P,Q)),Line(U,Q))",
      "Equals(LengthOf(Line(P,R)),Line(R,T))",
      "Equals(MeasureOf(Angle(P,Q,U)),40)",
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(P,Q)),Line(U,Q))], [Equals(LengthOf(Line(P,R)),Line(R,T))] and [Equals(MeasureOf(Angle(P,Q,U)),40)] [Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "399": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(LengthOf(Line(G,K)),14)",
      "Equals(MeasureOf(Arc(G,H,K)),142)",
      "Find(MeasureOf(Arc(K,M)))"
    ],
    "output_text": "In [Circle(F)], [Equals(LengthOf(Line(G,K)),14)] and [Equals(MeasureOf(Arc(G,H,K)),142)] [Find(MeasureOf(Arc(K,M)))].",
    "success": true
  },
  "400": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "401": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(C,D)))"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(C,D)))].",
    "success": true
  },
  "402": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),104)",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Equals(AreaOf(Shape(A)),104)].",
    "success": true
  },
  "403": {
    "text_logic_forms": [
      "Similar(Pentagon(A,B,C,D,E),Pentagon(P,Q,R,S,T))",
      "Find(PerimeterOf(Pentagon(A,B,C,D,E)))"
    ],
    "output_text": "If [Similar(Pentagon(A,B,C,D,E),Pentagon(P,Q,R,S,T))], [Find(PerimeterOf(Pentagon(A,B,C,D,E)))].",
    "success": true
  },
  "404": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(J,K,L)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(J,K,L)))].",
    "success": true
  },
  "405": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "406": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "407": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "408": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(P,Q)),Line(U,Q))",
      "Equals(MeasureOf(Angle(P)),32)",
      "Find(MeasureOf(Angle(P,U,Q)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(P,Q)),Line(U,Q))] and [Equals(MeasureOf(Angle(P)),32)] [Find(MeasureOf(Angle(P,U,Q)))].",
    "success": true
  },
  "409": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(W,X))",
      "Equals(LengthOf(Line(W,X)),10)",
      "Equals(LengthOf(Line(X,Y)),6)",
      "Equals(LengthOf(Line(W,Y)),8)",
      "Equals(LengthOf(Line(R,Y)),5)",
      "Equals(LengthOf(Line(P,S)),3)",
      "Find(LengthOf(Line(P,Q)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(W,X))], [Equals(LengthOf(Line(W,X)),10)] [Equals(LengthOf(Line(X,Y)),6)] [Equals(LengthOf(Line(W,Y)),8)] [Equals(LengthOf(Line(R,Y)),5)] and [Equals(LengthOf(Line(P,S)),3)] [Find(LengthOf(Line(P,Q)))].",
    "success": true
  },
  "410": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "411": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))]. Round to nearest degree.",
    "success": true
  },
  "412": {
    "text_logic_forms": [
      "Parallel(Line(Q,R),Line(T,S))",
      "Parallel(Line(Q,T),Line(R,S))",
      "Equals(MeasureOf(Angle(1)),131)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": ", [Parallel(Line(Q,R),Line(T,S))], [Parallel(Line(Q,T),Line(R,S))] and [Equals(MeasureOf(Angle(1)),131)] [Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "413": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "414": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(C,E)),t-2)",
      "Equals(LengthOf(Line(E,B)),t+1)",
      "Equals(LengthOf(Line(C,D)),2)",
      "Equals(LengthOf(Line(C,A)),10)",
      "Find(t)"
    ],
    "output_text": "If [Equals(LengthOf(Line(C,E)),t-2)] [Equals(LengthOf(Line(E,B)),t+1)] [Equals(LengthOf(Line(C,D)),2)] and [Equals(LengthOf(Line(C,A)),10)] [Find(t)].",
    "success": true
  },
  "415": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A,C,D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,C,D)))].",
    "success": true
  },
  "416": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(Q,T,S)),238)",
      "Find(MeasureOf(Arc(R,Q,S)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(R,Q,S)))] if [Equals(MeasureOf(Arc(Q,T,S)),238)].",
    "success": true
  },
  "417": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "418": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "419": {
    "text_logic_forms": [
      "UseTheorem(Pythagorean_Triple)",
      "Find(x)"
    ],
    "output_text": "[UseTheorem(Pythagorean_Triple)] to [Find(x)].",
    "success": true
  },
  "420": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),43)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),43)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "421": {
    "text_logic_forms": [
      "Parallelogram(W,X,Y,Z)",
      "Find(LengthOf(Line(W,Z)))"
    ],
    "output_text": "Use [Parallelogram(W,X,Y,Z)] to [Find(LengthOf(Line(W,Z)))].",
    "success": true
  },
  "422": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "423": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "424": {
    "text_logic_forms": [
      "Rectangle(L,M,N,P)",
      "Parallelogram(L,K,M,J)",
      "Equals(LengthOf(Line(M,K)),6x)",
      "Equals(LengthOf(Line(K,L)),3x+2y)",
      "Equals(LengthOf(Line(J,N)),14-x)",
      "Find(y)"
    ],
    "output_text": "Use [Rectangle(L,M,N,P)], [Parallelogram(L,K,M,J)] to. If [Equals(LengthOf(Line(M,K)),6x)] [Equals(LengthOf(Line(K,L)),3x+2y)] and [Equals(LengthOf(Line(J,N)),14-x)] [Find(y)].",
    "success": true
  },
  "425": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "426": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "427": {
    "text_logic_forms": [
      "CircumscribedTo(Quadrilateral(R,S,T,U),Circle(J))",
      "Equals(PerimeterOf(Polygon($)),18)",
      "Find(x)"
    ],
    "output_text": "[CircumscribedTo(Quadrilateral(R,S,T,U),Circle(J))]. If [Equals(PerimeterOf(Polygon($)),18)] [Find(x)].",
    "success": true
  },
  "428": {
    "text_logic_forms": [
      "Quadrilateral(A,B,C,D)",
      "Parallel(Line(A,B),Line(D,C))",
      "Equals(MeasureOf(Angle(B)),60)",
      "Equals(MeasureOf(Angle(D)),45)",
      "Equals(LengthOf(Line(B,C)),8)",
      "Equals(LengthOf(Line(A,B)),24)",
      "Find(PerimeterOf(Polygon($)))"
    ],
    "output_text": "[Quadrilateral(A,B,C,D)], with [Parallel(Line(A,B),Line(D,C))], [Equals(MeasureOf(Angle(B)),60)] [Equals(MeasureOf(Angle(D)),45)] [Equals(LengthOf(Line(B,C)),8)] and [Equals(LengthOf(Line(A,B)),24)] [Find(PerimeterOf(Polygon($)))].",
    "success": true
  },
  "429": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Shape($)))"
    ],
    "output_text": "[Find(CircumferenceOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "430": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest hundredth.",
    "success": true
  },
  "431": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram(E,F,G,H)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram(E,F,G,H)))].",
    "success": true
  },
  "432": {
    "text_logic_forms": [
      "Perpendicular(Line(A,B),Line(B,C))",
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(8)))] if [Perpendicular(Line(A,B),Line(B,C))].",
    "success": true
  },
  "433": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(S,P)),4)",
      "Equals(LengthOf(Line(P,T)),6)",
      "Equals(LengthOf(Line(Q,R)),12)",
      "Find(LengthOf(Line(S,Q)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(S,P)),4)] [Equals(LengthOf(Line(P,T)),6)] and [Equals(LengthOf(Line(Q,R)),12)] [Find(LengthOf(Line(S,Q)))].",
    "success": true
  },
  "434": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "435": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),6)",
      "Equals(LengthOf(Line(A,F)),8)",
      "Equals(LengthOf(Line(B,C)),x)",
      "Equals(LengthOf(Line(C,D)),y)",
      "Equals(LengthOf(Line(D,E)),2y-3)",
      "Equals(LengthOf(Line(F,E)),x+\\frac{10}{3})",
      "Find(LengthOf(Line(C,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(C,D)))] if [Equals(LengthOf(Line(A,B)),6)] [Equals(LengthOf(Line(A,F)),8)] [Equals(LengthOf(Line(B,C)),x)] [Equals(LengthOf(Line(C,D)),y)] [Equals(LengthOf(Line(D,E)),2y-3)] and [Equals(LengthOf(Line(F,E)),x+\\frac{10}{3})].",
    "success": true
  },
  "436": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(P,Q,S)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(P,Q,S)))].",
    "success": true
  },
  "437": {
    "text_logic_forms": [
      "Equals(SumOf(CircumferenceOf(Circle(H)),Circle(J),Circle(K)),56\\pi)",
      "Find(LengthOf(Line(K,J)))"
    ],
    "output_text": "[Equals(SumOf(CircumferenceOf(Circle(H)),Circle(J),Circle(K)),56\\pi)] [Find(LengthOf(Line(K,J)))].",
    "success": true
  },
  "438": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "439": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,S)))].",
    "success": true
  },
  "440": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "441": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "442": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "443": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "444": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "445": {
    "text_logic_forms": [
      "Find(AreaOf(Trapezoid($)))"
    ],
    "output_text": "[Find(AreaOf(Trapezoid($)))].",
    "success": true
  },
  "446": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(B,D,C)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(B,D,C)))].",
    "success": true
  },
  "447": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(A)),10)",
      "Equals(DiameterOf(Circle(B)),20)",
      "Equals(DiameterOf(Circle(C)),14)",
      "Find(LengthOf(Line(B,Y)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(A)),10)] [Equals(DiameterOf(Circle(B)),20)] [Equals(DiameterOf(Circle(C)),14)] [Find(LengthOf(Line(B,Y)))].",
    "success": true
  },
  "448": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "449": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "450": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "451": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest hundredth, if necessary.",
    "success": true
  },
  "452": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(J,M,K)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(J,M,K)))].",
    "success": true
  },
  "453": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "454": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(MeasureOf(Arc(E,N)),66)",
      "Equals(MeasureOf(Angle(G,P,M)),89)",
      "Find(MeasureOf(Angle(G,N,M)))"
    ],
    "output_text": "In [Circle(P)], [Equals(MeasureOf(Arc(E,N)),66)] and [Equals(MeasureOf(Angle(G,P,M)),89)] [Find(MeasureOf(Angle(G,N,M)))].",
    "success": true
  },
  "455": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "456": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),177)",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Equals(AreaOf(Shape(A)),177)].",
    "success": true
  },
  "457": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "458": {
    "text_logic_forms": [
      "Parallelogram(Q,R,S,T)",
      "Find(y)"
    ],
    "output_text": "If [Parallelogram(Q,R,S,T)], [Find(y)].",
    "success": true
  },
  "459": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "460": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))].",
    "success": true
  },
  "461": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "462": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "463": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round angle measure to nearest degree.",
    "success": true
  },
  "464": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "465": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] and so [Parallelogram($)]",
    "success": true
  },
  "466": {
    "text_logic_forms": [
      "Kite(A,B,C,D)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "If [Kite(A,B,C,D)], [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "467": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "468": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "469": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R,C,L)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R,C,L)))].",
    "success": true
  },
  "470": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "471": {
    "text_logic_forms": [
      "Find(AreaOf(Trapezoid($)))"
    ],
    "output_text": "[Find(AreaOf(Trapezoid($)))].",
    "success": true
  },
  "472": {
    "text_logic_forms": [
      "Isosceles(Trapezoid($))",
      "Equals(PerimeterOf(Polygon($)),74)",
      "Find(AreaOf(Polygon($)))"
    ],
    "output_text": "lengths of bases of [Isosceles(Trapezoid($))] are. If [Equals(PerimeterOf(Polygon($)),74)] [Find(AreaOf(Polygon($)))]?",
    "success": true
  },
  "473": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(R,T)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(R,T)))].",
    "success": true
  },
  "474": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(Y,C)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(Y,C)))].",
    "success": true
  },
  "475": {
    "text_logic_forms": [
      "Parallel(Line(e),Line(f))",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallel(Line(e),Line(f))].",
    "success": true
  },
  "476": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "477": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)]. Round to nearest tenth.",
    "success": true
  },
  "478": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(E,X)),24)",
      "Equals(LengthOf(Line(D,E)),7)",
      "Find(LengthOf(Line(A,X)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,X)))] if [Equals(LengthOf(Line(E,X)),24)] and [Equals(LengthOf(Line(D,E)),7)].",
    "success": true
  },
  "479": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "480": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "481": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "482": {
    "text_logic_forms": [
      "Rectangle(W,X,Y,Z)",
      "Equals(LengthOf(Line(X,W)),3)",
      "Equals(LengthOf(Line(W,Z)),4)",
      "Equals(LengthOf(Line(X,Z)),b)",
      "Find(LengthOf(Line(Y,W)))"
    ],
    "output_text": " [Rectangle(W,X,Y,Z)]. If [Equals(LengthOf(Line(X,W)),3)] [Equals(LengthOf(Line(W,Z)),4)] and [Equals(LengthOf(Line(X,Z)),b)] [Find(LengthOf(Line(Y,W)))].",
    "success": true
  },
  "483": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] in [Parallelogram($)].",
    "success": true
  },
  "484": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "485": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "486": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(9)),2x-4)",
      "Equals(MeasureOf(Angle(10)),2x+4)",
      "Find(MeasureOf(Angle(9)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(9)),2x-4)] [Equals(MeasureOf(Angle(10)),2x+4)] [Find(MeasureOf(Angle(9)))].",
    "success": true
  },
  "487": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "488": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(P)),5)",
      "Equals(LengthOf(Line(P,R)),3)",
      "Find(LengthOf(Line(Q,S)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(P)),5)] and [Equals(LengthOf(Line(P,R)),3)] [Find(LengthOf(Line(Q,S)))].",
    "success": true
  },
  "489": {
    "text_logic_forms": [
      "Find(AreaOf(Trapezoid($)))"
    ],
    "output_text": "[Find(AreaOf(Trapezoid($)))].",
    "success": true
  },
  "490": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "491": {
    "text_logic_forms": [
      "IsIncenterOf(Point(H),Triangle(A,B,C))",
      "Find(LengthOf(Line(D,H)))"
    ],
    "output_text": "[IsIncenterOf(Point(H),Triangle(A,B,C))]. [Find(LengthOf(Line(D,H)))].",
    "success": true
  },
  "492": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(P,B)),12)",
      "Equals(LengthOf(Line(A,B)),15)",
      "Equals(MeasureOf(Angle(A,B,D)),24)",
      "Find(LengthOf(Line(C,P)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(P,B)),12)] [Equals(LengthOf(Line(A,B)),15)] and [Equals(MeasureOf(Angle(A,B,D)),24)] [Find(LengthOf(Line(C,P)))].",
    "success": true
  },
  "493": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "494": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),3x+40)",
      "Equals(MeasureOf(Angle(2)),2(y-10))",
      "Equals(MeasureOf(Angle(3)),2x+70)",
      "Find(x)"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(1)),3x+40)] [Equals(MeasureOf(Angle(2)),2(y-10))] and [Equals(MeasureOf(Angle(3)),2x+70)] [Find(x)].",
    "success": true
  },
  "495": {
    "text_logic_forms": [],
    "output_text": "A plane travels from Des Moines to Phoenix, on to Atlanta and back to Des Moines,. Find distance in from Atlanta to Des Moines if trip was 3482.",
    "success": false
  },
  "496": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,Q)",
      "Equals(MeasureOf(Angle(M)),10x)",
      "Equals(MeasureOf(Angle(N)),20x)",
      "Find(MeasureOf(Angle(P)))"
    ],
    "output_text": "[Parallelogram(M,N,P,Q)] with [Equals(MeasureOf(Angle(M)),10x)] and [Equals(MeasureOf(Angle(N)),20x)] [Find(MeasureOf(Angle(P)))].",
    "success": true
  },
  "497": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),153)",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Equals(AreaOf(Shape(A)),153)].",
    "success": true
  },
  "498": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "499": {
    "text_logic_forms": [
      "Rectangle(M,N,O,P)",
      "Equals(LengthOf(Line(M,O)),6x+14)",
      "Equals(LengthOf(Line(P,N)),9x+5)",
      "Find(x)"
    ],
    "output_text": " [Rectangle(M,N,O,P)]. If [Equals(LengthOf(Line(M,O)),6x+14)] and [Equals(LengthOf(Line(P,N)),9x+5)] [Find(x)].",
    "success": true
  },
  "500": {
    "text_logic_forms": [
      "Quadrilateral(A,B,C,D)",
      "Find(MeasureOf(Angle(D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D)))] of [Quadrilateral(A,B,C,D)].",
    "success": true
  },
  "501": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(9)),75)",
      "Find(MeasureOf(Angle(12)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(9)),75)] [Find(MeasureOf(Angle(12)))].",
    "success": true
  },
  "502": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(J,K)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(J,K)))].",
    "success": true
  },
  "503": {
    "text_logic_forms": [
      "Triangle($)",
      "Find(z)"
    ],
    "output_text": "[Triangle($)]. [Find(z)] to nearest tenth.",
    "success": true
  },
  "504": {
    "text_logic_forms": [
      "RightAngle(Angle(R,S,T))",
      "Perpendicular(Line(S,U),Line(R,T))",
      "Perpendicular(Line(U,V),Line(S,T))",
      "Equals(MeasureOf(Angle(R,T,S)),47)",
      "Find(MeasureOf(Angle(T,U,V)))"
    ],
    "output_text": "If [RightAngle(Angle(R,S,T))], [Perpendicular(Line(S,U),Line(R,T))], [Perpendicular(Line(U,V),Line(S,T))] and [Equals(MeasureOf(Angle(R,T,S)),47)] [Find(MeasureOf(Angle(T,U,V)))].",
    "success": true
  },
  "505": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "506": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,D)),24)",
      "Find(LengthOf(Line(C,N)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,D)),24)] [Find(LengthOf(Line(C,N)))].",
    "success": true
  },
  "507": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "508": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(U)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(U)))].",
    "success": true
  },
  "509": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(J,L,K)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(J,L,K)))].",
    "success": true
  },
  "510": {
    "text_logic_forms": [
      "Find(RatioOf(AreaOf(Triangle(A,B,C)),AreaOf(Square(B,C,D,E))))"
    ],
    "output_text": "[Find(RatioOf(AreaOf(Triangle(A,B,C)),AreaOf(Square(B,C,D,E))))].",
    "success": true
  },
  "511": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(A)),10)",
      "Equals(DiameterOf(Circle(B)),30)",
      "Equals(DiameterOf(Circle(C)),10)",
      "Equals(LengthOf(Line(A,Z)),Line(C,W))",
      "Equals(LengthOf(Line(C,W)),2)",
      "Find(LengthOf(Line(B,X)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(A)),10)] [Equals(DiameterOf(Circle(B)),30)] [Equals(DiameterOf(Circle(C)),10)] [Find(LengthOf(Line(B,X)))] if [Equals(LengthOf(Line(A,Z)),Line(C,W))] and [Equals(LengthOf(Line(C,W)),2)].",
    "success": true
  },
  "512": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(C,E)))"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(C,E)))].",
    "success": true
  },
  "513": {
    "text_logic_forms": [
      "Find(RatioOf(TanOf(Angle(A))))"
    ],
    "output_text": "[Find(RatioOf(TanOf(Angle(A))))] to nearest hundredth.",
    "success": true
  },
  "514": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(R,T)),15)",
      "Equals(LengthOf(Line(Q,P)),21)",
      "Equals(LengthOf(Line(P,T)),8)",
      "Find(LengthOf(Line(T,S)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(R,T)),15)] [Equals(LengthOf(Line(Q,P)),21)] and [Equals(LengthOf(Line(P,T)),8)] [Find(LengthOf(Line(T,S)))].",
    "success": true
  },
  "515": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(r)"
    ],
    "output_text": "[Find(r)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "516": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "517": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(D,G,F)),53)",
      "Equals(MeasureOf(Angle(A,G,C)),40)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))] if [Equals(MeasureOf(Angle(D,G,F)),53)] and [Equals(MeasureOf(Angle(A,G,C)),40)].",
    "success": true
  },
  "518": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "519": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "520": {
    "text_logic_forms": [
      "Equals(r,4)",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))] if [Equals(r,4)].",
    "success": true
  },
  "521": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))].",
    "success": true
  },
  "522": {
    "text_logic_forms": [
      "Congruent(Triangle(P,Q,S),Triangle(R,Q,S))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(P,Q,S),Triangle(R,Q,S))]. [Find(x)].",
    "success": true
  },
  "523": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]? Round to nearest tenth if necessary.",
    "success": true
  },
  "524": {
    "text_logic_forms": [
      "Circle(J)",
      "Equals(LengthOf(Line(G,H)),9)",
      "Equals(LengthOf(Line(K,L)),4x+1)",
      "Find(x)"
    ],
    "output_text": "In [Circle(J)], [Equals(LengthOf(Line(G,H)),9)] and [Equals(LengthOf(Line(K,L)),4x+1)] [Find(x)].",
    "success": true
  },
  "525": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "526": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "527": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "528": {
    "text_logic_forms": [
      "Equals(AreaOf(Triangle(C,D,E)),336)",
      "Find(LengthOf(Line(C,E)))"
    ],
    "output_text": "[Equals(AreaOf(Triangle(C,D,E)),336)] [Find(LengthOf(Line(C,E)))].",
    "success": true
  },
  "529": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "530": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "531": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "532": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "533": {
    "text_logic_forms": [
      "Regular(Pentagon($))",
      "Find(MeasureOf(Angle($)))"
    ],
    "output_text": "[Find(MeasureOf(Angle($)))] of [Regular(Pentagon($))]?",
    "success": true
  },
  "534": {
    "text_logic_forms": [
      "IsPerpendicularBisectorOf(Line(W,P),Line($))",
      "Equals(MeasureOf(Angle(W,H,A)),8q+17)",
      "Equals(MeasureOf(Angle(H,W,P)),10+q)",
      "Equals(LengthOf(Line(A,P)),6r+4)",
      "Equals(LengthOf(Line(P,H)),22+3r)",
      "Find(q)"
    ],
    "output_text": "If [IsPerpendicularBisectorOf(Line(W,P),Line($))], [Equals(MeasureOf(Angle(W,H,A)),8q+17)] [Equals(MeasureOf(Angle(H,W,P)),10+q)] [Equals(LengthOf(Line(A,P)),6r+4)] and [Equals(LengthOf(Line(P,H)),22+3r)] [Find(q)].",
    "success": true
  },
  "535": {
    "text_logic_forms": [
      "Triangle(A,B,C)",
      "IsMedianOf(Line(B,D),Triangle(A,B,C))",
      "Equals(LengthOf(Line(A,D)),3x+5)",
      "Equals(LengthOf(Line(C,D)),5x-1)",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Triangle(A,B,C)], [IsMedianOf(Line(B,D),Triangle(A,B,C))]. If [Equals(LengthOf(Line(A,D)),3x+5)] and [Equals(LengthOf(Line(C,D)),5x-1)] [Find(LengthOf(Line(A,C)))].",
    "success": true
  },
  "536": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "537": {
    "text_logic_forms": [
      "Trapezoid(C,D,F,G)",
      "IsMedianOf(Line(H,E),Trapezoid(C,D,F,G))",
      "IsMedianOf(Line(W,X),Quadrilateral(C,D,E,H))",
      "Find(LengthOf(Line(W,X)))"
    ],
    "output_text": "[Trapezoid(C,D,F,G)], [IsMedianOf(Line(H,E),Trapezoid(C,D,F,G))]. Let [IsMedianOf(Line(W,X),Quadrilateral(C,D,E,H))]. [Find(LengthOf(Line(W,X)))].",
    "success": true
  },
  "538": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "539": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))].",
    "success": true
  },
  "540": {
    "text_logic_forms": [
      "IsIncenterOf(Point(S),Triangle(J,P,L))",
      "Find(MeasureOf(Angle(M,P,Q)))"
    ],
    "output_text": "[IsIncenterOf(Point(S),Triangle(J,P,L))]. [Find(MeasureOf(Angle(M,P,Q)))].",
    "success": true
  },
  "541": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram(T,R,V,W)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram(T,R,V,W)))].",
    "success": true
  },
  "542": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "543": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "544": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(y)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(y)].",
    "success": true
  },
  "545": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "546": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "Equilateral(Triangle(D,C,E))",
      "Isosceles(Triangle(F,C,G))",
      "Equals(Angle(5),Angle(C))",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Isosceles(Triangle(A,B,C))], [Equilateral(Triangle(D,C,E))] and [Isosceles(Triangle(F,C,G))]. [Find(MeasureOf(Angle(5)))], [Equals(Angle(5),Angle(C))].",
    "success": true
  },
  "547": {
    "text_logic_forms": [
      "Rectangle(L,M,N,P)",
      "Parallelogram(L,K,M,J)",
      "Equals(MeasureOf(Angle(L,M,P)),MeasureOf(Angle(P,M,N)))",
      "Find(MeasureOf(Angle(P,J,L)))"
    ],
    "output_text": "Use [Rectangle(L,M,N,P)], [Parallelogram(L,K,M,J)] to. If [Equals(MeasureOf(Angle(L,M,P)),MeasureOf(Angle(P,M,N)))], [Find(MeasureOf(Angle(P,J,L)))].",
    "success": true
  },
  "548": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "549": {
    "text_logic_forms": [
      "Perpendicular(Line(A,B),Line(B,C))",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(6)))] if [Perpendicular(Line(A,B),Line(B,C))].",
    "success": true
  },
  "550": {
    "text_logic_forms": [
      "Circle(R)",
      "Equals(LengthOf(Line(S,U)),16.2)",
      "Find(LengthOf(Line(R,T)))"
    ],
    "output_text": "In [Circle(R)]. If [Equals(LengthOf(Line(S,U)),16.2)] [Find(LengthOf(Line(R,T)))]?",
    "success": true
  },
  "551": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "552": {
    "text_logic_forms": [
      "Similar(Triangle(J,L,M),Triangle(Q,S,T))",
      "Find(y)"
    ],
    "output_text": "[Find(y)] if [Similar(Triangle(J,L,M),Triangle(Q,S,T))].",
    "success": true
  },
  "553": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "554": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "555": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "556": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "557": {
    "text_logic_forms": [
      "Rhombus(L,M,P,Q)",
      "Equals(MeasureOf(Angle(Q,L,M)),2x^{2}-10)",
      "Equals(MeasureOf(Angle(Q,P,M)),8x)",
      "Equals(LengthOf(Line(M,P)),10)",
      "Find(MeasureOf(Angle(L,Q,M)))"
    ],
    "output_text": "In [Rhombus(L,M,P,Q)], [Equals(MeasureOf(Angle(Q,L,M)),2x^{2}-10)] [Equals(MeasureOf(Angle(Q,P,M)),8x)] and [Equals(LengthOf(Line(M,P)),10)] [Find(MeasureOf(Angle(L,Q,M)))].",
    "success": true
  },
  "558": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "559": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "560": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,S)))].",
    "success": true
  },
  "561": {
    "text_logic_forms": [
      "Equals(x,7\\sqrt{3})",
      "Find(b)"
    ],
    "output_text": "If [Equals(x,7\\sqrt{3})] [Find(b)].",
    "success": true
  },
  "562": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "563": {
    "text_logic_forms": [
      "Find(ScaleFactorOf(Shape(W),Shape(W')))"
    ],
    "output_text": "[Find(ScaleFactorOf(Shape(W),Shape(W')))].",
    "success": true
  },
  "564": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(J,H),Triangle(K,L,M))",
      "IsMidsegmentOf(Line(J,P),Triangle(K,L,M))",
      "IsMidsegmentOf(Line(P,H),Triangle(K,L,M))",
      "Find(x)"
    ],
    "output_text": "[IsMidsegmentOf(Line(J,H),Triangle(K,L,M))], [IsMidsegmentOf(Line(J,P),Triangle(K,L,M))], [IsMidsegmentOf(Line(P,H),Triangle(K,L,M))],. [Find(x)].",
    "success": true
  },
  "565": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth.",
    "success": true
  },
  "566": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(5)),68)",
      "Equals(MeasureOf(Angle(3)),3y-2)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] if [Equals(MeasureOf(Angle(5)),68)] and [Equals(MeasureOf(Angle(3)),3y-2)].",
    "success": true
  },
  "567": {
    "text_logic_forms": [
      "Parallel(Line(a),Line(b))",
      "Parallel(Line(c),Line(d))",
      "Equals(MeasureOf(Angle(4)),57)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Parallel(Line(a),Line(b))], [Parallel(Line(c),Line(d))] and [Equals(MeasureOf(Angle(4)),57)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "568": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(J,H),Triangle(K,L,M))",
      "IsMidsegmentOf(Line(J,P),Triangle(K,L,M))",
      "IsMidsegmentOf(Line(P,H),Triangle(K,L,M))",
      "Find(x)"
    ],
    "output_text": "[IsMidsegmentOf(Line(J,H),Triangle(K,L,M))], [IsMidsegmentOf(Line(J,P),Triangle(K,L,M))], [IsMidsegmentOf(Line(P,H),Triangle(K,L,M))],. [Find(x)].",
    "success": true
  },
  "569": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "570": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))",
      "Equals(MeasureOf(Angle(A,G,F)),108)",
      "Equals(LengthOf(Line(G,F)),14)",
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(D,G)),4.5)",
      "Equals(LengthOf(Line(E,F)),8)",
      "Equals(LengthOf(Line(A,B)),26)",
      "Find(LengthOf(Line(A,G)))"
    ],
    "output_text": "[Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))], [Equals(MeasureOf(Angle(A,G,F)),108)] [Equals(LengthOf(Line(G,F)),14)] [Equals(LengthOf(Line(A,D)),12)] [Equals(LengthOf(Line(D,G)),4.5)] [Equals(LengthOf(Line(E,F)),8)] and [Equals(LengthOf(Line(A,B)),26)] [Find(LengthOf(Line(A,G)))].",
    "success": true
  },
  "571": {
    "text_logic_forms": [
      "Trapezoid(Q,R,T,U)",
      "IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))",
      "IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))",
      "Equals(LengthOf(Line(T,U)),26)",
      "Equals(LengthOf(Line(S,V)),17)",
      "Find(LengthOf(Line(Q,R)))"
    ],
    "output_text": "[Trapezoid(Q,R,T,U)], [IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))], [IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))],. If [Equals(LengthOf(Line(T,U)),26)] and [Equals(LengthOf(Line(S,V)),17)] [Find(LengthOf(Line(Q,R)))].",
    "success": true
  },
  "572": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "573": {
    "text_logic_forms": [
      "Tangent(Line(A,B),Circle(D))",
      "Tangent(Line(C,B),Circle(D))",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line(A,B),Circle(D))], [Tangent(Line(C,B),Circle(D))]. [Find(x)].",
    "success": true
  },
  "574": {
    "text_logic_forms": [
      "Equilateral(Triangle(F,G,H))",
      "Triangle($)",
      "Find(LengthOf(Line(F,G)))"
    ],
    "output_text": "[Equilateral(Triangle(F,G,H))] [Triangle($)]. [Find(LengthOf(Line(F,G)))].",
    "success": true
  },
  "575": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(G)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(G)))].",
    "success": true
  },
  "576": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(M,D)),7)",
      "Find(LengthOf(Line(R,I)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(M,D)),7)] [Find(LengthOf(Line(R,I)))].",
    "success": true
  },
  "577": {
    "text_logic_forms": [
      "IsDiameterOf(Line(G,J),Circle(K))",
      "Find(MeasureOf(Arc(G,H)))"
    ],
    "output_text": "[IsDiameterOf(Line(G,J),Circle(K))]. [Find(MeasureOf(Arc(G,H)))].",
    "success": true
  },
  "578": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "579": {
    "text_logic_forms": [
      "Square($)",
      "Equals(SideOf(Square($)),9)",
      "Circle(J)",
      "Find(CircumferenceOf(Circle(J)))"
    ],
    "output_text": "[Square($)], [Equals(SideOf(Square($)),9)] is inscribed in [Circle(J)]. [Find(CircumferenceOf(Circle(J)))].",
    "success": true
  },
  "580": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,C,D,F),Quadrilateral(V,W,Y,Z))",
      "Find(x)"
    ],
    "output_text": "[Similar(Quadrilateral(A,C,D,F),Quadrilateral(V,W,Y,Z))]. [Find(x)].",
    "success": true
  },
  "581": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "582": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(MeasureOf(Angle(2)),40)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. [Equals(MeasureOf(Angle(2)),40)] [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "583": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "584": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(B,C,D)),54)",
      "Find(MeasureOf(Angle(B,A,C)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(MeasureOf(Angle(B,C,D)),54)] [Find(MeasureOf(Angle(B,A,C)))].",
    "success": true
  },
  "585": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "586": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "587": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))].",
    "success": true
  },
  "588": {
    "text_logic_forms": [
      "Circle(W)",
      "Congruent(Arc(R,S),Arc(T,V))",
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "In [Circle(W)], [Congruent(Arc(R,S),Arc(T,V))]. [Find(LengthOf(Line(R,S)))].",
    "success": true
  },
  "589": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(L)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(L)))].",
    "success": true
  },
  "590": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),4y+30)",
      "Equals(MeasureOf(Angle(7)),7y+6)",
      "Find(y)"
    ],
    "output_text": "to. [Find(y)] if [Equals(MeasureOf(Angle(3)),4y+30)] and [Equals(MeasureOf(Angle(7)),7y+6)].",
    "success": true
  },
  "591": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "592": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "593": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "594": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),110)",
      "Equals(MeasureOf(Angle(12)),55)",
      "Find(MeasureOf(Angle(10)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),110)] and [Equals(MeasureOf(Angle(12)),55)] [Find(MeasureOf(Angle(10)))].",
    "success": true
  },
  "595": {
    "text_logic_forms": [
      "Circle(O)",
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Equals(Angle(B,O,D),Angle(D,O,E))",
      "Equals(Angle(D,O,E),Angle(E,O,F))",
      "Equals(Angle(E,O,F),Angle(F,O,A))",
      "Find(MeasureOf(Arc(B,C)))"
    ],
    "output_text": "[Circle(O)], [IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))] and [Equals(Angle(B,O,D),Angle(D,O,E))], [Equals(Angle(D,O,E),Angle(E,O,F))], [Equals(Angle(E,O,F),Angle(F,O,A))]. [Find(MeasureOf(Arc(B,C)))].",
    "success": true
  },
  "596": {
    "text_logic_forms": [
      "Trapezoid(Q,R,S,T)",
      "IsMidpointOf(Point(A),LegOf(Trapezoid(Q,R,S,T)))",
      "IsMidpointOf(Point(B),LegOf(Trapezoid(Q,R,S,T)))",
      "Find(MeasureOf(Angle(Q)))"
    ],
    "output_text": "[Trapezoid(Q,R,S,T)], [IsMidpointOf(Point(A),LegOf(Trapezoid(Q,R,S,T)))], [IsMidpointOf(Point(B),LegOf(Trapezoid(Q,R,S,T)))],. [Find(MeasureOf(Angle(Q)))].",
    "success": true
  },
  "597": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "598": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "599": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(AreaOf(Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], [Find(AreaOf(Green(Shape($))))].",
    "success": true
  },
  "600": {
    "text_logic_forms": [
      "Congruent(Quadrilateral(B,C,D,E),Quadrilateral(R,S,T,U))",
      "Find(w)"
    ],
    "output_text": "[Congruent(Quadrilateral(B,C,D,E),Quadrilateral(R,S,T,U))]. [Find(w)].",
    "success": true
  },
  "601": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "602": {
    "text_logic_forms": [
      "Equals(a,8)",
      "Equals(b,15)",
      "Equals(c,17)",
      "Find(SinOf(Angle(A)))"
    ],
    "output_text": "[Equals(a,8)] [Equals(b,15)] and [Equals(c,17)] [Find(SinOf(Angle(A)))].",
    "success": true
  },
  "603": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "604": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(x)].",
    "success": true
  },
  "605": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "606": {
    "text_logic_forms": [
      "Perpendicular(Line(A,B),Line(B,C))",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(7)))] if [Perpendicular(Line(A,B),Line(B,C))].",
    "success": true
  },
  "607": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "608": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "609": {
    "text_logic_forms": [
      "Circle(O)",
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Equals(Angle(B,O,D),Angle(D,O,E))",
      "Equals(Angle(D,O,E),Angle(E,O,F))",
      "Equals(Angle(E,O,F),Angle(F,O,A))",
      "Find(MeasureOf(Arc(A,D,C)))"
    ],
    "output_text": "[Circle(O)], [IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))] and [Equals(Angle(B,O,D),Angle(D,O,E))], [Equals(Angle(D,O,E),Angle(E,O,F))], [Equals(Angle(E,O,F),Angle(F,O,A))]. [Find(MeasureOf(Arc(A,D,C)))].",
    "success": true
  },
  "610": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,Q)",
      "Equals(MeasureOf(Angle(M)),10x)",
      "Equals(MeasureOf(Angle(N)),20x)",
      "Find(MeasureOf(Angle(N)))"
    ],
    "output_text": "[Parallelogram(M,N,P,Q)] with [Equals(MeasureOf(Angle(M)),10x)] and [Equals(MeasureOf(Angle(N)),20x)] [Find(MeasureOf(Angle(N)))].",
    "success": true
  },
  "611": {
    "text_logic_forms": [
      "Parallel(Line(A,B),Line(C,E))",
      "Equals(LengthOf(Line(D,A)),6)",
      "Find(LengthOf(Line(D,B)))"
    ],
    "output_text": ", [Parallel(Line(A,B),Line(C,E))]. If [Equals(LengthOf(Line(D,A)),6)] [Find(LengthOf(Line(D,B)))]?",
    "success": true
  },
  "612": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(x)"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(x)].",
    "success": true
  },
  "613": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "614": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "615": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(R,Q)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(R,Q)))].",
    "success": true
  },
  "616": {
    "text_logic_forms": [
      "Equals(Line(A,D),AltitudeOf(Triangle(A,B,C)))",
      "Find(y)"
    ],
    "output_text": "[Find(y)] if [Equals(Line(A,D),AltitudeOf(Triangle(A,B,C)))].",
    "success": true
  },
  "617": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(J)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(J)))].",
    "success": true
  },
  "618": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),6)",
      "Equals(LengthOf(Line(B,C)),4)",
      "Equals(LengthOf(Line(A,E)),9)",
      "Find(LengthOf(Line(E,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(E,D)))] if [Equals(LengthOf(Line(A,B)),6)] [Equals(LengthOf(Line(B,C)),4)] and [Equals(LengthOf(Line(A,E)),9)].",
    "success": true
  },
  "619": {
    "text_logic_forms": [
      "UseTheorem(Pythagorean_Triple)",
      "Find(x)"
    ],
    "output_text": "[UseTheorem(Pythagorean_Triple)] to [Find(x)].",
    "success": true
  },
  "620": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(E)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(E)))].",
    "success": true
  },
  "621": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(12)),64)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(12)),64)] [Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "622": {
    "text_logic_forms": [
      "InscribedIn(Square(W,X,Y,Z),Circle(R))",
      "Find(MeasureOf(Angle($)))"
    ],
    "output_text": ", [InscribedIn(Square(W,X,Y,Z),Circle(R))]. [Find(MeasureOf(Angle($)))].",
    "success": true
  },
  "623": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "IsBaseOf(Line(B,C),Isosceles(Triangle(A,B,C)))",
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Isosceles(Triangle(A,B,C))], [IsBaseOf(Line(B,C),Isosceles(Triangle(A,B,C)))]. [Find(PerimeterOf(Triangle($)))]?",
    "success": true
  },
  "624": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),58)",
      "Equals(MeasureOf(Angle(2)),47)",
      "Equals(MeasureOf(Angle(3)),26)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),58)] [Equals(MeasureOf(Angle(2)),47)] and [Equals(MeasureOf(Angle(3)),26)] [Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "625": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(LengthOf(Line(R,T)),11)",
      "Find(MeasureOf(Arc(Q,R,S)))"
    ],
    "output_text": "In [Circle(P)], [Equals(LengthOf(Line(R,T)),11)] [Find(MeasureOf(Arc(Q,R,S)))]. Round to nearest hundredth.",
    "success": true
  },
  "626": {
    "text_logic_forms": [
      "IsIncenterOf(Point(S),Triangle(J,P,L))",
      "Find(MeasureOf(Angle(S,J,P)))"
    ],
    "output_text": "[IsIncenterOf(Point(S),Triangle(J,P,L))]. [Find(MeasureOf(Angle(S,J,P)))].",
    "success": true
  },
  "627": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "628": {
    "text_logic_forms": [
      "Circle(A)",
      "Equals(RadiusOf(Circle(A)),14)",
      "Equals(LengthOf(Line(C,D)),22)",
      "Find(LengthOf(Line(C,E)))"
    ],
    "output_text": " [Circle(A)], [Equals(RadiusOf(Circle(A)),14)] and [Equals(LengthOf(Line(C,D)),22)] [Find(LengthOf(Line(C,E)))].",
    "success": true
  },
  "629": {
    "text_logic_forms": [
      "Shape($)",
      "Parallel(Line(p),Line(q))",
      "Find(MeasureOf(Angle(B,C,E)))"
    ],
    "output_text": "[Shape($)]. [Find(MeasureOf(Angle(B,C,E)))] if [Parallel(Line(p),Line(q))].",
    "success": true
  },
  "630": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "631": {
    "text_logic_forms": [
      "Circle(C)",
      "Equals(MeasureOf(Angle(H,C,G)),2x)",
      "Equals(MeasureOf(Angle(H,C,D)),6x+28)",
      "Find(MeasureOf(Arc(H,D)))"
    ],
    "output_text": "In [Circle(C)], [Equals(MeasureOf(Angle(H,C,G)),2x)] and [Equals(MeasureOf(Angle(H,C,D)),6x+28)] [Find(MeasureOf(Arc(H,D)))].",
    "success": true
  },
  "632": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "633": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,B,C,D),Quadrilateral(Q,S,R,P))",
      "Find(y)"
    ],
    "output_text": "[Similar(Quadrilateral(A,B,C,D),Quadrilateral(Q,S,R,P))]. [Find(y)].",
    "success": true
  },
  "634": {
    "text_logic_forms": [
      "Equilateral(Triangle(R,S,T))",
      "Equals(LengthOf(Line(R,S)),x+9)",
      "Equals(LengthOf(Line(S,T)),2x)",
      "Equals(LengthOf(Line(R,T)),3x-9)",
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,S)))] of [Equilateral(Triangle(R,S,T))] if [Equals(LengthOf(Line(R,S)),x+9)] [Equals(LengthOf(Line(S,T)),2x)] and [Equals(LengthOf(Line(R,T)),3x-9)].",
    "success": true
  },
  "635": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(A)),10)",
      "Equals(DiameterOf(Circle(B)),30)",
      "Equals(DiameterOf(Circle(C)),10)",
      "Equals(LengthOf(Line(A,Z)),Line(C,W))",
      "Equals(LengthOf(Line(C,W)),2)",
      "Find(LengthOf(Line(A,Z)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(A)),10)] [Equals(DiameterOf(Circle(B)),30)] [Equals(DiameterOf(Circle(C)),10)] [Find(LengthOf(Line(A,Z)))] if [Equals(LengthOf(Line(A,Z)),Line(C,W))] and [Equals(LengthOf(Line(C,W)),2)].",
    "success": true
  },
  "636": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(X,Z,Y)),3x+6)",
      "Equals(MeasureOf(Angle(X,Z,W)),5x-12)",
      "Find(MeasureOf(Angle(Y,X,Z)))"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(X,Z,Y)),3x+6)] and [Equals(MeasureOf(Angle(X,Z,W)),5x-12)] [Find(MeasureOf(Angle(Y,X,Z)))].",
    "success": true
  },
  "637": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "Find(LengthOf(Line(C,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(C,B)))] in [Isosceles(Triangle(A,B,C))].",
    "success": true
  },
  "638": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "639": {
    "text_logic_forms": [
      "IsMedianOf(Line(P,S),Triangle(P,Q,R))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [IsMedianOf(Line(P,S),Triangle(P,Q,R))].",
    "success": true
  },
  "640": {
    "text_logic_forms": [
      "Circle(T)",
      "Equals(LengthOf(Line(Z,V)),1)",
      "Equals(LengthOf(Line(T,W)),13)",
      "Find(LengthOf(Line(X,V)))"
    ],
    "output_text": "In [Circle(T)], [Equals(LengthOf(Line(Z,V)),1)] and [Equals(LengthOf(Line(T,W)),13)] [Find(LengthOf(Line(X,V)))].",
    "success": true
  },
  "641": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "642": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "643": {
    "text_logic_forms": [
      "Equals(AreaOf(Rhombus(M,N,P,Q)),375)",
      "Equals(Line(M,P),25)",
      "Find(LengthOf(Line(N,Q)))"
    ],
    "output_text": "[Equals(AreaOf(Rhombus(M,N,P,Q)),375)] If [Equals(Line(M,P),25)] [Find(LengthOf(Line(N,Q)))].",
    "success": true
  },
  "644": {
    "text_logic_forms": [
      "IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))",
      "Equals(LengthOf(Line(G,H)),10)",
      "Find(LengthOf(Line(G,L)))"
    ],
    "output_text": "[IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))]. If [Equals(LengthOf(Line(G,H)),10)] [Find(LengthOf(Line(G,L)))].",
    "success": true
  },
  "645": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(P)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(P)))].",
    "success": true
  },
  "646": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "647": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "648": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),6)",
      "Equals(LengthOf(Line(A,F)),8)",
      "Equals(LengthOf(Line(B,C)),x)",
      "Equals(LengthOf(Line(C,D)),y)",
      "Equals(LengthOf(Line(D,E)),2y-3)",
      "Equals(LengthOf(Line(F,E)),x+\\frac{10}{3})",
      "Find(LengthOf(Line(F,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(F,E)))] if [Equals(LengthOf(Line(A,B)),6)] [Equals(LengthOf(Line(A,F)),8)] [Equals(LengthOf(Line(B,C)),x)] [Equals(LengthOf(Line(C,D)),y)] [Equals(LengthOf(Line(D,E)),2y-3)] and [Equals(LengthOf(Line(F,E)),x+\\frac{10}{3})].",
    "success": true
  },
  "649": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "650": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "651": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),96)",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Equals(AreaOf(Shape(A)),96)].",
    "success": true
  },
  "652": {
    "text_logic_forms": [
      "Equals(a,10\\sqrt{3})",
      "Find(y)"
    ],
    "output_text": "If [Equals(a,10\\sqrt{3})] [Find(y)].",
    "success": true
  },
  "653": {
    "text_logic_forms": [
      "Congruent(Triangle(A,B,C),Triangle(F,G,H))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(A,B,C),Triangle(F,G,H))]. [Find(x)].",
    "success": true
  },
  "654": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "655": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(D,A,C)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(D,A,C)))].",
    "success": true
  },
  "656": {
    "text_logic_forms": [
      "Kite(W,X,Y,Z)",
      "Find(LengthOf(Line(Y,Z)))"
    ],
    "output_text": "If [Kite(W,X,Y,Z)], [Find(LengthOf(Line(Y,Z)))].",
    "success": true
  },
  "657": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "658": {
    "text_logic_forms": [
      "Similar(Triangle($1),Triangle($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Triangle($1),Triangle($2))]. [Find(x)].",
    "success": true
  },
  "659": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "660": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "661": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "662": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(J)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(J)))].",
    "success": true
  },
  "663": {
    "text_logic_forms": [
      "Find(TanOf(x))"
    ],
    "output_text": "[Find(TanOf(x))]?",
    "success": true
  },
  "664": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "665": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "666": {
    "text_logic_forms": [
      "Find(LengthOf(Line(K,L)))"
    ],
    "output_text": "[Find(LengthOf(Line(K,L)))].",
    "success": true
  },
  "667": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "668": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(W)),4)",
      "Equals(RadiusOf(Circle(Z)),7)",
      "Equals(LengthOf(Line(X,Y)),2)",
      "Find(LengthOf(Line(I,C)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(W)),4)] [Equals(RadiusOf(Circle(Z)),7)] and [Equals(LengthOf(Line(X,Y)),2)] [Find(LengthOf(Line(I,C)))].",
    "success": true
  },
  "669": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "670": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(Y,Z),Trapezoid(T,W,R,V))",
      "Find(x)"
    ],
    "output_text": ", [IsMidsegmentOf(Line(Y,Z),Trapezoid(T,W,R,V))]. [Find(x)].",
    "success": true
  },
  "671": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(P,Q)),Line(Q,S))",
      "Equals(LengthOf(Line(Q,R)),Line(R,S))",
      "Equals(MeasureOf(Angle(P,R,S)),72)",
      "Find(MeasureOf(Angle(Q,P,S)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(P,Q)),Line(Q,S))], [Equals(LengthOf(Line(Q,R)),Line(R,S))] and [Equals(MeasureOf(Angle(P,R,S)),72)] [Find(MeasureOf(Angle(Q,P,S)))]?",
    "success": true
  },
  "672": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(y)"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(y)].",
    "success": true
  },
  "673": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(C,E)),5.2)",
      "Find(DiameterOf(Circle($)))"
    ],
    "output_text": "[Equals(LengthOf(Line(C,E)),5.2)] [Find(DiameterOf(Circle($)))].",
    "success": true
  },
  "674": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest hundredth.",
    "success": true
  },
  "675": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),58)",
      "Equals(MeasureOf(Angle(2)),47)",
      "Equals(MeasureOf(Angle(3)),26)",
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),58)] [Equals(MeasureOf(Angle(2)),47)] and [Equals(MeasureOf(Angle(3)),26)] [Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "676": {
    "text_logic_forms": [
      "Triangle(E,D,F)",
      "IsCentroidOf(Point(T),Triangle(E,D,F))",
      "Equals(LengthOf(Line(F,T)),12)",
      "Find(LengthOf(Line(T,Q)))"
    ],
    "output_text": " [Triangle(E,D,F)], [IsCentroidOf(Point(T),Triangle(E,D,F))] and [Equals(LengthOf(Line(F,T)),12)] [Find(LengthOf(Line(T,Q)))].",
    "success": true
  },
  "677": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Equals(LengthOf(Line(J,K)),2b+3)",
      "Equals(LengthOf(Line(J,M)),3a)",
      "Find(MeasureOf(Angle(J,K,L)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(MeasureOf(Angle(J,K,L)))] if [Equals(LengthOf(Line(J,K)),2b+3)] and [Equals(LengthOf(Line(J,M)),3a)].",
    "success": true
  },
  "678": {
    "text_logic_forms": [
      "Triangle(A,B,C)",
      "Point(D)",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "orthocenter of [Triangle(A,B,C)] is located 6.4 from [Point(D)]. [Find(LengthOf(Line(B,C)))].",
    "success": false
  },
  "679": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "680": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "681": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "682": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(V,X)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(V,X)))].",
    "success": true
  },
  "683": {
    "text_logic_forms": [
      "Equals(AreaOf(Parallelogram($)),100)",
      "Find(HeightOf(Parallelogram($)))"
    ],
    "output_text": "[Find(HeightOf(Parallelogram($)))], [Equals(AreaOf(Parallelogram($)),100)].",
    "success": true
  },
  "684": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "685": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A,C,B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,C,B)))].",
    "success": true
  },
  "686": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "687": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "688": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(M,C)),7)",
      "Equals(LengthOf(Line(R,M)),4)",
      "Equals(LengthOf(Line(A,T)),16)",
      "Find(LengthOf(Line(S,C)))"
    ],
    "output_text": "[Equals(LengthOf(Line(M,C)),7)] [Equals(LengthOf(Line(R,M)),4)] and [Equals(LengthOf(Line(A,T)),16)] [Find(LengthOf(Line(S,C)))].",
    "success": true
  },
  "689": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "690": {
    "text_logic_forms": [
      "Similar(Quadrilateral(M,N,P,Q),Quadrilateral(X,Y,Z,W))",
      "Find(PerimeterOf(Quadrilateral(M,N,P,Q)))"
    ],
    "output_text": "If [Similar(Quadrilateral(M,N,P,Q),Quadrilateral(X,Y,Z,W))], [Find(PerimeterOf(Quadrilateral(M,N,P,Q)))].",
    "success": true
  },
  "691": {
    "text_logic_forms": [
      "Trapezoid(Q,R,S,T)",
      "IsMidpointOf(Point(A),LegOf(Trapezoid(Q,R,S,T)))",
      "IsMidpointOf(Point(B),LegOf(Trapezoid(Q,R,S,T)))",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Trapezoid(Q,R,S,T)], [IsMidpointOf(Point(A),LegOf(Trapezoid(Q,R,S,T)))], [IsMidpointOf(Point(B),LegOf(Trapezoid(Q,R,S,T)))],. [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "692": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "693": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "694": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "695": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "696": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "697": {
    "text_logic_forms": [
      "Parallelogram(K,L,M,N)",
      "Find(y)"
    ],
    "output_text": "If [Parallelogram(K,L,M,N)], [Find(y)].",
    "success": true
  },
  "698": {
    "text_logic_forms": [
      "IsDiameterOf(Line(Q,S),Circle(V))",
      "Find(MeasureOf(Arc(Q,R,T)))"
    ],
    "output_text": "[IsDiameterOf(Line(Q,S),Circle(V))]. [Find(MeasureOf(Arc(Q,R,T)))].",
    "success": true
  },
  "699": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "700": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),6)",
      "Equals(LengthOf(Line(B,C)),4)",
      "Equals(LengthOf(Line(A,E)),9)",
      "Find(LengthOf(Line(E,D)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,B)),6)] [Equals(LengthOf(Line(B,C)),4)] and [Equals(LengthOf(Line(A,E)),9)] [Find(LengthOf(Line(E,D)))].",
    "success": true
  },
  "701": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,R)",
      "Find(MeasureOf(Angle(N,R,P)))"
    ],
    "output_text": "Use [Parallelogram(M,N,P,R)] to [Find(MeasureOf(Angle(N,R,P)))].",
    "success": true
  },
  "702": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(W,Z)),25.3)",
      "Equals(LengthOf(Line(Y,Z)),22.4)",
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(W,Z)),25.3)] [Equals(LengthOf(Line(Y,Z)),22.4)] [Equals(LengthOf(Line(W,Z)),25.3)] [Find(LengthOf(Line(X,Y)))].",
    "success": true
  },
  "703": {
    "text_logic_forms": [
      "Quadrilateral(A,B,C,D)",
      "Equals(LengthOf(Line(A,C)),188)",
      "Equals(LengthOf(Line(B,D)),214)",
      "Equals(MeasureOf(Angle(B,P,C)),70)",
      "IsMidpointOf(Point(P),Line(A,C))",
      "Line(B,D)",
      "Find(PerimeterOf(Quadrilateral(A,B,C,D)))"
    ],
    "output_text": "In [Quadrilateral(A,B,C,D)], [Equals(LengthOf(Line(A,C)),188)] [Equals(LengthOf(Line(B,D)),214)] [Equals(MeasureOf(Angle(B,P,C)),70)] and [IsMidpointOf(Point(P),Line(A,C))] and [Line(B,D)]. [Find(PerimeterOf(Quadrilateral(A,B,C,D)))].",
    "success": true
  },
  "704": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(f)"
    ],
    "output_text": "[Find(f)] in [Parallelogram($)].",
    "success": true
  },
  "705": {
    "text_logic_forms": [
      "Find(h)"
    ],
    "output_text": "[Find(h)].",
    "success": true
  },
  "706": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "707": {
    "text_logic_forms": [
      "Parallel(Line(K,H),Line(J,I))",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "If [Parallel(Line(K,H),Line(J,I))], [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "708": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "709": {
    "text_logic_forms": [
      "Equals(a,8)",
      "Equals(b,15)",
      "Equals(c,17)",
      "Find(TanOf(Angle(A)))"
    ],
    "output_text": "[Equals(a,8)] [Equals(b,15)] and [Equals(c,17)] [Find(TanOf(Angle(A)))].",
    "success": true
  },
  "710": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "711": {
    "text_logic_forms": [
      "Find(LengthOf(Line(D,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,B)))].",
    "success": true
  },
  "712": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "713": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(P,N,M)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(P,N,M)))].",
    "success": true
  },
  "714": {
    "text_logic_forms": [
      "Parallel(Line(Q,R),Line(T,S))",
      "Parallel(Line(Q,T),Line(R,S))",
      "Equals(MeasureOf(Angle(1)),131)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": ", [Parallel(Line(Q,R),Line(T,S))], [Parallel(Line(Q,T),Line(R,S))] and [Equals(MeasureOf(Angle(1)),131)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "715": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "716": {
    "text_logic_forms": [
      "Equals(x,7\\sqrt{3})",
      "Find(LengthOf(Line(C,E)))"
    ],
    "output_text": "If [Equals(x,7\\sqrt{3})] [Find(LengthOf(Line(C,E)))].",
    "success": true
  },
  "717": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(K,L))",
      "Equals(LengthOf(Line(K,N)),9)",
      "Equals(LengthOf(Line(L,N)),16)",
      "Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))",
      "Find(LengthOf(Line(K,P)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(K,L))], [Equals(LengthOf(Line(K,N)),9)] [Equals(LengthOf(Line(L,N)),16)] and [Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))], [Find(LengthOf(Line(K,P)))].",
    "success": true
  },
  "718": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "719": {
    "text_logic_forms": [
      "Kite(W,X,Y,Z)",
      "Equals(MeasureOf(Angle(W,X,Y)),120)",
      "Equals(MeasureOf(Angle(W,Z,Y)),4x)",
      "Equals(MeasureOf(Angle(Z,W,X)),10x)",
      "Find(MeasureOf(Angle(Z,Y,X)))"
    ],
    "output_text": " [Kite(W,X,Y,Z)]. If [Equals(MeasureOf(Angle(W,X,Y)),120)] [Equals(MeasureOf(Angle(W,Z,Y)),4x)] and [Equals(MeasureOf(Angle(Z,W,X)),10x)] [Find(MeasureOf(Angle(Z,Y,X)))].",
    "success": true
  },
  "720": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),62)",
      "Equals(MeasureOf(Angle(14)),38)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(11)),62)] and [Equals(MeasureOf(Angle(14)),38)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "721": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(L,K)),4)",
      "Equals(LengthOf(Line(M,P)),3)",
      "Equals(LengthOf(Line(P,Q)),6)",
      "Equals(LengthOf(Line(K,J)),2)",
      "Equals(LengthOf(Line(R,S)),6)",
      "Equals(LengthOf(Line(L,P)),2)",
      "Find(LengthOf(Line(Q,K)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(L,K)),4)] [Equals(LengthOf(Line(M,P)),3)] [Equals(LengthOf(Line(P,Q)),6)] [Equals(LengthOf(Line(K,J)),2)] [Equals(LengthOf(Line(R,S)),6)] and [Equals(LengthOf(Line(L,P)),2)] [Find(LengthOf(Line(Q,K)))].",
    "success": true
  },
  "722": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "723": {
    "text_logic_forms": [
      "Similar(Quadrilateral(M,N,P,Q),Quadrilateral(X,Y,Z,W))",
      "Find(PerimeterOf(Quadrilateral(X,Y,Z,W)))"
    ],
    "output_text": "If [Similar(Quadrilateral(M,N,P,Q),Quadrilateral(X,Y,Z,W))], [Find(PerimeterOf(Quadrilateral(X,Y,Z,W)))].",
    "success": true
  },
  "724": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "725": {
    "text_logic_forms": [
      "Find(LengthOf(Line(C,P)))"
    ],
    "output_text": "[Find(LengthOf(Line(C,P)))].",
    "success": true
  },
  "726": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Y)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Y)))].",
    "success": true
  },
  "727": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(9)),75)",
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(9)),75)] [Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "728": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Z,X,Y)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Z,X,Y)))].",
    "success": true
  },
  "729": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(D,E)),60)",
      "Equals(LengthOf(Line(F,C)),16)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(D,E)),60)] and [Equals(LengthOf(Line(F,C)),16)] [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "730": {
    "text_logic_forms": [
      "Triangle(E,F,G)",
      "Parallel(Line(H,L),Line(E,F))",
      "Equals(LengthOf(Line(E,H)),9)",
      "Equals(LengthOf(Line(H,G)),21)",
      "Equals(LengthOf(Line(F,L)),6)",
      "Find(LengthOf(Line(L,G)))"
    ],
    "output_text": "In [Triangle(E,F,G)], [Parallel(Line(H,L),Line(E,F))], [Equals(LengthOf(Line(E,H)),9)] [Equals(LengthOf(Line(H,G)),21)] and [Equals(LengthOf(Line(F,L)),6)] [Find(LengthOf(Line(L,G)))].",
    "success": true
  },
  "731": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "732": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "733": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),32)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(4)),32)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "734": {
    "text_logic_forms": [
      "Find(RatioOf(AreaOf(Circle($)),AreaOf(Square($))))"
    ],
    "output_text": "[Find(RatioOf(AreaOf(Circle($)),AreaOf(Square($))))].",
    "success": true
  },
  "735": {
    "text_logic_forms": [
      "Rectangle(Q,R,S,T)",
      "Equals(LengthOf(Line(Q,P)),3x+11)",
      "Equals(LengthOf(Line(P,S)),4x+8)",
      "Find(LengthOf(Line(Q,S)))"
    ],
    "output_text": " [Rectangle(Q,R,S,T)]. If [Equals(LengthOf(Line(Q,P)),3x+11)] and [Equals(LengthOf(Line(P,S)),4x+8)] [Find(LengthOf(Line(Q,S)))].",
    "success": true
  },
  "736": {
    "text_logic_forms": [
      "Find(AreaOf(Blue(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Blue(Shape($))))].",
    "success": true
  },
  "737": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "738": {
    "text_logic_forms": [
      "Rectangle(L,M,N,P)",
      "Parallelogram(L,K,M,J)",
      "Equals(MeasureOf(Angle(M,J,N)),35)",
      "Find(MeasureOf(Angle(M,P,N)))"
    ],
    "output_text": "Use [Rectangle(L,M,N,P)], [Parallelogram(L,K,M,J)] to. If [Equals(MeasureOf(Angle(M,J,N)),35)] [Find(MeasureOf(Angle(M,P,N)))].",
    "success": true
  },
  "739": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "740": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "741": {
    "text_logic_forms": [
      "Equals(AreaOf(Parallelogram(A,B,C,D)),150)",
      "Equals(AreaOf(Parallelogram(F,G,H,J)),54)",
      "Similar(Parallelogram(A,B,C,D),Parallelogram(F,G,H,J))",
      "Find(ScaleFactorOf(Parallelogram(F,G,H,J),Parallelogram(A,B,C,D)))"
    ],
    "output_text": "[Equals(AreaOf(Parallelogram(A,B,C,D)),150)] [Equals(AreaOf(Parallelogram(F,G,H,J)),54)] If [Similar(Parallelogram(A,B,C,D),Parallelogram(F,G,H,J))], [Find(ScaleFactorOf(Parallelogram(F,G,H,J),Parallelogram(A,B,C,D)))].",
    "success": true
  },
  "742": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "743": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,C)),x-3)",
      "Equals(LengthOf(Line(B,E)),20)",
      "Equals(LengthOf(Line(A,B)),16)",
      "Equals(LengthOf(Line(C,D)),x+5)",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,C)))] if [Equals(LengthOf(Line(A,C)),x-3)] [Equals(LengthOf(Line(B,E)),20)] [Equals(LengthOf(Line(A,B)),16)] and [Equals(LengthOf(Line(C,D)),x+5)].",
    "success": true
  },
  "744": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "745": {
    "text_logic_forms": [
      "Trapezoid(R,S,T,V)",
      "IsMidpointOf(Point(A),LegOf(Trapezoid(R,S,T,V)))",
      "IsMidpointOf(Point(B),LegOf(Trapezoid(R,S,T,V)))",
      "Find(LengthOf(Line(V,T)))"
    ],
    "output_text": "[Trapezoid(R,S,T,V)], [IsMidpointOf(Point(A),LegOf(Trapezoid(R,S,T,V)))], [IsMidpointOf(Point(B),LegOf(Trapezoid(R,S,T,V)))],. [Find(LengthOf(Line(V,T)))].",
    "success": true
  },
  "746": {
    "text_logic_forms": [
      "IsAltitudeOf(Line(C,P),Shape($))",
      "BisectsAngle(Line(C,Q),Angle(A,C,B))",
      "IsMidpointOf(Point(R),Line(A,B))",
      "Equals(LengthOf(Line(A,R)),3x+6)",
      "Equals(LengthOf(Line(R,B)),5x-14)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": ", [IsAltitudeOf(Line(C,P),Shape($))], [BisectsAngle(Line(C,Q),Angle(A,C,B))] and [IsMidpointOf(Point(R),Line(A,B))]. [Find(LengthOf(Line(A,B)))] if [Equals(LengthOf(Line(A,R)),3x+6)] and [Equals(LengthOf(Line(R,B)),5x-14)].",
    "success": true
  },
  "747": {
    "text_logic_forms": [
      "Parallel(Line(Q,R),Line(X,Y))",
      "Equals(LengthOf(Line(X,Q)),15)",
      "Equals(LengthOf(Line(Q,Z)),12)",
      "Equals(LengthOf(Line(Y,R)),20)",
      "Find(LengthOf(Line(R,Z)))"
    ],
    "output_text": "If [Parallel(Line(Q,R),Line(X,Y))], [Equals(LengthOf(Line(X,Q)),15)] [Equals(LengthOf(Line(Q,Z)),12)] and [Equals(LengthOf(Line(Y,R)),20)] [Find(LengthOf(Line(R,Z)))].",
    "success": true
  },
  "748": {
    "text_logic_forms": [
      "Circle(G)",
      "Equals(MeasureOf(Angle(A,G,B)),30)",
      "Perpendicular(Line(C,G),Line(G,D))",
      "Find(MeasureOf(Arc(C,D,F)))"
    ],
    "output_text": "In [Circle(G)], [Equals(MeasureOf(Angle(A,G,B)),30)] and [Perpendicular(Line(C,G),Line(G,D))]. [Find(MeasureOf(Arc(C,D,F)))].",
    "success": true
  },
  "749": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(W,X))",
      "Equals(LengthOf(Line(W,X)),10)",
      "Equals(LengthOf(Line(X,Y)),6)",
      "Equals(LengthOf(Line(W,Y)),8)",
      "Equals(LengthOf(Line(R,Y)),5)",
      "Equals(LengthOf(Line(P,S)),3)",
      "Find(LengthOf(Line(P,Q)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(W,X))], [Equals(LengthOf(Line(W,X)),10)] [Equals(LengthOf(Line(X,Y)),6)] [Equals(LengthOf(Line(W,Y)),8)] [Equals(LengthOf(Line(R,Y)),5)] and [Equals(LengthOf(Line(P,S)),3)] [Find(LengthOf(Line(P,Q)))].",
    "success": true
  },
  "750": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "751": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(G,H)),Line(H,K))",
      "Equals(LengthOf(Line(H,J)),Line(Y,K))",
      "Equals(MeasureOf(Angle(G,J,K)),100)",
      "Find(MeasureOf(Angle(H,G,K)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(G,H)),Line(H,K))], [Equals(LengthOf(Line(H,J)),Line(Y,K))] and [Equals(MeasureOf(Angle(G,J,K)),100)] [Find(MeasureOf(Angle(H,G,K)))]?",
    "success": true
  },
  "752": {
    "text_logic_forms": [
      "Find(LengthOf(Line(M,N)))"
    ],
    "output_text": "[Find(LengthOf(Line(M,N)))].",
    "success": true
  },
  "753": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "754": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "755": {
    "text_logic_forms": [
      "Isosceles(Trapezoid(T,W,Y,Z))",
      "Equals(Angle(Z),Angle(Y))",
      "Equals(MeasureOf(Angle(Z)),30x)",
      "Equals(Angle(T),Angle(W))",
      "Equals(MeasureOf(Angle(T)),20x)",
      "Find(MeasureOf(Angle(W)))"
    ],
    "output_text": "[Isosceles(Trapezoid(T,W,Y,Z))] with [Equals(Angle(Z),Angle(Y))], [Equals(MeasureOf(Angle(Z)),30x)] [Equals(Angle(T),Angle(W))] and [Equals(MeasureOf(Angle(T)),20x)] [Find(MeasureOf(Angle(W)))].",
    "success": true
  },
  "756": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Q)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Q)))].",
    "success": true
  },
  "757": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(LengthOf(Line(G,K)),14)",
      "Equals(MeasureOf(Arc(G,H,K)),142)",
      "Find(MeasureOf(Arc(G,H)))"
    ],
    "output_text": "In [Circle(F)], [Equals(LengthOf(Line(G,K)),14)] and [Equals(MeasureOf(Arc(G,H,K)),142)] [Find(MeasureOf(Arc(G,H)))].",
    "success": true
  },
  "758": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(E,X)),24)",
      "Equals(LengthOf(Line(D,E)),7)",
      "Find(LengthOf(Line(Q,X)))"
    ],
    "output_text": "[Find(LengthOf(Line(Q,X)))] if [Equals(LengthOf(Line(E,X)),24)] and [Equals(LengthOf(Line(D,E)),7)].",
    "success": true
  },
  "759": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))].",
    "success": true
  },
  "760": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "761": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "762": {
    "text_logic_forms": [
      "Parallel(Line(Q,R),Line(X,Y))",
      "Equals(LengthOf(Line(X,Q)),Line(Q,Z))",
      "Equals(LengthOf(Line(Q,R)),9.5)",
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": "If [Parallel(Line(Q,R),Line(X,Y))], [Equals(LengthOf(Line(X,Q)),Line(Q,Z))] and [Equals(LengthOf(Line(Q,R)),9.5)] [Find(LengthOf(Line(X,Y)))].",
    "success": true
  },
  "763": {
    "text_logic_forms": [
      "Similar(Triangle(J,K,L),Triangle(P,Q,R))",
      "Equals(AreaOf(Triangle(J,K,L)),30)",
      "Find(AreaOf(Triangle(P,Q,R)))"
    ],
    "output_text": "If [Similar(Triangle(J,K,L),Triangle(P,Q,R))] and [Equals(AreaOf(Triangle(J,K,L)),30)] [Find(AreaOf(Triangle(P,Q,R)))].",
    "success": true
  },
  "764": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(D,H)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(D,H)))].",
    "success": true
  },
  "765": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))] in. Round to nearest tenth, if necessary.",
    "success": true
  },
  "766": {
    "text_logic_forms": [
      "IsBaseOf(Line(R,V),Trapezoid(R,S,T,V))",
      "IsBaseOf(Line(S,T),Trapezoid(R,S,T,V))",
      "IsMedianOf(Line(M,N),Trapezoid(R,S,T,V))",
      "Equals(LengthOf(Line(M,N)),60)",
      "Equals(LengthOf(Line(S,T)),4x-1)",
      "Equals(LengthOf(Line(R,V)),6x+11)",
      "Find(x)"
    ],
    "output_text": " [IsBaseOf(Line(R,V),Trapezoid(R,S,T,V))], [IsBaseOf(Line(S,T),Trapezoid(R,S,T,V))], [IsMedianOf(Line(M,N),Trapezoid(R,S,T,V))]. [Find(x)] if [Equals(LengthOf(Line(M,N)),60)] [Equals(LengthOf(Line(S,T)),4x-1)] and [Equals(LengthOf(Line(R,V)),6x+11)].",
    "success": true
  },
  "767": {
    "text_logic_forms": [
      "Triangle($)",
      "Find(x)"
    ],
    "output_text": "[Triangle($)]. [Find(x)] to nearest tenth.",
    "success": true
  },
  "768": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "769": {
    "text_logic_forms": [
      "IsDiameterOf(Line(Q,S),Circle(V))",
      "Find(MeasureOf(Arc(P,Q,R)))"
    ],
    "output_text": "[IsDiameterOf(Line(Q,S),Circle(V))]. [Find(MeasureOf(Arc(P,Q,R)))].",
    "success": true
  },
  "770": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "771": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "772": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "773": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "774": {
    "text_logic_forms": [
      "RightAngle(Angle(R,S,T))",
      "Perpendicular(Line(S,U),Line(R,T))",
      "Perpendicular(Line(U,V),Line(S,T))",
      "Equals(MeasureOf(Angle(R,T,S)),47)",
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "If [RightAngle(Angle(R,S,T))], [Perpendicular(Line(S,U),Line(R,T))], [Perpendicular(Line(U,V),Line(S,T))] and [Equals(MeasureOf(Angle(R,T,S)),47)] [Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "775": {
    "text_logic_forms": [
      "Parallel(Line(p),Line(q))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(p),Line(q))].",
    "success": true
  },
  "776": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,C)),x-3)",
      "Equals(LengthOf(Line(B,E)),20)",
      "Equals(LengthOf(Line(A,B)),16)",
      "Equals(LengthOf(Line(C,D)),x+5)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [Equals(LengthOf(Line(A,C)),x-3)] [Equals(LengthOf(Line(B,E)),20)] [Equals(LengthOf(Line(A,B)),16)] and [Equals(LengthOf(Line(C,D)),x+5)].",
    "success": true
  },
  "777": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D,B,A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D,B,A)))].",
    "success": true
  },
  "778": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "779": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "780": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "781": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "782": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(J,M)),Line(P,M))",
      "Equals(LengthOf(Line(M,L)),Line(P,L))",
      "Equals(MeasureOf(Angle(P,L,J)),34)",
      "Find(MeasureOf(Angle(J,P,M)))"
    ],
    "output_text": ", [Equals(LengthOf(Line(J,M)),Line(P,M))] and [Equals(LengthOf(Line(M,L)),Line(P,L))]. If [Equals(MeasureOf(Angle(P,L,J)),34)] [Find(MeasureOf(Angle(J,P,M)))].",
    "success": true
  },
  "783": {
    "text_logic_forms": [
      "Circle(G)",
      "Equals(MeasureOf(Angle(A,G,B)),30)",
      "Perpendicular(Line(C,G),Line(G,D))",
      "Find(MeasureOf(Arc(B,C,D)))"
    ],
    "output_text": "In [Circle(G)], [Equals(MeasureOf(Angle(A,G,B)),30)] and [Perpendicular(Line(C,G),Line(G,D))]. [Find(MeasureOf(Arc(B,C,D)))].",
    "success": true
  },
  "784": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "785": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "786": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(O)),10)",
      "Equals(LengthOf(Line(A,B)),10)",
      "Equals(LengthOf(Line(A,B)),60)",
      "Find(MeasureOf(Arc(O,X)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(O)),10)] [Equals(LengthOf(Line(A,B)),10)] and [Equals(LengthOf(Line(A,B)),60)] [Find(MeasureOf(Arc(O,X)))].",
    "success": true
  },
  "787": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "788": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(LengthOf(Line(G,K)),14)",
      "Equals(MeasureOf(Arc(G,H,K)),142)",
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "In [Circle(F)], [Equals(LengthOf(Line(G,K)),14)] and [Equals(MeasureOf(Arc(G,H,K)),142)] [Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "789": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "790": {
    "text_logic_forms": [
      "Parallel(Line(Q,R),Line(T,S))",
      "Parallel(Line(Q,T),Line(R,S))",
      "Equals(MeasureOf(Angle(1)),131)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Parallel(Line(Q,R),Line(T,S))], [Parallel(Line(Q,T),Line(R,S))] and [Equals(MeasureOf(Angle(1)),131)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "791": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "792": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "793": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "794": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "795": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(LengthOf(Line(D,A)),7.4)",
      "Find(LengthOf(Line(E,F)))"
    ],
    "output_text": "In [Circle(F)], if [Equals(LengthOf(Line(D,A)),7.4)] [Find(LengthOf(Line(E,F)))]?",
    "success": true
  },
  "796": {
    "text_logic_forms": [
      "Find(RatioOf(TanOf(Angle(V))))"
    ],
    "output_text": "[Find(RatioOf(TanOf(Angle(V))))] to nearest hundredth.",
    "success": true
  },
  "797": {
    "text_logic_forms": [
      "Triangle(P,Q,R)",
      "Equals(LengthOf(Line(R,S)),3)",
      "Equals(LengthOf(Line(Q,S)),14)",
      "Find(LengthOf(Line(P,S)))"
    ],
    "output_text": "In [Triangle(P,Q,R)], [Equals(LengthOf(Line(R,S)),3)] and [Equals(LengthOf(Line(Q,S)),14)] [Find(LengthOf(Line(P,S)))].",
    "success": true
  },
  "798": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "799": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "800": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "801": {
    "text_logic_forms": [
      "Triangle(G,H,J)",
      "Equals(LengthOf(Line(H,P)),5x-16)",
      "Equals(LengthOf(Line(P,J)),3x+8)",
      "Equals(MeasureOf(Angle(G,J,N)),6y-3)",
      "Equals(MeasureOf(Angle(N,J,H)),4y+23)",
      "Equals(MeasureOf(Angle(H,M,G)),4z+14)",
      "BisectsAngle(Line(J,N),Angle($))",
      "Find(MeasureOf(Angle(G,J,H)))"
    ],
    "output_text": "In [Triangle(G,H,J)], [Equals(LengthOf(Line(H,P)),5x-16)] [Equals(LengthOf(Line(P,J)),3x+8)] [Equals(MeasureOf(Angle(G,J,N)),6y-3)] [Equals(MeasureOf(Angle(N,J,H)),4y+23)] and [Equals(MeasureOf(Angle(H,M,G)),4z+14)] [Find(MeasureOf(Angle(G,J,H)))] if [BisectsAngle(Line(J,N),Angle($))].",
    "success": true
  },
  "802": {
    "text_logic_forms": [
      "Rectangle(J,K,L,M)",
      "Rhombus(M,L,P,R)",
      "Equals(Angle(J,M,K),Angle(R,M,P))",
      "Equals(MeasureOf(Angle(J,M,K)),55)",
      "Equals(MeasureOf(Angle(M,R,P)),70)",
      "Find(MeasureOf(Angle(M,P,R)))"
    ],
    "output_text": " [Rectangle(J,K,L,M)]. [Rhombus(M,L,P,R)]. [Equals(Angle(J,M,K),Angle(R,M,P))], [Equals(MeasureOf(Angle(J,M,K)),55)] and [Equals(MeasureOf(Angle(M,R,P)),70)] [Find(MeasureOf(Angle(M,P,R)))].",
    "success": true
  },
  "803": {
    "text_logic_forms": [
      "Equals(AreaOf(Trapezoid(A,B,C,D)),750)",
      "Find(HeightOf(Quadrilateral(A,B,C,D)))"
    ],
    "output_text": "[Equals(AreaOf(Trapezoid(A,B,C,D)),750)] [Find(HeightOf(Quadrilateral(A,B,C,D)))].",
    "success": true
  },
  "804": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(LengthOf(Line(F,H)),Line(F,L))",
      "Equals(LengthOf(Line(F,K)),17)",
      "Find(LengthOf(Line(J,H)))"
    ],
    "output_text": "In [Circle(F)], [Equals(LengthOf(Line(F,H)),Line(F,L))] and [Equals(LengthOf(Line(F,K)),17)] [Find(LengthOf(Line(J,H)))].",
    "success": true
  },
  "805": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "806": {
    "text_logic_forms": [
      "Congruent(Triangle(R,S,V),Triangle(T,V,S))",
      "Find(y)"
    ],
    "output_text": "[Congruent(Triangle(R,S,V),Triangle(T,V,S))]. [Find(y)].",
    "success": true
  },
  "807": {
    "text_logic_forms": [
      "IsChordOf(Line(J,F),Circle($))",
      "IsChordOf(Line(B,C),Circle($))",
      "IntersectAt(Line(J,F),Line(B,C),Point(K))",
      "Equals(LengthOf(Line(B,K)),8)",
      "Equals(LengthOf(Line(K,C)),12)",
      "Equals(LengthOf(Line(K,F)),16)",
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "[IsChordOf(Line(J,F),Circle($))], [IsChordOf(Line(B,C),Circle($))]. [IntersectAt(Line(J,F),Line(B,C),Point(K))]. If [Equals(LengthOf(Line(B,K)),8)] [Equals(LengthOf(Line(K,C)),12)] and [Equals(LengthOf(Line(K,F)),16)] [Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "808": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "809": {
    "text_logic_forms": [
      "Find(LengthOf(Line(H,J)))"
    ],
    "output_text": "[Find(LengthOf(Line(H,J)))].",
    "success": true
  },
  "810": {
    "text_logic_forms": [
      "Find(RatioOf(CosOf(Angle(Q))))"
    ],
    "output_text": "[Find(RatioOf(CosOf(Angle(Q))))] to nearest hundredth.",
    "success": true
  },
  "811": {
    "text_logic_forms": [
      "Kite(W,X,Y,Z)",
      "Find(LengthOf(Line(Z,Y)))"
    ],
    "output_text": "If [Kite(W,X,Y,Z)], [Find(LengthOf(Line(Z,Y)))].",
    "success": true
  },
  "812": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "813": {
    "text_logic_forms": [
      "Find(LengthOf(Line(L,P)))"
    ],
    "output_text": "[Find(LengthOf(Line(L,P)))].",
    "success": true
  },
  "814": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(V)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(V)))].",
    "success": true
  },
  "815": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "816": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(AreaOf(Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], [Find(AreaOf(Green(Shape($))))].",
    "success": true
  },
  "817": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "818": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "819": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,T)))].",
    "success": true
  },
  "820": {
    "text_logic_forms": [
      "InscribedIn(Quadrilateral(A,B,C,D),Circle(Z))",
      "Equals(MeasureOf(Angle(B,Z,A)),104)",
      "Equals(MeasureOf(Arc(C,B)),94)",
      "Parallel(Line(A,B),Line(D,C))",
      "Find(MeasureOf(Arc(B,A)))"
    ],
    "output_text": "[InscribedIn(Quadrilateral(A,B,C,D),Circle(Z))] [Equals(MeasureOf(Angle(B,Z,A)),104)] [Equals(MeasureOf(Arc(C,B)),94)] and [Parallel(Line(A,B),Line(D,C))]. [Find(MeasureOf(Arc(B,A)))].",
    "success": true
  },
  "821": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,R)",
      "Find(MeasureOf(Angle(M,Q,N)))"
    ],
    "output_text": "Use [Parallelogram(M,N,P,R)] to [Find(MeasureOf(Angle(M,Q,N)))].",
    "success": true
  },
  "822": {
    "text_logic_forms": [
      "Parallel(Line(K,H),Line(J,I))",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "If [Parallel(Line(K,H),Line(J,I))], [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "823": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round angle measure to nearest degree.",
    "success": true
  },
  "824": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),94)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),94)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "825": {
    "text_logic_forms": [
      "IsMedianOf(Line(A,D),Triangle(A,B,C))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [IsMedianOf(Line(A,D),Triangle(A,B,C))].",
    "success": true
  },
  "826": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "827": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "828": {
    "text_logic_forms": [
      "Find(RatioOf(SinOf(Angle(Q))))"
    ],
    "output_text": "[Find(RatioOf(SinOf(Angle(Q))))] to nearest hundredth.",
    "success": true
  },
  "829": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "830": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "831": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "832": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(1)),2x+20)",
      "Equals(MeasureOf(Angle(2)),5x-4)",
      "Equals(LengthOf(Line(A,C)),15)",
      "Equals(MeasureOf(Angle(3)),y^{2}+26)",
      "Find(LengthOf(Line(A,F)))"
    ],
    "output_text": "Use [Rhombus(A,B,C,D)] with [Equals(MeasureOf(Angle(1)),2x+20)] [Equals(MeasureOf(Angle(2)),5x-4)] [Equals(LengthOf(Line(A,C)),15)] and [Equals(MeasureOf(Angle(3)),y^{2}+26)] [Find(LengthOf(Line(A,F)))].",
    "success": true
  },
  "833": {
    "text_logic_forms": [
      "UseTheorem(Pythagorean_Triple)",
      "Find(x)"
    ],
    "output_text": "[UseTheorem(Pythagorean_Triple)] to [Find(x)].",
    "success": true
  },
  "834": {
    "text_logic_forms": [
      "Parallel(Line(a),Line(b))",
      "Find(MeasureOf(Angle(M,R,Q)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(M,R,Q)))] so [Parallel(Line(a),Line(b))].",
    "success": true
  },
  "835": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(q)"
    ],
    "output_text": "[Find(q)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "836": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "837": {
    "text_logic_forms": [
      "Parallel(Line(a),Line(b))",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Parallel(Line(a),Line(b))], [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "838": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary.",
    "success": true
  },
  "839": {
    "text_logic_forms": [
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "840": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "841": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "842": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "843": {
    "text_logic_forms": [
      "CircumscribedTo(Triangle(J,K,L),Circle(R))",
      "Find(PerimeterOf(Triangle(J,K,L)))"
    ],
    "output_text": "[CircumscribedTo(Triangle(J,K,L),Circle(R))]. [Find(PerimeterOf(Triangle(J,K,L)))].",
    "success": true
  },
  "844": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "845": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "846": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "847": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "848": {
    "text_logic_forms": [
      "InscribedIn(Regular(Hexagon($)),Circle($))",
      "Equals(DiameterOf(Circle($)),14)",
      "Find(AreaOf(Red(Line($))))"
    ],
    "output_text": "[InscribedIn(Regular(Hexagon($)),Circle($))], [Equals(DiameterOf(Circle($)),14)] [Find(AreaOf(Red(Line($))))].",
    "success": true
  },
  "849": {
    "text_logic_forms": [
      "Rhombus(M,N,O,P)",
      "Find(MeasureOf(Angle(M,R,N)))"
    ],
    "output_text": " [Rhombus(M,N,O,P)]. [Find(MeasureOf(Angle(M,R,N)))].",
    "success": true
  },
  "850": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "851": {
    "text_logic_forms": [
      "Rhombus(X,Y,Z,W)",
      "Equals(MeasureOf(Angle(W,Y,Z)),53)",
      "Equals(LengthOf(Line(V,W)),3)",
      "Equals(LengthOf(Line(X,V)),2a-2)",
      "Equals(LengthOf(Line(Z,V)),\\frac{5a+1}{4})",
      "Find(MeasureOf(Angle(Y,Z,V)))"
    ],
    "output_text": "Use [Rhombus(X,Y,Z,W)] with [Equals(MeasureOf(Angle(W,Y,Z)),53)] [Equals(LengthOf(Line(V,W)),3)] [Equals(LengthOf(Line(X,V)),2a-2)] and [Equals(LengthOf(Line(Z,V)),\\frac{5a+1}{4})] [Find(MeasureOf(Angle(Y,Z,V)))].",
    "success": true
  },
  "852": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))].",
    "success": true
  },
  "853": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(L)),32)",
      "Perpendicular(Line(L,H),Line(G,J))",
      "Equals(LengthOf(Line(G,J)),40)",
      "Find(LengthOf(Line(L,K)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(L)),32)] [Perpendicular(Line(L,H),Line(G,J))] and [Equals(LengthOf(Line(G,J)),40)] [Find(LengthOf(Line(L,K)))].",
    "success": true
  },
  "854": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "855": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "856": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]?",
    "success": true
  },
  "857": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "858": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "859": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "860": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(W,X))",
      "Equals(LengthOf(Line(W,X)),10)",
      "Equals(LengthOf(Line(X,Y)),6)",
      "Equals(LengthOf(Line(W,Y)),8)",
      "Equals(LengthOf(Line(R,Y)),5)",
      "Equals(LengthOf(Line(P,S)),3)",
      "Find(LengthOf(Line(S,Y)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(W,X))], [Equals(LengthOf(Line(W,X)),10)] [Equals(LengthOf(Line(X,Y)),6)] [Equals(LengthOf(Line(W,Y)),8)] [Equals(LengthOf(Line(R,Y)),5)] and [Equals(LengthOf(Line(P,S)),3)] [Find(LengthOf(Line(S,Y)))].",
    "success": true
  },
  "861": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "862": {
    "text_logic_forms": [
      "Congruent(Triangle(M,H,J),Triangle(P,Q,J))",
      "Find(y)"
    ],
    "output_text": "[Congruent(Triangle(M,H,J),Triangle(P,Q,J))]. [Find(y)].",
    "success": true
  },
  "863": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,T)))]?",
    "success": true
  },
  "864": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "865": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(12)),64)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(12)),64)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "866": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "867": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(M,R,P)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(M,R,P)))].",
    "success": true
  },
  "868": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "869": {
    "text_logic_forms": [
      "Perpendicular(Line(T,U),Line(U,V))",
      "Perpendicular(Line(U,V),Line(V,W))",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "If [Perpendicular(Line(T,U),Line(U,V))] and [Perpendicular(Line(U,V),Line(V,W))], [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "870": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "871": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "872": {
    "text_logic_forms": [
      "Trapezoid(A,B,C,D)",
      "Equals(MeasureOf(Angle(A,B,C)),4x+11)",
      "Equals(MeasureOf(Angle(D,A,B)),2x+33)",
      "Isosceles(Quadrilateral(A,B,C,D))",
      "Find(x)"
    ],
    "output_text": " [Trapezoid(A,B,C,D)]. If [Equals(MeasureOf(Angle(A,B,C)),4x+11)] and [Equals(MeasureOf(Angle(D,A,B)),2x+33)] [Find(x)] so [Isosceles(Quadrilateral(A,B,C,D))].",
    "success": true
  },
  "873": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "874": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Circle(P)))"
    ],
    "output_text": "[Find(CircumferenceOf(Circle(P)))].",
    "success": true
  },
  "875": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "876": {
    "text_logic_forms": [
      "Triangle($)",
      "Find(h)"
    ],
    "output_text": "[Find(h)] in [Triangle($)].",
    "success": true
  },
  "877": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "878": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "879": {
    "text_logic_forms": [
      "Equals(AreaOf(Parallelogram(A,B,C,D)),150)",
      "Equals(AreaOf(Parallelogram(F,G,H,J)),54)",
      "Similar(Parallelogram(A,B,C,D),Parallelogram(F,G,H,J))",
      "Find(x)"
    ],
    "output_text": "[Equals(AreaOf(Parallelogram(A,B,C,D)),150)] [Equals(AreaOf(Parallelogram(F,G,H,J)),54)] If [Similar(Parallelogram(A,B,C,D),Parallelogram(F,G,H,J))], [Find(x)].",
    "success": true
  },
  "880": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "881": {
    "text_logic_forms": [
      "Equals(b,18)",
      "Find(a)"
    ],
    "output_text": "If [Equals(b,18)] [Find(a)].",
    "success": true
  },
  "882": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(E,B)),9)",
      "Equals(LengthOf(Line(A,B)),12)",
      "Equals(MeasureOf(Angle(A,B,D)),55)",
      "Find(MeasureOf(Angle(A,C,B)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(E,B)),9)] [Equals(LengthOf(Line(A,B)),12)] and [Equals(MeasureOf(Angle(A,B,D)),55)] [Find(MeasureOf(Angle(A,C,B)))].",
    "success": true
  },
  "883": {
    "text_logic_forms": [
      "Tangent(Line(P,Q),Circle(R))",
      "Circle(S)",
      "Find(LengthOf(Line(P,Q)))"
    ],
    "output_text": "[Tangent(Line(P,Q),Circle(R))] and [Circle(S)]. [Find(LengthOf(Line(P,Q)))].",
    "success": true
  },
  "884": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "885": {
    "text_logic_forms": [
      "Find(h)"
    ],
    "output_text": "[Find(h)].",
    "success": true
  },
  "886": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Y)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Y)))].",
    "success": true
  },
  "887": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),3x+40)",
      "Equals(MeasureOf(Angle(2)),2(y-10))",
      "Equals(MeasureOf(Angle(3)),2x+70)",
      "Find(y)"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(1)),3x+40)] [Equals(MeasureOf(Angle(2)),2(y-10))] and [Equals(MeasureOf(Angle(3)),2x+70)] [Find(y)].",
    "success": true
  },
  "888": {
    "text_logic_forms": [
      "Circle(S)",
      "Find(LengthOf(Line(P,R)))"
    ],
    "output_text": "In [Circle(S)], [Find(LengthOf(Line(P,R)))].",
    "success": true
  },
  "889": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(F,E)),118)",
      "Equals(MeasureOf(Arc(A,B)),108)",
      "Equals(MeasureOf(Angle(E,G,B)),52)",
      "Equals(MeasureOf(Angle(E,F,B)),30)",
      "Find(MeasureOf(Arc(A,C)))"
    ],
    "output_text": "If [Equals(MeasureOf(Arc(F,E)),118)] [Equals(MeasureOf(Arc(A,B)),108)] [Equals(MeasureOf(Angle(E,G,B)),52)] and [Equals(MeasureOf(Angle(E,F,B)),30)] [Find(MeasureOf(Arc(A,C)))].",
    "success": true
  },
  "890": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(LengthOf(Line(C,D)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(LengthOf(Line(C,D)))].",
    "success": true
  },
  "891": {
    "text_logic_forms": [
      "Find(LengthOf(Line(H,K)))"
    ],
    "output_text": "[Find(LengthOf(Line(H,K)))].",
    "success": true
  },
  "892": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(c)"
    ],
    "output_text": "[Find(c)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "893": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "894": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "895": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "896": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(B,T)),5)",
      "Equals(LengthOf(Line(T,C)),8)",
      "Find(LengthOf(Line(C,D)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(B,T)),5)] and [Equals(LengthOf(Line(T,C)),8)] [Find(LengthOf(Line(C,D)))].",
    "success": true
  },
  "897": {
    "text_logic_forms": [
      "Circle(A)",
      "Equals(MeasureOf(Angle(E,A,D)),42)",
      "Find(MeasureOf(Arc(C,D)))"
    ],
    "output_text": "In [Circle(A)], [Equals(MeasureOf(Angle(E,A,D)),42)] [Find(MeasureOf(Arc(C,D)))].",
    "success": true
  },
  "898": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "899": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "900": {
    "text_logic_forms": [
      "Equals(a,8)",
      "Equals(b,15)",
      "Equals(c,17)",
      "Find(CosOf(Angle(B)))"
    ],
    "output_text": "[Equals(a,8)] [Equals(b,15)] and [Equals(c,17)] [Find(CosOf(Angle(B)))].",
    "success": true
  },
  "901": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "902": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))] if [Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))].",
    "success": true
  },
  "903": {
    "text_logic_forms": [
      "IsMidpointOf(Point(S),Line(D,E))",
      "IsMidpointOf(Point(T),Line(E,F))",
      "IsMidpointOf(Point(U),Line(D,F))",
      "Find(x)"
    ],
    "output_text": "[IsMidpointOf(Point(S),Line(D,E))], [IsMidpointOf(Point(T),Line(E,F))], [IsMidpointOf(Point(U),Line(D,F))],,. [Find(x)].",
    "success": true
  },
  "904": {
    "text_logic_forms": [
      "Triangle(P,Q,R)",
      "Equals(LengthOf(Line(Z,Q)),3a-11)",
      "Equals(LengthOf(Line(Z,P)),a+5)",
      "Equals(LengthOf(Line(P,Y)),2c-1)",
      "Equals(LengthOf(Line(Y,R)),4c-11)",
      "Equals(MeasureOf(Angle(P,R,Z)),4b-17)",
      "Equals(MeasureOf(Angle(Z,R,Q)),3b-4)",
      "Equals(MeasureOf(Angle(Q,Y,R)),7b+6)",
      "Equals(MeasureOf(Angle(P,X,R)),2a+10)",
      "IsMedianOf(Line(Q,Y),Shape($))",
      "Find(LengthOf(Line(P,R)))"
    ],
    "output_text": "In [Triangle(P,Q,R)], [Equals(LengthOf(Line(Z,Q)),3a-11)] [Equals(LengthOf(Line(Z,P)),a+5)] [Equals(LengthOf(Line(P,Y)),2c-1)] [Equals(LengthOf(Line(Y,R)),4c-11)] [Equals(MeasureOf(Angle(P,R,Z)),4b-17)] [Equals(MeasureOf(Angle(Z,R,Q)),3b-4)] [Equals(MeasureOf(Angle(Q,Y,R)),7b+6)] and [Equals(MeasureOf(Angle(P,X,R)),2a+10)] [Find(LengthOf(Line(P,R)))] if [IsMedianOf(Line(Q,Y),Shape($))].",
    "success": true
  },
  "905": {
    "text_logic_forms": [
      "CircumscribedTo(Triangle(J,K,L),Circle(R))",
      "Find(x)"
    ],
    "output_text": "[CircumscribedTo(Triangle(J,K,L),Circle(R))]. [Find(x)].",
    "success": true
  },
  "906": {
    "text_logic_forms": [
      "Rectangle(D,E,F,G)",
      "Equals(LengthOf(Line(F,D)),3x-7)",
      "Equals(LengthOf(Line(E,G)),x+5)",
      "Find(LengthOf(Line(E,G)))"
    ],
    "output_text": " [Rectangle(D,E,F,G)]. If [Equals(LengthOf(Line(F,D)),3x-7)] and [Equals(LengthOf(Line(E,G)),x+5)] [Find(LengthOf(Line(E,G)))].",
    "success": true
  },
  "907": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "908": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "909": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "910": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(y)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(y)].",
    "success": true
  },
  "911": {
    "text_logic_forms": [
      "Isosceles(Trapezoid(X,Y,Z,W))",
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "For [Isosceles(Trapezoid(X,Y,Z,W))], [Find(MeasureOf(Angle(Z)))].",
    "success": true
  },
  "912": {
    "text_logic_forms": [
      "Square(W,X,Y,Z)",
      "Equals(LengthOf(Line(W,T)),3)",
      "Find(LengthOf(Line(Z,X)))"
    ],
    "output_text": " [Square(W,X,Y,Z)]. If [Equals(LengthOf(Line(W,T)),3)] [Find(LengthOf(Line(Z,X)))].",
    "success": true
  },
  "913": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "914": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "915": {
    "text_logic_forms": [
      "Trapezoid(Q,R,T,U)",
      "IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))",
      "IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))",
      "Equals(LengthOf(Line(V,S)),9)",
      "Equals(LengthOf(Line(U,T)),12)",
      "Find(LengthOf(Line(Q,R)))"
    ],
    "output_text": "[Trapezoid(Q,R,T,U)], [IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))], [IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))],. If [Equals(LengthOf(Line(V,S)),9)] and [Equals(LengthOf(Line(U,T)),12)] [Find(LengthOf(Line(Q,R)))].",
    "success": true
  },
  "916": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "917": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(A)),8)",
      "Equals(DiameterOf(Circle(B)),18)",
      "Equals(DiameterOf(Circle(C)),11)",
      "Find(LengthOf(Line(F,G)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(A)),8)] [Equals(DiameterOf(Circle(B)),18)] [Equals(DiameterOf(Circle(C)),11)] [Find(LengthOf(Line(F,G)))].",
    "success": true
  },
  "918": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "919": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "920": {
    "text_logic_forms": [
      "Parallel(Line(Q,R),Line(T,S))",
      "Parallel(Line(Q,T),Line(R,S))",
      "Equals(MeasureOf(Angle(1)),131)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": ", [Parallel(Line(Q,R),Line(T,S))], [Parallel(Line(Q,T),Line(R,S))] and [Equals(MeasureOf(Angle(1)),131)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "921": {
    "text_logic_forms": [
      "Kite(C,D,F,G)",
      "Find(LengthOf(Line(G,F)))"
    ],
    "output_text": "If [Kite(C,D,F,G)], [Find(LengthOf(Line(G,F)))].",
    "success": true
  },
  "922": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "923": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "924": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "925": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "926": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(W,X))",
      "Equals(LengthOf(Line(W,X)),10)",
      "Equals(LengthOf(Line(X,Y)),6)",
      "Equals(LengthOf(Line(W,Y)),8)",
      "Equals(LengthOf(Line(R,Y)),5)",
      "Equals(LengthOf(Line(P,S)),3)",
      "Find(LengthOf(Line(S,Y)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(W,X))], [Equals(LengthOf(Line(W,X)),10)] [Equals(LengthOf(Line(X,Y)),6)] [Equals(LengthOf(Line(W,Y)),8)] [Equals(LengthOf(Line(R,Y)),5)] and [Equals(LengthOf(Line(P,S)),3)] [Find(LengthOf(Line(S,Y)))].",
    "success": true
  },
  "927": {
    "text_logic_forms": [
      "IsMidpointOf(Point(J),Line(K,H))",
      "IsMidpointOf(Point(P),Line(H,M))",
      "IsMidpointOf(Point(L),Line(M,K))",
      "Find(y)"
    ],
    "output_text": "If [IsMidpointOf(Point(J),Line(K,H))], [IsMidpointOf(Point(P),Line(H,M))], [IsMidpointOf(Point(L),Line(M,K))],,. [Find(y)].",
    "success": true
  },
  "928": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "929": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "930": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(K)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(K)))].",
    "success": true
  },
  "931": {
    "text_logic_forms": [
      "Kite(W,X,Y,Z)",
      "Equals(MeasureOf(Angle(W,X,Y)),13x+24)",
      "Equals(MeasureOf(Angle(W,Z,Y)),35)",
      "Equals(MeasureOf(Angle(Z,W,X)),13x+14)",
      "Find(MeasureOf(Angle(Z,Y,X)))"
    ],
    "output_text": " [Kite(W,X,Y,Z)]. If [Equals(MeasureOf(Angle(W,X,Y)),13x+24)] [Equals(MeasureOf(Angle(W,Z,Y)),35)] and [Equals(MeasureOf(Angle(Z,W,X)),13x+14)] [Find(MeasureOf(Angle(Z,Y,X)))].",
    "success": true
  },
  "932": {
    "text_logic_forms": [
      "Equals(a,4)",
      "Find(b)"
    ],
    "output_text": "If [Equals(a,4)] [Find(b)].",
    "success": true
  },
  "933": {
    "text_logic_forms": [
      "Find(LengthOf(Line(J,L)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,L)))].",
    "success": true
  },
  "934": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "935": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "936": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "937": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(T,U)),14)",
      "Find(RadiusOf(Circle(Q)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(T,U)),14)] [Find(RadiusOf(Circle(Q)))].",
    "success": true
  },
  "938": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "939": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "940": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "941": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "942": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A,E,B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,E,B)))].",
    "success": true
  },
  "943": {
    "text_logic_forms": [
      "Find(LengthOf(Line(X,A)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,A)))].",
    "success": true
  },
  "944": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "945": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(AreaOf(Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], [Find(AreaOf(Green(Shape($))))].",
    "success": true
  },
  "946": {
    "text_logic_forms": [
      "Triangle(R,S,T)",
      "IsCentroidOf(Point(Z),Triangle(R,S,T))",
      "Equals(LengthOf(Line(R,Z)),18)",
      "Find(LengthOf(Line(S,Z)))"
    ],
    "output_text": " [Triangle(R,S,T)], [IsCentroidOf(Point(Z),Triangle(R,S,T))] and [Equals(LengthOf(Line(R,Z)),18)] [Find(LengthOf(Line(S,Z)))].",
    "success": true
  },
  "947": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(J,H)),114)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Equals(MeasureOf(Arc(J,H)),114)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "948": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))].",
    "success": true
  },
  "949": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "950": {
    "text_logic_forms": [
      "Tangent(Line(A,E),Circle($))",
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(F,E)),18)",
      "Find(LengthOf(Line(A,E)))"
    ],
    "output_text": "[Tangent(Line(A,E),Circle($))]. If [Equals(LengthOf(Line(A,D)),12)] and [Equals(LengthOf(Line(F,E)),18)] [Find(LengthOf(Line(A,E)))] to nearest tenth unit?",
    "success": true
  },
  "951": {
    "text_logic_forms": [
      "Find(RatioOf(TanOf(Angle(A))))"
    ],
    "output_text": "[Find(RatioOf(TanOf(Angle(A))))] to nearest hundredth.",
    "success": true
  },
  "952": {
    "text_logic_forms": [
      "Equals(AreaOf(Trapezoid(M,N,P,Q)),360)",
      "Find(LengthOf(Line(M,N)))"
    ],
    "output_text": "[Equals(AreaOf(Trapezoid(M,N,P,Q)),360)] [Find(LengthOf(Line(M,N)))].",
    "success": true
  },
  "953": {
    "text_logic_forms": [
      "Isosceles(Triangle(J,M,N))",
      "Equals(LengthOf(Line(J,M)),Line(M,N))",
      "Find(LengthOf(Line(J,N)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,N)))] if [Isosceles(Triangle(J,M,N))] with [Equals(LengthOf(Line(J,M)),Line(M,N))].",
    "success": true
  },
  "954": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(Q,V)),8)",
      "Find(DiameterOf(Circle(Q)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(Q,V)),8)] [Find(DiameterOf(Circle(Q)))].",
    "success": true
  },
  "955": {
    "text_logic_forms": [
      "Isosceles(Trapezoid(T,W,Y,Z))",
      "Equals(Angle(Z),Angle(Y))",
      "Equals(MeasureOf(Angle(Z)),30x)",
      "Equals(Angle(T),Angle(W))",
      "Equals(MeasureOf(Angle(T)),20x)",
      "Find(Angle(Z))"
    ],
    "output_text": "[Isosceles(Trapezoid(T,W,Y,Z))] with [Equals(Angle(Z),Angle(Y))], [Equals(MeasureOf(Angle(Z)),30x)] [Equals(Angle(T),Angle(W))] and [Equals(MeasureOf(Angle(T)),20x)] [Find(Angle(Z))].",
    "success": true
  },
  "956": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "957": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,E)))].",
    "success": true
  },
  "958": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)] to nearest hundredth.",
    "success": true
  },
  "959": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "960": {
    "text_logic_forms": [
      "IsMidpointOf(Point(J),Line(K,H))",
      "IsMidpointOf(Point(P),Line(H,M))",
      "IsMidpointOf(Point(L),Line(M,K))",
      "Find(z)"
    ],
    "output_text": "If [IsMidpointOf(Point(J),Line(K,H))], [IsMidpointOf(Point(P),Line(H,M))], [IsMidpointOf(Point(L),Line(M,K))],,. [Find(z)].",
    "success": true
  },
  "961": {
    "text_logic_forms": [
      "IsIncenterOf(Point(H),Triangle(A,B,C))",
      "Find(MeasureOf(Angle(H,A,C)))"
    ],
    "output_text": "[IsIncenterOf(Point(H),Triangle(A,B,C))]. [Find(MeasureOf(Angle(H,A,C)))].",
    "success": true
  },
  "962": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "963": {
    "text_logic_forms": [
      "Equals(a,8)",
      "Equals(b,15)",
      "Equals(c,17)",
      "Find(TanOf(Angle(B)))"
    ],
    "output_text": "[Equals(a,8)] [Equals(b,15)] and [Equals(c,17)] [Find(TanOf(Angle(B)))].",
    "success": true
  },
  "964": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "965": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))].",
    "success": true
  },
  "966": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "967": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(X,Z)),18)",
      "Equals(LengthOf(Line(P,Y)),3)",
      "Find(LengthOf(Line(P,W)))"
    ],
    "output_text": "[Find(LengthOf(Line(P,W)))], if [Equals(LengthOf(Line(X,Z)),18)] and [Equals(LengthOf(Line(P,Y)),3)].",
    "success": true
  },
  "968": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "969": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(G,K)),Line(G,H))",
      "Equals(LengthOf(Line(H,K)),Line(K,J))",
      "Equals(MeasureOf(Angle(H,G,K)),28)",
      "Find(MeasureOf(Angle(H,J,K)))"
    ],
    "output_text": ", [Equals(LengthOf(Line(G,K)),Line(G,H))] and [Equals(LengthOf(Line(H,K)),Line(K,J))]. If [Equals(MeasureOf(Angle(H,G,K)),28)] [Find(MeasureOf(Angle(H,J,K)))].",
    "success": true
  },
  "970": {
    "text_logic_forms": [
      "Parallelogram(N,Q,R,M)",
      "Find(LengthOf(Line(N,Q)))"
    ],
    "output_text": "Use [Parallelogram(N,Q,R,M)] to [Find(LengthOf(Line(N,Q)))].",
    "success": true
  },
  "971": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "972": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "973": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(C,F)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(C,F)))].",
    "success": true
  },
  "974": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(LengthOf(Line(A,C)),30-x)",
      "Equals(LengthOf(Line(B,D)),4x-60)",
      "Find(x)"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. If [Equals(LengthOf(Line(A,C)),30-x)] and [Equals(LengthOf(Line(B,D)),4x-60)] [Find(x)].",
    "success": true
  },
  "975": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "976": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(M,C)),7)",
      "Equals(LengthOf(Line(R,M)),4)",
      "Equals(LengthOf(Line(A,T)),16)",
      "Find(LengthOf(Line(R,B)))"
    ],
    "output_text": "[Equals(LengthOf(Line(M,C)),7)] [Equals(LengthOf(Line(R,M)),4)] and [Equals(LengthOf(Line(A,T)),16)] [Find(LengthOf(Line(R,B)))].",
    "success": true
  },
  "977": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(B,Y)),2.5)",
      "Equals(LengthOf(Line(C,Z)),2.5)",
      "Equals(LengthOf(Line(A,X)),2.5)",
      "Equals(DiameterOf(Circle(G)),5)",
      "Find(PerimeterOf(Polygon($)))"
    ],
    "output_text": "[Find(PerimeterOf(Polygon($)))] for. [Equals(LengthOf(Line(B,Y)),2.5)] [Equals(LengthOf(Line(C,Z)),2.5)] [Equals(LengthOf(Line(A,X)),2.5)] [Equals(DiameterOf(Circle(G)),5)].",
    "success": true
  },
  "978": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "979": {
    "text_logic_forms": [
      "Find(LengthOf(Arc(Z,Y)))"
    ],
    "output_text": "[Find(LengthOf(Arc(Z,Y)))]. Round to nearest hundredth.",
    "success": true
  },
  "980": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(L,H),Trapezoid(F,G,J,K))",
      "Find(x)"
    ],
    "output_text": ", [IsMidsegmentOf(Line(L,H),Trapezoid(F,G,J,K))]. [Find(x)]?",
    "success": true
  },
  "981": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "982": {
    "text_logic_forms": [
      "IsMedianOf(Line(A,D),Triangle(A,C,B))",
      "IsMedianOf(Line(C,E),Triangle(A,C,B))",
      "Perpendicular(Line(A,D),Line(C,E))",
      "Equals(LengthOf(Line(A,B)),10)",
      "Equals(LengthOf(Line(C,E)),9)",
      "Find(LengthOf(Line(C,A)))"
    ],
    "output_text": "[IsMedianOf(Line(A,D),Triangle(A,C,B))], [IsMedianOf(Line(C,E),Triangle(A,C,B))], [Perpendicular(Line(A,D),Line(C,E))], [Equals(LengthOf(Line(A,B)),10)] and [Equals(LengthOf(Line(C,E)),9)] [Find(LengthOf(Line(C,A)))].",
    "success": true
  },
  "983": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "984": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "985": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(B,C,F)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(B,C,F)))].",
    "success": true
  },
  "986": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(F,E,D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(F,E,D)))].",
    "success": true
  },
  "987": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "988": {
    "text_logic_forms": [
      "IsIncenterOf(Point(P),Triangle(A,E,C))",
      "Find(LengthOf(Line(D,E)))"
    ],
    "output_text": "[IsIncenterOf(Point(P),Triangle(A,E,C))]. [Find(LengthOf(Line(D,E)))]. Rounded to nearest hundredth.",
    "success": true
  },
  "989": {
    "text_logic_forms": [
      "Find(AreaOf(Quadrilateral($)))"
    ],
    "output_text": "[Find(AreaOf(Quadrilateral($)))].",
    "success": true
  },
  "990": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "991": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "992": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "993": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "994": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "995": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(D,G,F)),53)",
      "Equals(MeasureOf(Angle(A,G,C)),40)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))] if [Equals(MeasureOf(Angle(D,G,F)),53)] and [Equals(MeasureOf(Angle(A,G,C)),40)].",
    "success": true
  },
  "996": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "997": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "998": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(K)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(K)))].",
    "success": true
  },
  "999": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1000": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1001": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(X,Z)),39)",
      "Equals(LengthOf(Line(H,W)),20)",
      "Equals(LengthOf(Line(Y,G)),21)",
      "Find(AreaOf(Quadrilateral(X,Y,Z,W)))"
    ],
    "output_text": "[Find(AreaOf(Quadrilateral(X,Y,Z,W)))] if [Equals(LengthOf(Line(X,Z)),39)] [Equals(LengthOf(Line(H,W)),20)] and [Equals(LengthOf(Line(Y,G)),21)].",
    "success": true
  },
  "1002": {
    "text_logic_forms": [
      "Circle(X)",
      "Equals(LengthOf(Line(A,B)),30)",
      "Equals(LengthOf(Line(C,D)),30)",
      "Equals(MeasureOf(Arc(C,Z)),40)",
      "Find(MeasureOf(Arc(Y,B)))"
    ],
    "output_text": "In [Circle(X)], [Equals(LengthOf(Line(A,B)),30)] [Equals(LengthOf(Line(C,D)),30)] and [Equals(MeasureOf(Arc(C,Z)),40)] [Find(MeasureOf(Arc(Y,B)))].",
    "success": true
  },
  "1003": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(W,X)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(W,X)))].",
    "success": true
  },
  "1004": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1005": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(S)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(S)))].",
    "success": true
  },
  "1006": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1007": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(12)),64)",
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(12)),64)] [Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "1008": {
    "text_logic_forms": [
      "Triangle(A,B,C)",
      "Equals(Line(C,D),AltitudeOf(Triangle(A,B,C)))",
      "Equals(MeasureOf(Angle(A,C,B)),90)",
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(B,D)),3)",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Triangle(A,B,C)], [Equals(Line(C,D),AltitudeOf(Triangle(A,B,C)))] and [Equals(MeasureOf(Angle(A,C,B)),90)] If [Equals(LengthOf(Line(A,D)),12)] and [Equals(LengthOf(Line(B,D)),3)] [Find(LengthOf(Line(A,C)))] to nearest tenth.",
    "success": true
  },
  "1009": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(W)),4)",
      "Equals(RadiusOf(Circle(Z)),7)",
      "Equals(LengthOf(Line(X,Y)),2)",
      "Find(LengthOf(Line(Y,Z)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(W)),4)] [Equals(RadiusOf(Circle(Z)),7)] and [Equals(LengthOf(Line(X,Y)),2)] [Find(LengthOf(Line(Y,Z)))].",
    "success": true
  },
  "1010": {
    "text_logic_forms": [
      "Find(LengthOf(Line(D,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,B)))].",
    "success": true
  },
  "1011": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1012": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(12)),64)",
      "Find(MeasureOf(Angle(13)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(12)),64)] [Find(MeasureOf(Angle(13)))].",
    "success": true
  },
  "1013": {
    "text_logic_forms": [
      "Triangle(R,S,T)",
      "IsCentroidOf(Point(Z),Triangle(R,S,T))",
      "Equals(LengthOf(Line(R,Z)),18)",
      "Find(LengthOf(Line(S,R)))"
    ],
    "output_text": " [Triangle(R,S,T)], [IsCentroidOf(Point(Z),Triangle(R,S,T))] and [Equals(LengthOf(Line(R,Z)),18)] [Find(LengthOf(Line(S,R)))].",
    "success": true
  },
  "1014": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1015": {
    "text_logic_forms": [
      "Similar(Pentagon(A,B,C,D,E),Pentagon(P,Q,R,S,T))",
      "Find(ScaleFactorOf(Pentagon(A,B,C,D,E),Pentagon(P,Q,R,S,T)))"
    ],
    "output_text": "If [Similar(Pentagon(A,B,C,D,E),Pentagon(P,Q,R,S,T))], [Find(ScaleFactorOf(Pentagon(A,B,C,D,E),Pentagon(P,Q,R,S,T)))].",
    "success": true
  },
  "1016": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1017": {
    "text_logic_forms": [
      "Parallel(Line(Q,R),Line(T,S))",
      "Parallel(Line(Q,T),Line(R,S))",
      "Equals(MeasureOf(Angle(1)),131)",
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": ", [Parallel(Line(Q,R),Line(T,S))], [Parallel(Line(Q,T),Line(R,S))] and [Equals(MeasureOf(Angle(1)),131)] [Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "1018": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1019": {
    "text_logic_forms": [
      "Triangle(A,B,C)",
      "Similar(Triangle(A,B,C),Triangle(C,B,D))",
      "Equals(LengthOf(Line(C,D)),4)",
      "Equals(LengthOf(Line(D,B)),3)",
      "Equals(LengthOf(Line(C,B)),5)",
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. [Triangle(A,B,C)], if [Similar(Triangle(A,B,C),Triangle(C,B,D))], [Equals(LengthOf(Line(C,D)),4)] [Equals(LengthOf(Line(D,B)),3)] and [Equals(LengthOf(Line(C,B)),5)].",
    "success": true
  },
  "1020": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1021": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(x)"
    ],
    "output_text": "two [Similar(Polygon($1),Polygon($2))]. [Find(x)].",
    "success": true
  },
  "1022": {
    "text_logic_forms": [
      "IsDiameterOf(Line(Q,S),Circle(V))",
      "Find(MeasureOf(Arc(S,T,P)))"
    ],
    "output_text": "[IsDiameterOf(Line(Q,S),Circle(V))]. [Find(MeasureOf(Arc(S,T,P)))].",
    "success": true
  },
  "1023": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(MeasureOf(Angle(A,D,B)),4x+8)",
      "Equals(MeasureOf(Angle(D,B,A)),6x+12)",
      "Find(x)"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. If [Equals(MeasureOf(Angle(A,D,B)),4x+8)] and [Equals(MeasureOf(Angle(D,B,A)),6x+12)] [Find(x)].",
    "success": true
  },
  "1024": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1025": {
    "text_logic_forms": [
      "Equilateral(Triangle(Q,R,S))",
      "Triangle($)",
      "Find(LengthOf(Line(Q,R)))"
    ],
    "output_text": "[Find(LengthOf(Line(Q,R)))] if [Equilateral(Triangle(Q,R,S))] [Triangle($)].",
    "success": true
  },
  "1026": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest hundredth, if necessary.",
    "success": true
  },
  "1027": {
    "text_logic_forms": [
      "Equals(Line(A,N),5)",
      "Find(CircumferenceOf(Circle(N)))"
    ],
    "output_text": "If [Equals(Line(A,N),5)] [Find(CircumferenceOf(Circle(N)))].",
    "success": true
  },
  "1028": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,S)))].",
    "success": true
  },
  "1029": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "1030": {
    "text_logic_forms": [
      "Kite(W,X,Y,Z)",
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "If [Kite(W,X,Y,Z)], [Find(MeasureOf(Angle(Z)))].",
    "success": true
  },
  "1031": {
    "text_logic_forms": [
      "Kite(A,B,C,D)",
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "If [Kite(A,B,C,D)]. [Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "1032": {
    "text_logic_forms": [
      "Find(LengthOf(Line(K,L)))"
    ],
    "output_text": "[Find(LengthOf(Line(K,L)))].",
    "success": true
  },
  "1033": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1034": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "1035": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] in [Parallelogram($)].",
    "success": true
  },
  "1036": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Circle(A)))"
    ],
    "output_text": "[Find(CircumferenceOf(Circle(A)))].",
    "success": true
  },
  "1037": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "1038": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1039": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),123)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),123)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "1040": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "1041": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(K)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(K)))].",
    "success": true
  },
  "1042": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1043": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "1044": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,C)),12)",
      "Equals(LengthOf(Line(A,B)),25)",
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,C)),12)] and [Equals(LengthOf(Line(A,B)),25)] [Find(MeasureOf(Angle(B)))] to nearest tenth?",
    "success": true
  },
  "1045": {
    "text_logic_forms": [
      "Parallel(Line(Q,R),Line(T,S))",
      "Parallel(Line(Q,T),Line(R,S))",
      "Equals(MeasureOf(Angle(1)),131)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": ", [Parallel(Line(Q,R),Line(T,S))], [Parallel(Line(Q,T),Line(R,S))] and [Equals(MeasureOf(Angle(1)),131)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "1046": {
    "text_logic_forms": [
      "Find(LengthOf(Line(B,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,D)))].",
    "success": true
  },
  "1047": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(10)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(10)))].",
    "success": true
  },
  "1048": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram(A,B,C,D)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram(A,B,C,D)))].",
    "success": true
  },
  "1049": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),62)",
      "Equals(MeasureOf(Angle(14)),38)",
      "Find(MeasureOf(Angle(10)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(11)),62)] and [Equals(MeasureOf(Angle(14)),38)] [Find(MeasureOf(Angle(10)))].",
    "success": true
  },
  "1050": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1051": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),58)",
      "Equals(MeasureOf(Angle(2)),47)",
      "Equals(MeasureOf(Angle(3)),26)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),58)] [Equals(MeasureOf(Angle(2)),47)] and [Equals(MeasureOf(Angle(3)),26)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "1052": {
    "text_logic_forms": [
      "Kite(Q,R,S,T)",
      "Find(MeasureOf(Angle(R,S,T)))"
    ],
    "output_text": "If [Kite(Q,R,S,T)], [Find(MeasureOf(Angle(R,S,T)))].",
    "success": true
  },
  "1053": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(MeasureOf(Arc(E,N)),66)",
      "Equals(MeasureOf(Angle(G,P,M)),89)",
      "Find(MeasureOf(Angle(G,M,E)))"
    ],
    "output_text": "In [Circle(P)], [Equals(MeasureOf(Arc(E,N)),66)] and [Equals(MeasureOf(Angle(G,P,M)),89)] [Find(MeasureOf(Angle(G,M,E)))].",
    "success": true
  },
  "1054": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1055": {
    "text_logic_forms": [
      "Congruent(Circle($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Circle($),Circle($))]. [Find(x)].",
    "success": true
  },
  "1056": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "1057": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]?",
    "success": true
  },
  "1058": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(d)"
    ],
    "output_text": "[Find(d)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1059": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "1060": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "1061": {
    "text_logic_forms": [
      "Find(SinOf(Angle(A)))"
    ],
    "output_text": "[Find(SinOf(Angle(A)))].",
    "success": true
  },
  "1062": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(L,K)),4)",
      "Equals(LengthOf(Line(M,P)),3)",
      "Equals(LengthOf(Line(P,Q)),6)",
      "Equals(LengthOf(Line(K,J)),2)",
      "Equals(LengthOf(Line(R,S)),6)",
      "Equals(LengthOf(Line(L,P)),2)",
      "Find(LengthOf(Line(Q,R)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(L,K)),4)] [Equals(LengthOf(Line(M,P)),3)] [Equals(LengthOf(Line(P,Q)),6)] [Equals(LengthOf(Line(K,J)),2)] [Equals(LengthOf(Line(R,S)),6)] and [Equals(LengthOf(Line(L,P)),2)] [Find(LengthOf(Line(Q,R)))].",
    "success": true
  },
  "1063": {
    "text_logic_forms": [
      "Circle(F)",
      "IsDiameterOf(Line(A,C),Circle(F))",
      "Find(MeasureOf(Angle(D,F,B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D,F,B)))] on [Circle(F)], [IsDiameterOf(Line(A,C),Circle(F))].",
    "success": true
  },
  "1064": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1065": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1066": {
    "text_logic_forms": [
      "Similar(Triangle(J,K,L),Triangle(W,Y,Z))",
      "Find(y)"
    ],
    "output_text": "[Similar(Triangle(J,K,L),Triangle(W,Y,Z))]. [Find(y)].",
    "success": true
  },
  "1067": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "1068": {
    "text_logic_forms": [
      "Rhombus(M,N,O,P)",
      "Equals(LengthOf(Line(P,R)),12)",
      "Find(LengthOf(Line(R,N)))"
    ],
    "output_text": " [Rhombus(M,N,O,P)]. If [Equals(LengthOf(Line(P,R)),12)] [Find(LengthOf(Line(R,N)))].",
    "success": true
  },
  "1069": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Q)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Q)))].",
    "success": true
  },
  "1070": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1071": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,C,D,F),Quadrilateral(V,W,Y,Z))",
      "Find(y)"
    ],
    "output_text": "[Similar(Quadrilateral(A,C,D,F),Quadrilateral(V,W,Y,Z))]. [Find(y)].",
    "success": true
  },
  "1072": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1073": {
    "text_logic_forms": [
      "Equals(Triangle($),Triangle($1,$2,$3))",
      "Equals(MeasureOf(Angle($1)),45)",
      "Equals(MeasureOf(Angle($2)),45)",
      "Equals(MeasureOf(Angle($3)),90)",
      "Find(x)"
    ],
    "output_text": "[Equals(Triangle($),Triangle($1,$2,$3))], [Equals(MeasureOf(Angle($1)),45)], [Equals(MeasureOf(Angle($2)),45)], [Equals(MeasureOf(Angle($3)),90)]. [Find(x)].",
    "success": true
  },
  "1074": {
    "text_logic_forms": [
      "Equilateral(Triangle($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Assume [Equilateral(Triangle($))].",
    "success": true
  },
  "1075": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "1076": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1077": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "1078": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1079": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))",
      "Equals(MeasureOf(Angle(A,G,F)),108)",
      "Equals(LengthOf(Line(G,F)),14)",
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(D,G)),4.5)",
      "Equals(LengthOf(Line(E,F)),8)",
      "Equals(LengthOf(Line(A,B)),26)",
      "Find(LengthOf(Line(D,C)))"
    ],
    "output_text": "[Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))], [Equals(MeasureOf(Angle(A,G,F)),108)] [Equals(LengthOf(Line(G,F)),14)] [Equals(LengthOf(Line(A,D)),12)] [Equals(LengthOf(Line(D,G)),4.5)] [Equals(LengthOf(Line(E,F)),8)] and [Equals(LengthOf(Line(A,B)),26)] [Find(LengthOf(Line(D,C)))].",
    "success": true
  },
  "1080": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "1081": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1082": {
    "text_logic_forms": [
      "IsDiameterOf(Line(G,J),Circle(K))",
      "Find(MeasureOf(Arc(G,L,H)))"
    ],
    "output_text": "[IsDiameterOf(Line(G,J),Circle(K))]. [Find(MeasureOf(Arc(G,L,H)))].",
    "success": true
  },
  "1083": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1084": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "1085": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1086": {
    "text_logic_forms": [
      "Trapezoid(C,D,F,G)",
      "IsMedianOf(Line(H,E),Trapezoid(C,D,F,G))",
      "IsMedianOf(Line(Y,Z),Quadrilateral(H,E,F,G))",
      "Find(LengthOf(Line(Y,Z)))"
    ],
    "output_text": "[Trapezoid(C,D,F,G)], [IsMedianOf(Line(H,E),Trapezoid(C,D,F,G))]. Let [IsMedianOf(Line(Y,Z),Quadrilateral(H,E,F,G))]. [Find(LengthOf(Line(Y,Z)))].",
    "success": true
  },
  "1087": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Assume inscribed [Regular(Polygon($))].",
    "success": true
  },
  "1088": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1089": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1090": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1091": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1092": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1093": {
    "text_logic_forms": [
      "Circle(K)",
      "Equals(LengthOf(Line(M,N)),16)",
      "Equals(MeasureOf(Arc(M,N)),98)",
      "Find(MeasureOf(Arc(N,J)))"
    ],
    "output_text": "In [Circle(K)], [Equals(LengthOf(Line(M,N)),16)] and [Equals(MeasureOf(Arc(M,N)),98)] [Find(MeasureOf(Arc(N,J)))]. Round to nearest hundredth.",
    "success": true
  },
  "1094": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "1095": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1096": {
    "text_logic_forms": [
      "Equals(PerimeterOf(Regular(Hexagon($))),72)",
      "Find(AreaOf(Regular(Hexagon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Hexagon($))))], [Equals(PerimeterOf(Regular(Hexagon($))),72)].",
    "success": true
  },
  "1097": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1098": {
    "text_logic_forms": [
      "Find(LengthOf(Line(M,P)))"
    ],
    "output_text": "[Find(LengthOf(Line(M,P)))].",
    "success": true
  },
  "1099": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1100": {
    "text_logic_forms": [
      "Congruent(Circle(M),Circle(N))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [Congruent(Circle(M),Circle(N))].",
    "success": true
  },
  "1101": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "1102": {
    "text_logic_forms": [
      "Parallel(Line(M,N),Line(P,Q))",
      "Find(x)"
    ],
    "output_text": "If [Parallel(Line(M,N),Line(P,Q))], to [Find(x)].",
    "success": true
  },
  "1103": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "1104": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(MeasureOf(Arc(E,N)),66)",
      "Equals(MeasureOf(Angle(G,P,M)),89)",
      "Find(MeasureOf(Angle(E,G,N)))"
    ],
    "output_text": "In [Circle(P)], [Equals(MeasureOf(Arc(E,N)),66)] and [Equals(MeasureOf(Angle(G,P,M)),89)] [Find(MeasureOf(Angle(E,G,N)))].",
    "success": true
  },
  "1105": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1106": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1107": {
    "text_logic_forms": [
      "Find(AreaOf(Quadrilateral($)))"
    ],
    "output_text": "[Find(AreaOf(Quadrilateral($)))].",
    "success": true
  },
  "1108": {
    "text_logic_forms": [
      "Find(LengthOf(Line(V,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(V,S)))].",
    "success": true
  },
  "1109": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1110": {
    "text_logic_forms": [
      "Find(RatioOf(TanOf(Angle(Q))))"
    ],
    "output_text": "[Find(RatioOf(TanOf(Angle(Q))))] to nearest hundredth.",
    "success": true
  },
  "1111": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1112": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))] to nearest tenth.",
    "success": true
  },
  "1113": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(x)"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(x)].",
    "success": true
  },
  "1114": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(F,K)),3x-1)",
      "Equals(LengthOf(Line(K,G)),4y+3)",
      "Equals(LengthOf(Line(J,K)),6y-2)",
      "Equals(LengthOf(Line(K,H)),2x+3)",
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "If [Equals(LengthOf(Line(F,K)),3x-1)] [Equals(LengthOf(Line(K,G)),4y+3)] [Equals(LengthOf(Line(J,K)),6y-2)] and [Equals(LengthOf(Line(K,H)),2x+3)] [Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1115": {
    "text_logic_forms": [
      "Find(AreaOf(Quadrilateral($)))"
    ],
    "output_text": "[Find(AreaOf(Quadrilateral($)))].",
    "success": true
  },
  "1116": {
    "text_logic_forms": [
      "Trapezoid(Q,R,S,T)",
      "IsMidpointOf(Point(M),LegOf(Trapezoid(Q,R,S,T)))",
      "IsMidpointOf(Point(P),LegOf(Trapezoid(Q,R,S,T)))",
      "Equals(LengthOf(Line(T,S)),2x+2)",
      "Equals(LengthOf(Line(Q,R)),5x+3)",
      "Equals(LengthOf(Line(P,M)),13)",
      "Find(LengthOf(Line(T,S)))"
    ],
    "output_text": "[Trapezoid(Q,R,S,T)], [IsMidpointOf(Point(M),LegOf(Trapezoid(Q,R,S,T)))], [IsMidpointOf(Point(P),LegOf(Trapezoid(Q,R,S,T)))],. If [Equals(LengthOf(Line(T,S)),2x+2)] [Equals(LengthOf(Line(Q,R)),5x+3)] and [Equals(LengthOf(Line(P,M)),13)] [Find(LengthOf(Line(T,S)))].",
    "success": true
  },
  "1117": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(P)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(P)))].",
    "success": true
  },
  "1118": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1119": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1120": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(X,N)),t-2)",
      "Equals(LengthOf(Line(N,Z)),t+1)",
      "Equals(LengthOf(Line(X,M)),2)",
      "Equals(LengthOf(Line(X,Y)),10)",
      "Find(t)"
    ],
    "output_text": "If [Equals(LengthOf(Line(X,N)),t-2)] [Equals(LengthOf(Line(N,Z)),t+1)] [Equals(LengthOf(Line(X,M)),2)] and [Equals(LengthOf(Line(X,Y)),10)] [Find(t)].",
    "success": true
  },
  "1121": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1122": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "1123": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(MeasureOf(Angle(2)),40)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. [Equals(MeasureOf(Angle(2)),40)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "1124": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1125": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1126": {
    "text_logic_forms": [
      "IsCentroidOf(Point(Q),Shape($))",
      "Equals(LengthOf(Line(B,E)),9)",
      "Find(LengthOf(Line(Q,E)))"
    ],
    "output_text": "[IsCentroidOf(Point(Q),Shape($))] and [Equals(LengthOf(Line(B,E)),9)] [Find(LengthOf(Line(Q,E)))].",
    "success": true
  },
  "1127": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1128": {
    "text_logic_forms": [
      "InscribedIn(Quadrilateral(A,B,C,D),Circle(Z))",
      "Equals(MeasureOf(Angle(B,Z,A)),104)",
      "Equals(MeasureOf(Arc(C,B)),94)",
      "Parallel(Line(A,B),Line(D,C))",
      "Find(MeasureOf(Arc(A,D,C)))"
    ],
    "output_text": "[InscribedIn(Quadrilateral(A,B,C,D),Circle(Z))] [Equals(MeasureOf(Angle(B,Z,A)),104)] [Equals(MeasureOf(Arc(C,B)),94)] and [Parallel(Line(A,B),Line(D,C))]. [Find(MeasureOf(Arc(A,D,C)))].",
    "success": true
  },
  "1129": {
    "text_logic_forms": [
      "InscribedIn(Square(F,G,H,J),Circle(K))",
      "Find(MeasureOf(Angle($)))"
    ],
    "output_text": "[InscribedIn(Square(F,G,H,J),Circle(K))]. [Find(MeasureOf(Angle($)))].",
    "success": true
  },
  "1130": {
    "text_logic_forms": [
      "Rhombus(L,M,P,Q)",
      "Equals(MeasureOf(Angle(Q,L,M)),2x^{2}-10)",
      "Equals(MeasureOf(Angle(Q,P,M)),8x)",
      "Equals(LengthOf(Line(M,P)),10)",
      "Find(MeasureOf(Angle(L,P,Q)))"
    ],
    "output_text": "In [Rhombus(L,M,P,Q)], [Equals(MeasureOf(Angle(Q,L,M)),2x^{2}-10)] [Equals(MeasureOf(Angle(Q,P,M)),8x)] and [Equals(LengthOf(Line(M,P)),10)] [Find(MeasureOf(Angle(L,P,Q)))].",
    "success": true
  },
  "1131": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1132": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(E,X)),24)",
      "Equals(LengthOf(Line(D,E)),7)",
      "Find(LengthOf(Line(D,X)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,X)))] if [Equals(LengthOf(Line(E,X)),24)] and [Equals(LengthOf(Line(D,E)),7)].",
    "success": true
  },
  "1133": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "1134": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "1135": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1136": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T,Q,R)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T,Q,R)))].",
    "success": true
  },
  "1137": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(y)"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(y)].",
    "success": true
  },
  "1138": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1139": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1140": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1141": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1142": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1143": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1144": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1145": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1146": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "1147": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R)))] to nearest tenth.",
    "success": true
  },
  "1148": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1149": {
    "text_logic_forms": [
      "Equals(RatioOf(Line(I,J),Line(X,J)),RatioOf(Line(H,J),Line(Y,J)))",
      "Equals(MeasureOf(Angle(W,X,J)),130)",
      "Equals(MeasureOf(Angle(W,Z,G)),20)",
      "Find(MeasureOf(Angle(J,H,G)))"
    ],
    "output_text": "If [Equals(RatioOf(Line(I,J),Line(X,J)),RatioOf(Line(H,J),Line(Y,J)))], [Equals(MeasureOf(Angle(W,X,J)),130)] and [Equals(MeasureOf(Angle(W,Z,G)),20)] [Find(MeasureOf(Angle(J,H,G)))].",
    "success": true
  },
  "1150": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(19)),100+20x)",
      "Equals(MeasureOf(Angle(20)),20x)",
      "Find(MeasureOf(Angle(20)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(19)),100+20x)] [Equals(MeasureOf(Angle(20)),20x)] [Find(MeasureOf(Angle(20)))].",
    "success": true
  },
  "1151": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1152": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1153": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1154": {
    "text_logic_forms": [
      "Equals(c,8)",
      "Find(a)"
    ],
    "output_text": "If [Equals(c,8)] [Find(a)].",
    "success": true
  },
  "1155": {
    "text_logic_forms": [
      "Find(p)"
    ],
    "output_text": ", [Find(p)] ?",
    "success": true
  },
  "1156": {
    "text_logic_forms": [
      "Similar(Quadrilateral(M,N,P,Q),Quadrilateral(X,Y,Z,W))",
      "Find(ScaleFactorOf(Quadrilateral(M,N,P,Q),Quadrilateral(X,Y,Z,W)))"
    ],
    "output_text": "If [Similar(Quadrilateral(M,N,P,Q),Quadrilateral(X,Y,Z,W))], [Find(ScaleFactorOf(Quadrilateral(M,N,P,Q),Quadrilateral(X,Y,Z,W)))].",
    "success": true
  },
  "1157": {
    "text_logic_forms": [
      "Parallel(Line(B,C),Line(D,F))",
      "Equals(LengthOf(Line(A,B)),x+5)",
      "Equals(LengthOf(Line(B,D)),12)",
      "Equals(LengthOf(Line(A,C)),3x+1)",
      "Equals(LengthOf(Line(C,F)),15)",
      "Find(x)"
    ],
    "output_text": "[Parallel(Line(B,C),Line(D,F))]. [Equals(LengthOf(Line(A,B)),x+5)] [Equals(LengthOf(Line(B,D)),12)] [Equals(LengthOf(Line(A,C)),3x+1)] and [Equals(LengthOf(Line(C,F)),15)] [Find(x)].",
    "success": true
  },
  "1158": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1159": {
    "text_logic_forms": [
      "IsDiameterOf(Line(H,K),Circle(L))",
      "IsDiameterOf(Line(I,G),Circle(L))",
      "Find(MeasureOf(Arc(H,I)))"
    ],
    "output_text": "[IsDiameterOf(Line(H,K),Circle(L))], [IsDiameterOf(Line(I,G),Circle(L))]. [Find(MeasureOf(Arc(H,I)))].",
    "success": true
  },
  "1160": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1161": {
    "text_logic_forms": [
      "UseTheorem(Pythagorean_Theorem)",
      "Find(LengthOf(HypotenuseOf(Right(Triangle($)))))"
    ],
    "output_text": "[UseTheorem(Pythagorean_Theorem)] to [Find(LengthOf(HypotenuseOf(Right(Triangle($)))))].",
    "success": true
  },
  "1162": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "1163": {
    "text_logic_forms": [
      "Equals(SideOf(Square($)),5)",
      "InscribedIn(Square($),Circle($))",
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[Equals(SideOf(Square($)),5)] [InscribedIn(Square($),Circle($))]. [Find(CircumferenceOf(Circle($)))]? Round to nearest tenth of centimeter.",
    "success": true
  },
  "1164": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1165": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(Z,X,W)),x-11)",
      "Equals(MeasureOf(Angle(W,Z,X)),x-9)",
      "Find(MeasureOf(Angle(Z,X,Y)))"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(Z,X,W)),x-11)] and [Equals(MeasureOf(Angle(W,Z,X)),x-9)] [Find(MeasureOf(Angle(Z,X,Y)))].",
    "success": true
  },
  "1166": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(K,L))",
      "Equals(LengthOf(Line(K,N)),9)",
      "Equals(LengthOf(Line(L,N)),16)",
      "Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))",
      "Find(LengthOf(Line(K,P)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(K,L))], [Equals(LengthOf(Line(K,N)),9)] [Equals(LengthOf(Line(L,N)),16)] [Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))], [Find(LengthOf(Line(K,P)))].",
    "success": true
  },
  "1167": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1168": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1169": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1170": {
    "text_logic_forms": [
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,Y)))].",
    "success": true
  },
  "1171": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1172": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1173": {
    "text_logic_forms": [
      "Similar(Pentagon(F,G,H,J,K),Pentagon(V,W,X,U,Z))",
      "Find(ScaleFactorOf(Shape($1),Shape($2)))"
    ],
    "output_text": "[Similar(Pentagon(F,G,H,J,K),Pentagon(V,W,X,U,Z))] regular pentagons. [Find(ScaleFactorOf(Shape($1),Shape($2)))].",
    "success": false
  },
  "1174": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]? Round to nearest tenth.",
    "success": true
  },
  "1175": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1176": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),4x)",
      "Equals(MeasureOf(Angle(12)),2x-6)",
      "Find(MeasureOf(Angle(12)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(11)),4x)] [Equals(MeasureOf(Angle(12)),2x-6)] [Find(MeasureOf(Angle(12)))].",
    "success": true
  },
  "1177": {
    "text_logic_forms": [
      "Equals(AreaOf(Trapezoid(J,K,L,M)),138)",
      "Equals(AreaOf(Trapezoid(Q,R,S,T)),5.52)",
      "Similar(Trapezoid(J,K,L,M),Trapezoid(Q,R,S,T))",
      "Find(ScaleFactorOf(Trapezoid(J,K,L,M),Trapezoid(Q,R,S,T)))"
    ],
    "output_text": "[Equals(AreaOf(Trapezoid(J,K,L,M)),138)] [Equals(AreaOf(Trapezoid(Q,R,S,T)),5.52)] If [Similar(Trapezoid(J,K,L,M),Trapezoid(Q,R,S,T))], [Find(ScaleFactorOf(Trapezoid(J,K,L,M),Trapezoid(Q,R,S,T)))].",
    "success": true
  },
  "1178": {
    "text_logic_forms": [
      "Congruent(Triangle(R,S,T),Triangle(V,U,T))",
      "Find(AreaOf(Triangle(R,S,T)))"
    ],
    "output_text": "[Congruent(Triangle(R,S,T),Triangle(V,U,T))]. [Find(AreaOf(Triangle(R,S,T)))]?",
    "success": true
  },
  "1179": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))].",
    "success": true
  },
  "1180": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(y)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(y)].",
    "success": true
  },
  "1181": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1182": {
    "text_logic_forms": [
      "Right(Triangle(R,S,T))",
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "[Right(Triangle(R,S,T))]. [Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "1183": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1184": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1185": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "1186": {
    "text_logic_forms": [
      "Isosceles(Triangle(D,F,G))",
      "Isosceles(Triangle(F,G,H))",
      "Equals(MeasureOf(Angle(F,D,H)),28)",
      "Equals(LengthOf(Line(D,G)),Line(F,G))",
      "Equals(LengthOf(Line(F,G)),Line(F,H))",
      "Find(MeasureOf(Angle(D,F,G)))"
    ],
    "output_text": "[Isosceles(Triangle(D,F,G))], [Isosceles(Triangle(F,G,H))], [Equals(MeasureOf(Angle(F,D,H)),28)] and [Equals(LengthOf(Line(D,G)),Line(F,G))], [Equals(LengthOf(Line(F,G)),Line(F,H))]. [Find(MeasureOf(Angle(D,F,G)))].",
    "success": true
  },
  "1187": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "1188": {
    "text_logic_forms": [
      "IsIncenterOf(Point(P),Angle(X,Y,Z))",
      "Find(LengthOf(Line(P,K)))"
    ],
    "output_text": "[IsIncenterOf(Point(P),Angle(X,Y,Z))]. [Find(LengthOf(Line(P,K)))].",
    "success": true
  },
  "1189": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D)))].",
    "success": true
  },
  "1190": {
    "text_logic_forms": [
      "Triangle(X,Y,Z)",
      "IsCentroidOf(Point(P),Triangle(X,Y,Z))",
      "Equals(LengthOf(Line(K,P)),3)",
      "Equals(LengthOf(Line(X,J)),8)",
      "Find(LengthOf(Line(X,K)))"
    ],
    "output_text": "in  [Triangle(X,Y,Z)], [IsCentroidOf(Point(P),Triangle(X,Y,Z))], [Equals(LengthOf(Line(K,P)),3)] and [Equals(LengthOf(Line(X,J)),8)] [Find(LengthOf(Line(X,K)))].",
    "success": true
  },
  "1191": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round angle measure to nearest degree.",
    "success": true
  },
  "1192": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest hundredth, if necessary.",
    "success": true
  },
  "1193": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1194": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1195": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1196": {
    "text_logic_forms": [
      "Parallel(Line(l),Line(m))",
      "Find(x)"
    ],
    "output_text": "[Parallel(Line(l),Line(m))]. [Find(x)]?",
    "success": true
  },
  "1197": {
    "text_logic_forms": [
      "Find(AreaOf(Quadrilateral($)))"
    ],
    "output_text": "[Find(AreaOf(Quadrilateral($)))].",
    "success": true
  },
  "1198": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,E)),3)",
      "Equals(LengthOf(Line(A,B)),2)",
      "Equals(LengthOf(Line(B,C)),6)",
      "Equals(LengthOf(Line(E,D)),2x-3)",
      "Find(LengthOf(Line(E,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(E,D)))] if [Equals(LengthOf(Line(A,E)),3)] [Equals(LengthOf(Line(A,B)),2)] [Equals(LengthOf(Line(B,C)),6)] and [Equals(LengthOf(Line(E,D)),2x-3)].",
    "success": true
  },
  "1199": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Z)))].",
    "success": true
  },
  "1200": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1201": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1202": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(H)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(H)))].",
    "success": true
  },
  "1203": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1204": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(y)"
    ],
    "output_text": "[Find(y)]. [Tangent(Line($),Circle($))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1205": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "1206": {
    "text_logic_forms": [
      "Circle(R)",
      "Equals(LengthOf(Line(S,U)),20)",
      "Equals(LengthOf(Line(Y,W)),20)",
      "Equals(MeasureOf(Arc(Y,X)),45)",
      "Find(MeasureOf(Arc(Y,W)))"
    ],
    "output_text": "In [Circle(R)], [Equals(LengthOf(Line(S,U)),20)] [Equals(LengthOf(Line(Y,W)),20)] and [Equals(MeasureOf(Arc(Y,X)),45)] [Find(MeasureOf(Arc(Y,W)))].",
    "success": true
  },
  "1207": {
    "text_logic_forms": [
      "Find(AreaOf(Blue(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Blue(Sector($))))].",
    "success": true
  },
  "1208": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "1209": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "1210": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1211": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "1212": {
    "text_logic_forms": [
      "Right(Triangle(A,B,C))",
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "In [Right(Triangle(A,B,C))], [Find(MeasureOf(Angle(A)))] to nearest tenth of degree?",
    "success": true
  },
  "1213": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "1214": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),123)",
      "Find(MeasureOf(Angle(11)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),123)] [Find(MeasureOf(Angle(11)))].",
    "success": true
  },
  "1215": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(T,P)),4x+2)",
      "Equals(LengthOf(Line(Q,P)),2y-6)",
      "Equals(LengthOf(Line(P,S)),5y-12)",
      "Equals(LengthOf(Line(P,R)),6x-4)",
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "If [Equals(LengthOf(Line(T,P)),4x+2)] [Equals(LengthOf(Line(Q,P)),2y-6)] [Equals(LengthOf(Line(P,S)),5y-12)] and [Equals(LengthOf(Line(P,R)),6x-4)] [Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "1216": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "1217": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1218": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1219": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(b)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(b)].",
    "success": true
  },
  "1220": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1221": {
    "text_logic_forms": [
      "Congruent(Triangle(R,S,T),Triangle(X,Y,Z))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(R,S,T),Triangle(X,Y,Z))]. [Find(x)].",
    "success": true
  },
  "1222": {
    "text_logic_forms": [
      "Find(a)"
    ],
    "output_text": "[Find(a)].",
    "success": true
  },
  "1223": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "1224": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(y)].",
    "success": true
  },
  "1225": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1226": {
    "text_logic_forms": [
      "Rectangle(E,F,G,H)",
      "Find(Add(MeasureOf(Angle(H,E,F)),MeasureOf(Angle(E,F,G))))"
    ],
    "output_text": " [Rectangle(E,F,G,H)]. [Find(Add(MeasureOf(Angle(H,E,F)),MeasureOf(Angle(E,F,G))))].",
    "success": true
  },
  "1227": {
    "text_logic_forms": [
      "Rectangle(L,M,N,P)",
      "Parallelogram(L,K,M,J)",
      "Equals(MeasureOf(Angle(P,L,K)),110)",
      "Find(MeasureOf(Angle(L,K,M)))"
    ],
    "output_text": "Use [Rectangle(L,M,N,P)], [Parallelogram(L,K,M,J)] to. If [Equals(MeasureOf(Angle(P,L,K)),110)] [Find(MeasureOf(Angle(L,K,M)))].",
    "success": true
  },
  "1228": {
    "text_logic_forms": [
      "Find(LengthOf(Line(T,R)))"
    ],
    "output_text": "[Find(LengthOf(Line(T,R)))].",
    "success": true
  },
  "1229": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1230": {
    "text_logic_forms": [
      "Equals(Line(A,D),AltitudeOf(Triangle(A,B,C)))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [Equals(Line(A,D),AltitudeOf(Triangle(A,B,C)))].",
    "success": true
  },
  "1231": {
    "text_logic_forms": [
      "Circle(A)",
      "Equals(RadiusOf(Circle(A)),14)",
      "Equals(LengthOf(Line(C,D)),22)",
      "Find(LengthOf(Line(E,B)))"
    ],
    "output_text": " [Circle(A)], [Equals(RadiusOf(Circle(A)),14)] and [Equals(LengthOf(Line(C,D)),22)] [Find(LengthOf(Line(E,B)))]. Round to nearest hundredth.",
    "success": true
  },
  "1232": {
    "text_logic_forms": [
      "Shape($)",
      "Parallel(Line(p),Line(q))",
      "Find(MeasureOf(Angle(A,B,D)))"
    ],
    "output_text": "[Shape($)]. [Find(MeasureOf(Angle(A,B,D)))] if [Parallel(Line(p),Line(q))].",
    "success": true
  },
  "1233": {
    "text_logic_forms": [
      "Equals(AreaOf(Trapezoid(N,O,P,Q)),250)",
      "Find(HeightOf(Quadrilateral(N,O,P,Q)))"
    ],
    "output_text": "[Equals(AreaOf(Trapezoid(N,O,P,Q)),250)] [Find(HeightOf(Quadrilateral(N,O,P,Q)))].",
    "success": true
  },
  "1234": {
    "text_logic_forms": [
      "Shape($)",
      "Parallel(Line(p),Line(q))",
      "Find(x)"
    ],
    "output_text": "[Shape($)]. [Find(x)] if [Parallel(Line(p),Line(q))].",
    "success": true
  },
  "1235": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1236": {
    "text_logic_forms": [
      "Rectangle(J,K,L,M)",
      "IsDiagonalOf(Line(J,L),Rectangle(J,K,L,M))",
      "IsDiagonalOf(Line(M,K),Rectangle(J,K,L,M))",
      "Equals(LengthOf(Line(J,L)),2x+5)",
      "Equals(LengthOf(Line(K,M)),4x-11)",
      "Find(x)"
    ],
    "output_text": "[Rectangle(J,K,L,M)], [IsDiagonalOf(Line(J,L),Rectangle(J,K,L,M))], [IsDiagonalOf(Line(M,K),Rectangle(J,K,L,M))]. If [Equals(LengthOf(Line(J,L)),2x+5)] and [Equals(LengthOf(Line(K,M)),4x-11)] [Find(x)]?",
    "success": true
  },
  "1237": {
    "text_logic_forms": [
      "Triangle(A,B,C)",
      "IsMedianOf(Line(B,D),Triangle(A,B,C))",
      "Equals(LengthOf(Line(A,D)),3x+5)",
      "Equals(LengthOf(Line(C,D)),5x-1)",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Triangle(A,B,C)], [IsMedianOf(Line(B,D),Triangle(A,B,C))]. If [Equals(LengthOf(Line(A,D)),3x+5)] and [Equals(LengthOf(Line(C,D)),5x-1)] [Find(LengthOf(Line(A,C)))].",
    "success": true
  },
  "1238": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1239": {
    "text_logic_forms": [
      "Find(LengthOf(Line(L,N)))"
    ],
    "output_text": "[Find(LengthOf(Line(L,N)))].",
    "success": true
  },
  "1240": {
    "text_logic_forms": [
      "IsPerpendicularBisectorOf(Line(l),Triangle(P,Q,R))",
      "IsPerpendicularBisectorOf(Line(m),Triangle(P,Q,R))",
      "IsPerpendicularBisectorOf(Line(n),Triangle(P,Q,R))",
      "IntersectAt(Line(l),Line(m),Line(n),Point(T))",
      "Equals(LengthOf(Line(T,Q)),2x)",
      "Equals(LengthOf(Line(P,T)),3y-1)",
      "Equals(LengthOf(Line(T,R)),8)",
      "Find(y)"
    ],
    "output_text": "[IsPerpendicularBisectorOf(Line(l),Triangle(P,Q,R))], [IsPerpendicularBisectorOf(Line(m),Triangle(P,Q,R))], [IsPerpendicularBisectorOf(Line(n),Triangle(P,Q,R))]. [IntersectAt(Line(l),Line(m),Line(n),Point(T))]. If [Equals(LengthOf(Line(T,Q)),2x)] [Equals(LengthOf(Line(P,T)),3y-1)] and [Equals(LengthOf(Line(T,R)),8)] [Find(y)].",
    "success": true
  },
  "1241": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(MeasureOf(Angle(2)),40)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. [Equals(MeasureOf(Angle(2)),40)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "1242": {
    "text_logic_forms": [
      "RightAngle(Angle(R,S,T))",
      "Perpendicular(Line(S,U),Line(R,T))",
      "Perpendicular(Line(U,V),Line(S,T))",
      "Equals(MeasureOf(Angle(R,T,S)),47)",
      "Find(MeasureOf(Angle(S,U,V)))"
    ],
    "output_text": "If [RightAngle(Angle(R,S,T))], [Perpendicular(Line(S,U),Line(R,T))], [Perpendicular(Line(U,V),Line(S,T))] and [Equals(MeasureOf(Angle(R,T,S)),47)] [Find(MeasureOf(Angle(S,U,V)))].",
    "success": true
  },
  "1243": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "1244": {
    "text_logic_forms": [
      "Congruent(Triangle(P,Q,S),Triangle(R,Q,S))",
      "Find(y)"
    ],
    "output_text": "[Congruent(Triangle(P,Q,S),Triangle(R,Q,S))]. [Find(y)].",
    "success": true
  },
  "1245": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1246": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "1247": {
    "text_logic_forms": [
      "Find(LengthOf(Line(S,R)))"
    ],
    "output_text": "[Find(LengthOf(Line(S,R)))].",
    "success": true
  },
  "1248": {
    "text_logic_forms": [
      "Equals(AreaOf(Triangle(W,X,Y)),248)",
      "Find(LengthOf(BaseOf(Polygon($))))"
    ],
    "output_text": "[Equals(AreaOf(Triangle(W,X,Y)),248)] [Find(LengthOf(BaseOf(Polygon($))))].",
    "success": true
  },
  "1249": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1250": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "1251": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "1252": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "1253": {
    "text_logic_forms": [
      "Circle(B)",
      "Equals(MeasureOf(Angle(L,B,M)),3x)",
      "Equals(MeasureOf(Angle(L,B,Q)),4x+61)",
      "Find(MeasureOf(Angle(P,B,Q)))"
    ],
    "output_text": "In [Circle(B)], [Equals(MeasureOf(Angle(L,B,M)),3x)] and [Equals(MeasureOf(Angle(L,B,Q)),4x+61)] [Find(MeasureOf(Angle(P,B,Q)))]?",
    "success": true
  },
  "1254": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest degree.",
    "success": true
  },
  "1255": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "1256": {
    "text_logic_forms": [
      "Equilateral(Triangle(R,S,T))",
      "Equals(LengthOf(Line(R,S)),x+9)",
      "Equals(LengthOf(Line(S,T)),2x)",
      "Equals(LengthOf(Line(R,T)),3x-9)",
      "Find(LengthOf(Line(R,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,T)))] of [Equilateral(Triangle(R,S,T))] if [Equals(LengthOf(Line(R,S)),x+9)] [Equals(LengthOf(Line(S,T)),2x)] and [Equals(LengthOf(Line(R,T)),3x-9)].",
    "success": true
  },
  "1257": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1258": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]?",
    "success": true
  },
  "1259": {
    "text_logic_forms": [
      "Similar(Triangle(C,B,H),Triangle(F,E,H))",
      "Parallelogram(A,D,E,G)",
      "Equals(LengthOf(Line(C,H)),7)",
      "Equals(LengthOf(Line(F,H)),10)",
      "Equals(LengthOf(Line(F,E)),11)",
      "Equals(LengthOf(Line(E,H)),6)",
      "Find(PerimeterOf(Triangle(C,B,H)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(C,B,H)))], if [Similar(Triangle(C,B,H),Triangle(F,E,H))], [Parallelogram(A,D,E,G)], [Equals(LengthOf(Line(C,H)),7)] [Equals(LengthOf(Line(F,H)),10)] [Equals(LengthOf(Line(F,E)),11)] and [Equals(LengthOf(Line(E,H)),6)].",
    "success": true
  },
  "1260": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1261": {
    "text_logic_forms": [
      "Right(Triangle($))",
      "Equals(LengthOf(Line(B,C)),6)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "In [Right(Triangle($))], [Find(LengthOf(Line(A,B)))] if [Equals(LengthOf(Line(B,C)),6)]?",
    "success": true
  },
  "1262": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1263": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,E)),8)",
      "Equals(LengthOf(Line(E,D)),4)",
      "Equals(LengthOf(Line(B,E)),6)",
      "Find(LengthOf(Line(C,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(C,D)))] if [Equals(LengthOf(Line(A,E)),8)] [Equals(LengthOf(Line(E,D)),4)] and [Equals(LengthOf(Line(B,E)),6)].",
    "success": true
  },
  "1264": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,F)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,F)))].",
    "success": true
  },
  "1265": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1266": {
    "text_logic_forms": [
      "Quadrilateral(A,B,C,D)",
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))] of [Quadrilateral(A,B,C,D)].",
    "success": true
  },
  "1267": {
    "text_logic_forms": [
      "Triangle(P,Q,R)",
      "Equals(LengthOf(Line(Z,Q)),3a-11)",
      "Equals(LengthOf(Line(Z,P)),a+5)",
      "Equals(LengthOf(Line(P,Y)),2c-1)",
      "Equals(LengthOf(Line(Y,R)),4c-11)",
      "Equals(MeasureOf(Angle(P,R,Z)),4b-17)",
      "Equals(MeasureOf(Angle(Z,R,Q)),3b-4)",
      "Equals(MeasureOf(Angle(Q,Y,R)),7b+6)",
      "Equals(MeasureOf(Angle(P,X,R)),2a+10)",
      "Equals(Line(P,X),AltitudeOf(Triangle(P,Q,R)))",
      "Find(a)"
    ],
    "output_text": "In [Triangle(P,Q,R)], [Equals(LengthOf(Line(Z,Q)),3a-11)] [Equals(LengthOf(Line(Z,P)),a+5)] [Equals(LengthOf(Line(P,Y)),2c-1)] [Equals(LengthOf(Line(Y,R)),4c-11)] [Equals(MeasureOf(Angle(P,R,Z)),4b-17)] [Equals(MeasureOf(Angle(Z,R,Q)),3b-4)] [Equals(MeasureOf(Angle(Q,Y,R)),7b+6)] and [Equals(MeasureOf(Angle(P,X,R)),2a+10)] [Equals(Line(P,X),AltitudeOf(Triangle(P,Q,R)))]. [Find(a)].",
    "success": true
  },
  "1268": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "1269": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "1270": {
    "text_logic_forms": [
      "Rhombus(J,K,L,M)",
      "Equals(LengthOf(Line(C,K)),8)",
      "Equals(LengthOf(Line(J,K)),10)",
      "Find(LengthOf(Line(J,C)))"
    ],
    "output_text": " [Rhombus(J,K,L,M)]. If [Equals(LengthOf(Line(C,K)),8)] and [Equals(LengthOf(Line(J,K)),10)] [Find(LengthOf(Line(J,C)))].",
    "success": true
  },
  "1271": {
    "text_logic_forms": [
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "1272": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),104)",
      "Equals(MeasureOf(Angle(14)),118)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(4)),104)] [Equals(MeasureOf(Angle(14)),118)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "1273": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))].",
    "success": true
  },
  "1274": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1275": {
    "text_logic_forms": [
      "Shape($)",
      "Find(z)"
    ],
    "output_text": "[Shape($)]. [Find(z)].",
    "success": true
  },
  "1276": {
    "text_logic_forms": [
      "Triangle(P,Q,R)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] in [Triangle(P,Q,R)].",
    "success": true
  },
  "1277": {
    "text_logic_forms": [
      "Rhombus(X,Y,Z,W)",
      "Equals(MeasureOf(Angle(W,Y,Z)),53)",
      "Equals(LengthOf(Line(V,W)),3)",
      "Equals(LengthOf(Line(X,V)),2a-2)",
      "Equals(LengthOf(Line(Z,V)),\\frac{5a+1}{4})",
      "Find(MeasureOf(Angle(X,Y,W)))"
    ],
    "output_text": "Use [Rhombus(X,Y,Z,W)] with [Equals(MeasureOf(Angle(W,Y,Z)),53)] [Equals(LengthOf(Line(V,W)),3)] [Equals(LengthOf(Line(X,V)),2a-2)] and [Equals(LengthOf(Line(Z,V)),\\frac{5a+1}{4})] [Find(MeasureOf(Angle(X,Y,W)))].",
    "success": true
  },
  "1278": {
    "text_logic_forms": [
      "IsMedianOf(Line(M,S),Triangle(M,N,Q))",
      "Equals(LengthOf(Line(Q,S)),3a-14)",
      "Equals(LengthOf(Line(S,N)),2a+1)",
      "Equals(MeasureOf(Angle(M,S,Q)),7a+1)",
      "Find(a)"
    ],
    "output_text": "If [IsMedianOf(Line(M,S),Triangle(M,N,Q))], [Equals(LengthOf(Line(Q,S)),3a-14)] [Equals(LengthOf(Line(S,N)),2a+1)] and [Equals(MeasureOf(Angle(M,S,Q)),7a+1)] [Find(a)].",
    "success": true
  },
  "1279": {
    "text_logic_forms": [
      "IsDiameterOf(Line(P,M),Circle(R))",
      "Find(MeasureOf(Arc(M,N,Q)))"
    ],
    "output_text": "[IsDiameterOf(Line(P,M),Circle(R))]. [Find(MeasureOf(Arc(M,N,Q)))].",
    "success": true
  },
  "1280": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1281": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1282": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1283": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D)))].",
    "success": true
  },
  "1284": {
    "text_logic_forms": [
      "IsDiameterOf(Line(A,D),Circle(B))",
      "IsDiameterOf(Line(C,G),Circle(B))",
      "Find(MeasureOf(Arc(C,D)))"
    ],
    "output_text": "[IsDiameterOf(Line(A,D),Circle(B))], [IsDiameterOf(Line(C,G),Circle(B))]. [Find(MeasureOf(Arc(C,D)))].",
    "success": true
  },
  "1285": {
    "text_logic_forms": [
      "Find(b)"
    ],
    "output_text": "[Find(b)].",
    "success": true
  },
  "1286": {
    "text_logic_forms": [
      "Triangle(J,L,P)",
      "Equals(MeasureOf(Angle(J,M,P)),3x-6)",
      "Equals(LengthOf(Line(J,K)),3y-2)",
      "Equals(LengthOf(Line(L,K)),5y-8)",
      "IsMedianOf(Line(P,K),Shape($))",
      "Find(LengthOf(Line(L,K)))"
    ],
    "output_text": "In [Triangle(J,L,P)], [Equals(MeasureOf(Angle(J,M,P)),3x-6)] [Equals(LengthOf(Line(J,K)),3y-2)] and [Equals(LengthOf(Line(L,K)),5y-8)] [Find(LengthOf(Line(L,K)))] if [IsMedianOf(Line(P,K),Shape($))].",
    "success": true
  },
  "1287": {
    "text_logic_forms": [
      "InscribedIn(Triangle($),Circle($))",
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[InscribedIn(Triangle($),Circle($))]. [Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "1288": {
    "text_logic_forms": [
      "Isosceles(Triangle(J,M,N))",
      "Equals(LengthOf(Line(J,M)),Line(M,N))",
      "Find(LengthOf(Line(M,N)))"
    ],
    "output_text": "[Find(LengthOf(Line(M,N)))] if [Isosceles(Triangle(J,M,N))] with [Equals(LengthOf(Line(J,M)),Line(M,N))].",
    "success": true
  },
  "1289": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1290": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(AreaOf(Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], [Find(AreaOf(Green(Shape($))))].",
    "success": true
  },
  "1291": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1292": {
    "text_logic_forms": [
      "Find(LengthOf(Line(W,Y)))"
    ],
    "output_text": "[Find(LengthOf(Line(W,Y)))].",
    "success": true
  },
  "1293": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "Equilateral(Triangle(D,C,E))",
      "Isosceles(Triangle(F,C,G))",
      "Equals(Angle(4),Angle(C))",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": ", [Isosceles(Triangle(A,B,C))], [Equilateral(Triangle(D,C,E))] and [Isosceles(Triangle(F,C,G))]. [Find(MeasureOf(Angle(4)))], [Equals(Angle(4),Angle(C))].",
    "success": true
  },
  "1294": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(G,H)),78)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Equals(MeasureOf(Arc(G,H)),78)] [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1295": {
    "text_logic_forms": [
      "IsPerpendicularBisectorOf(Line(W,P),Line($))",
      "Equals(MeasureOf(Angle(W,H,A)),8q+17)",
      "Equals(MeasureOf(Angle(H,W,P)),10+q)",
      "Equals(LengthOf(Line(A,P)),6r+4)",
      "Equals(LengthOf(Line(P,H)),22+3r)",
      "Find(r)"
    ],
    "output_text": "If [IsPerpendicularBisectorOf(Line(W,P),Line($))], [Equals(MeasureOf(Angle(W,H,A)),8q+17)] [Equals(MeasureOf(Angle(H,W,P)),10+q)] [Equals(LengthOf(Line(A,P)),6r+4)] and [Equals(LengthOf(Line(P,H)),22+3r)] [Find(r)].",
    "success": true
  },
  "1296": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1297": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1298": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(y)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(y)].",
    "success": true
  },
  "1299": {
    "text_logic_forms": [
      "IsCentroidOf(Point(P),Triangle(Q,U,S))",
      "Equals(LengthOf(Line(Q,P)),14)",
      "Find(LengthOf(Line(Q,T)))"
    ],
    "output_text": "[IsCentroidOf(Point(P),Triangle(Q,U,S))]. If [Equals(LengthOf(Line(Q,P)),14)] [Find(LengthOf(Line(Q,T)))]?",
    "success": true
  },
  "1300": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1301": {
    "text_logic_forms": [
      "Find(LengthOf(Line(W,Z)))"
    ],
    "output_text": "[Find(LengthOf(Line(W,Z)))].",
    "success": true
  },
  "1302": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "1303": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1304": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "1305": {
    "text_logic_forms": [
      "Equals(Line(M,S),AltitudeOf(Triangle(M,N,Q)))",
      "Equals(MeasureOf(Angle(1)),3x+11)",
      "Equals(MeasureOf(Angle(2)),7x+9)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [Equals(Line(M,S),AltitudeOf(Triangle(M,N,Q)))], [Equals(MeasureOf(Angle(1)),3x+11)] and [Equals(MeasureOf(Angle(2)),7x+9)].",
    "success": true
  },
  "1306": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1307": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "1308": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1309": {
    "text_logic_forms": [
      "Equals(Line(E,C),AltitudeOf(Triangle(A,E,D)))",
      "Equals(MeasureOf(Angle(1)),2x+7)",
      "Equals(MeasureOf(Angle(2)),3x+13)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "If [Equals(Line(E,C),AltitudeOf(Triangle(A,E,D)))], [Equals(MeasureOf(Angle(1)),2x+7)] and [Equals(MeasureOf(Angle(2)),3x+13)] [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1310": {
    "text_logic_forms": [
      "Find(RatioOf(CosOf(Angle(C))))"
    ],
    "output_text": "[Find(RatioOf(CosOf(Angle(C))))] to nearest hundredth.",
    "success": true
  },
  "1311": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "1312": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "1313": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),43)",
      "Find(MeasureOf(Angle(16)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),43)] [Find(MeasureOf(Angle(16)))].",
    "success": true
  },
  "1314": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1315": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1316": {
    "text_logic_forms": [
      "InscribedIn(Triangle(F,G,H),Circle(K))",
      "InscribedIn(Triangle(F,H,J),Circle(K))",
      "Congruent(Arc(F,G),Arc(F,I))",
      "Equals(MeasureOf(Angle(1)),6x-5)",
      "Equals(MeasureOf(Angle(2)),7x+4)",
      "Find(x)"
    ],
    "output_text": "[InscribedIn(Triangle(F,G,H),Circle(K))], [InscribedIn(Triangle(F,H,J),Circle(K))] with [Congruent(Arc(F,G),Arc(F,I))]. [Find(x)] if [Equals(MeasureOf(Angle(1)),6x-5)] and [Equals(MeasureOf(Angle(2)),7x+4)].",
    "success": true
  },
  "1317": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(B,E)),Line(E,D))",
      "Equals(MeasureOf(Arc(E,D)),120)",
      "Find(MeasureOf(Arc(B,E)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(B,E)),Line(E,D))] and [Equals(MeasureOf(Arc(E,D)),120)] [Find(MeasureOf(Arc(B,E)))].",
    "success": true
  },
  "1318": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1319": {
    "text_logic_forms": [
      "Tangent(Line(A,B),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line(A,B),Circle($))]. [Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1320": {
    "text_logic_forms": [
      "Parallel(Line(G,J),Line(F,K))",
      "Equals(LengthOf(Line(H,J)),x-5)",
      "Equals(LengthOf(Line(J,K)),15)",
      "Equals(LengthOf(Line(F,G)),18)",
      "Equals(LengthOf(Line(H,G)),x-4)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(G,J),Line(F,K))]. [Equals(LengthOf(Line(H,J)),x-5)] [Equals(LengthOf(Line(J,K)),15)] [Equals(LengthOf(Line(F,G)),18)] [Equals(LengthOf(Line(H,G)),x-4)].",
    "success": true
  },
  "1321": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1322": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1323": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1324": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle(J,K,M)))"
    ],
    "output_text": "[Find(AreaOf(Triangle(J,K,M)))].",
    "success": true
  },
  "1325": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "1326": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1327": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1328": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1329": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "1330": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "1331": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1332": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest hundredth.",
    "success": true
  },
  "1333": {
    "text_logic_forms": [
      "InscribedIn(Equilateral(Pentagon(P,Q,R,S,T)),Circle(U))",
      "Find(MeasureOf(Angle(P,Q,R)))"
    ],
    "output_text": "[InscribedIn(Equilateral(Pentagon(P,Q,R,S,T)),Circle(U))]. [Find(MeasureOf(Angle(P,Q,R)))].",
    "success": true
  },
  "1334": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "1335": {
    "text_logic_forms": [
      "Quadrilateral(A,B,C,D)",
      "Equals(Line(A,C),40)",
      "Equals(Line(B,D),Mul(Line(A,C),\\frac{3}{5}))",
      "BisectsAngle(Line(B,D),Line(A,C))",
      "Parallelogram(A,B,C,D)",
      "Find(x)"
    ],
    "output_text": "[Quadrilateral(A,B,C,D)] is. [Equals(Line(A,C),40)] and [Equals(Line(B,D),Mul(Line(A,C),\\frac{3}{5}))]. [BisectsAngle(Line(B,D),Line(A,C))]. [Parallelogram(A,B,C,D)], [Find(x)].",
    "success": true
  },
  "1336": {
    "text_logic_forms": [
      "Rhombus(X,Y,Z,W)",
      "Equals(MeasureOf(Angle(W,Y,Z)),53)",
      "Equals(LengthOf(Line(V,W)),3)",
      "Equals(LengthOf(Line(X,V)),2a-2)",
      "Equals(LengthOf(Line(Z,V)),\\frac{5a+1}{4})",
      "Find(LengthOf(Line(X,W)))"
    ],
    "output_text": "Use [Rhombus(X,Y,Z,W)] with [Equals(MeasureOf(Angle(W,Y,Z)),53)] [Equals(LengthOf(Line(V,W)),3)] [Equals(LengthOf(Line(X,V)),2a-2)] and [Equals(LengthOf(Line(Z,V)),\\frac{5a+1}{4})] [Find(LengthOf(Line(X,W)))].",
    "success": true
  },
  "1337": {
    "text_logic_forms": [
      "Circle(X)",
      "Equals(LengthOf(Line(A,B)),30)",
      "Equals(LengthOf(Line(C,D)),30)",
      "Equals(MeasureOf(Arc(C,Z)),40)",
      "Find(LengthOf(Line(M,B)))"
    ],
    "output_text": "In [Circle(X)], [Equals(LengthOf(Line(A,B)),30)] [Equals(LengthOf(Line(C,D)),30)] and [Equals(MeasureOf(Arc(C,Z)),40)] [Find(LengthOf(Line(M,B)))].",
    "success": true
  },
  "1338": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1339": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "1340": {
    "text_logic_forms": [
      "Similar(Triangle(S,R,Y),Triangle(W,X,Q))",
      "Equals(Line(R,T),AltitudeOf(Triangle(S,R,Y)))",
      "Equals(Line(X,V),AltitudeOf(Triangle(W,X,Q)))",
      "Equals(LengthOf(Line(R,T)),5)",
      "Equals(LengthOf(Line(R,Q)),4)",
      "Equals(LengthOf(Line(Q,Y)),6)",
      "Equals(LengthOf(Line(Y,X)),2)",
      "Find(LengthOf(Line(X,V)))"
    ],
    "output_text": "If [Similar(Triangle(S,R,Y),Triangle(W,X,Q))], [Equals(Line(R,T),AltitudeOf(Triangle(S,R,Y)))], [Equals(Line(X,V),AltitudeOf(Triangle(W,X,Q)))], [Equals(LengthOf(Line(R,T)),5)] [Equals(LengthOf(Line(R,Q)),4)] [Equals(LengthOf(Line(Q,Y)),6)] and [Equals(LengthOf(Line(Y,X)),2)] [Find(LengthOf(Line(X,V)))].",
    "success": true
  },
  "1341": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D)))].",
    "success": true
  },
  "1342": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(B,C,A)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(B,C,A)))].",
    "success": true
  },
  "1343": {
    "text_logic_forms": [
      "Equals(HeightOf(Triangle($)),Add(BaseOf(Polygon($)),5))",
      "Equals(AreaOf(Triangle($)),52)",
      "Find(HeightOf(Polygon($)))"
    ],
    "output_text": "[Equals(HeightOf(Triangle($)),Add(BaseOf(Polygon($)),5))]. [Equals(AreaOf(Triangle($)),52)] [Find(HeightOf(Polygon($)))].",
    "success": true
  },
  "1344": {
    "text_logic_forms": [
      "Find(w)"
    ],
    "output_text": "[Find(w)].",
    "success": true
  },
  "1345": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1346": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1347": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "1348": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1349": {
    "text_logic_forms": [
      "Circle(O)",
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Equals(Angle(B,O,D),Angle(D,O,E))",
      "Equals(Angle(D,O,E),Angle(E,O,F))",
      "Equals(Angle(E,O,F),Angle(F,O,A))",
      "Find(MeasureOf(Arc(C,B,F)))"
    ],
    "output_text": "[Circle(O)], [IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))] and [Equals(Angle(B,O,D),Angle(D,O,E))], [Equals(Angle(D,O,E),Angle(E,O,F))], [Equals(Angle(E,O,F),Angle(F,O,A))]. [Find(MeasureOf(Arc(C,B,F)))].",
    "success": true
  },
  "1350": {
    "text_logic_forms": [
      "Trapezoid(J,K,L,M)",
      "IsMidpointOf(Point(A),LegOf(Trapezoid(J,K,L,M)))",
      "IsMidpointOf(Point(B),LegOf(Trapezoid(J,K,L,M)))",
      "Equals(LengthOf(Line(A,B)),57)",
      "Equals(LengthOf(Line(K,L)),21)",
      "Find(LengthOf(Line(J,M)))"
    ],
    "output_text": "[Trapezoid(J,K,L,M)], [IsMidpointOf(Point(A),LegOf(Trapezoid(J,K,L,M)))], [IsMidpointOf(Point(B),LegOf(Trapezoid(J,K,L,M)))],. If [Equals(LengthOf(Line(A,B)),57)] and [Equals(LengthOf(Line(K,L)),21)] [Find(LengthOf(Line(J,M)))].",
    "success": true
  },
  "1351": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1352": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))] to nearest tenth.",
    "success": true
  },
  "1353": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))].",
    "success": true
  },
  "1354": {
    "text_logic_forms": [
      "Quadrilateral(A,B,C,D)",
      "Square(E,F,G,H)",
      "Quadrilateral(E,F,G,H)"
    ],
    "output_text": ", vertices of [Quadrilateral(A,B,C,D)] intersect [Square(E,F,G,H)] and divide sides into segments with measure have a ratio of 1:2. Find ratio between areas of [Quadrilateral(A,B,C,D)] and [Quadrilateral(E,F,G,H)].",
    "success": false
  },
  "1355": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "1356": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D)))].",
    "success": true
  },
  "1357": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(X,Y),Triangle(R,S,T))",
      "IsMidsegmentOf(Line(X,Z),Triangle(R,S,T))",
      "Find(MeasureOf(Angle(R,Y,X)))"
    ],
    "output_text": "[IsMidsegmentOf(Line(X,Y),Triangle(R,S,T))], [IsMidsegmentOf(Line(X,Z),Triangle(R,S,T))]. [Find(MeasureOf(Angle(R,Y,X)))].",
    "success": true
  },
  "1358": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),62)",
      "Equals(MeasureOf(Angle(14)),38)",
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(11)),62)] and [Equals(MeasureOf(Angle(14)),38)] [Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "1359": {
    "text_logic_forms": [
      "Parallelogram(P,Q,R,S)",
      "Find(LengthOf(Line(Q,R)))"
    ],
    "output_text": "Use [Parallelogram(P,Q,R,S)] to [Find(LengthOf(Line(Q,R)))].",
    "success": true
  },
  "1360": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1361": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(DiameterOf(Circle(P)),9)",
      "Find(LengthOf(Arc(Q,T)))"
    ],
    "output_text": " [Circle(P)], [Equals(DiameterOf(Circle(P)),9)] [Find(LengthOf(Arc(Q,T)))]. Round to nearest hundredth.",
    "success": true
  },
  "1362": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1363": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1364": {
    "text_logic_forms": [
      "Find(LengthOf(Line(Q,R)))"
    ],
    "output_text": "[Find(LengthOf(Line(Q,R)))].",
    "success": true
  },
  "1365": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(B,C,D)),64)",
      "Find(MeasureOf(Angle(B,A,C)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(MeasureOf(Angle(B,C,D)),64)] [Find(MeasureOf(Angle(B,A,C)))].",
    "success": true
  },
  "1366": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(K)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(K)))].",
    "success": true
  },
  "1367": {
    "text_logic_forms": [
      "Rhombus(M,N,O,P)",
      "Equals(MeasureOf(Angle(P,O,N)),124)",
      "Find(MeasureOf(Angle(P,O,M)))"
    ],
    "output_text": " [Rhombus(M,N,O,P)]. If [Equals(MeasureOf(Angle(P,O,N)),124)] [Find(MeasureOf(Angle(P,O,M)))].",
    "success": true
  },
  "1368": {
    "text_logic_forms": [
      "IsMidpointOf(Point(S),Line(D,E))",
      "IsMidpointOf(Point(T),Line(E,F))",
      "IsMidpointOf(Point(U),Line(D,F))",
      "Find(y)"
    ],
    "output_text": "[IsMidpointOf(Point(S),Line(D,E))], [IsMidpointOf(Point(T),Line(E,F))], [IsMidpointOf(Point(U),Line(D,F))],,. [Find(y)].",
    "success": true
  },
  "1369": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1370": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(x)].",
    "success": true
  },
  "1371": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1372": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1373": {
    "text_logic_forms": [
      "Circle(X)",
      "Equals(LengthOf(Line(A,B)),30)",
      "Equals(LengthOf(Line(C,D)),30)",
      "Equals(MeasureOf(Arc(C,Z)),40)",
      "Find(LengthOf(Line(A,M)))"
    ],
    "output_text": "In [Circle(X)], [Equals(LengthOf(Line(A,B)),30)] [Equals(LengthOf(Line(C,D)),30)] and [Equals(MeasureOf(Arc(C,Z)),40)] [Find(LengthOf(Line(A,M)))].",
    "success": true
  },
  "1374": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "1375": {
    "text_logic_forms": [
      "Similar(Triangle(A,B,C),Triangle(D,E,F))",
      "Find(ScaleFactorOf(Shape($1),Shape($2)))"
    ],
    "output_text": "[Similar(Triangle(A,B,C),Triangle(D,E,F))]. [Find(ScaleFactorOf(Shape($1),Shape($2)))].",
    "success": true
  },
  "1376": {
    "text_logic_forms": [
      "Circle(B)",
      "Equals(DiameterOf(Circle(B)),20)",
      "Equals(MeasureOf(Angle(A,C,E)),45)",
      "Find(x)"
    ],
    "output_text": " [Circle(B)], [Equals(DiameterOf(Circle(B)),20)] and [Equals(MeasureOf(Angle(A,C,E)),45)] [Find(x)].",
    "success": true
  },
  "1377": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1378": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(G,H)),78)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Equals(MeasureOf(Arc(G,H)),78)] [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1379": {
    "text_logic_forms": [
      "Parallelogram(K,L,M,N)"
    ],
    "output_text": "If [Parallelogram(K,L,M,N)], fnd x.",
    "success": false
  },
  "1380": {
    "text_logic_forms": [
      "Rectangle(D,E,F,G)",
      "Equals(LengthOf(Line(D,F)),2(x+5)-7)",
      "Equals(LengthOf(Line(E,G)),3(x-2))",
      "Find(LengthOf(Line(E,G)))"
    ],
    "output_text": " [Rectangle(D,E,F,G)]. If [Equals(LengthOf(Line(D,F)),2(x+5)-7)] and [Equals(LengthOf(Line(E,G)),3(x-2))] [Find(LengthOf(Line(E,G)))].",
    "success": true
  },
  "1381": {
    "text_logic_forms": [
      "Triangle($)",
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "In [Triangle($)], [Find(MeasureOf(Angle(Z)))]?",
    "success": true
  },
  "1382": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(s)"
    ],
    "output_text": "[Find(s)] in [Parallelogram($)].",
    "success": true
  },
  "1383": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1384": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1385": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))",
      "Equals(MeasureOf(Angle(A,G,F)),108)",
      "Equals(LengthOf(Line(G,F)),14)",
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(D,G)),4.5)",
      "Equals(LengthOf(Line(E,F)),8)",
      "Equals(LengthOf(Line(A,B)),26)",
      "Find(PerimeterOf(Trapezoid(A,B,C,D)))"
    ],
    "output_text": "[Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))], [Equals(MeasureOf(Angle(A,G,F)),108)] [Equals(LengthOf(Line(G,F)),14)] [Equals(LengthOf(Line(A,D)),12)] [Equals(LengthOf(Line(D,G)),4.5)] [Equals(LengthOf(Line(E,F)),8)] and [Equals(LengthOf(Line(A,B)),26)] [Find(PerimeterOf(Trapezoid(A,B,C,D)))].",
    "success": true
  },
  "1386": {
    "text_logic_forms": [
      "Congruent(Quadrilateral(B,C,D,E),Quadrilateral(R,S,T,U))",
      "Find(y)"
    ],
    "output_text": "[Congruent(Quadrilateral(B,C,D,E),Quadrilateral(R,S,T,U))]. [Find(y)].",
    "success": true
  },
  "1387": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1388": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1389": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1390": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(12)),64)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(12)),64)] [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1391": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(d)"
    ],
    "output_text": "[Find(d)] in [Parallelogram($)].",
    "success": true
  },
  "1392": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1393": {
    "text_logic_forms": [
      "Trapezoid(C,D,F,G)",
      "IsMedianOf(Line(H,E),Trapezoid(C,D,F,G))",
      "Find(LengthOf(Line(G,F)))"
    ],
    "output_text": "[Trapezoid(C,D,F,G)], [IsMedianOf(Line(H,E),Trapezoid(C,D,F,G))]. [Find(LengthOf(Line(G,F)))].",
    "success": true
  },
  "1394": {
    "text_logic_forms": [
      "Find(LengthOf(Line(E,G)))"
    ],
    "output_text": "[Find(LengthOf(Line(E,G)))].",
    "success": true
  },
  "1395": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(M)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(M)))].",
    "success": true
  },
  "1396": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(E,N)),13)",
      "Find(DiameterOf(Circle($)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(E,N)),13)] [Find(DiameterOf(Circle($)))]?",
    "success": true
  },
  "1397": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C,G,D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C,G,D)))].",
    "success": true
  },
  "1398": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1399": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest degree.",
    "success": true
  },
  "1400": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "1401": {
    "text_logic_forms": [
      "Find(LengthOf(Line(G,H)))"
    ],
    "output_text": "[Find(LengthOf(Line(G,H)))].",
    "success": true
  },
  "1402": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(AreaOf(Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], [Find(AreaOf(Green(Shape($))))].",
    "success": true
  },
  "1403": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),43)",
      "Find(MeasureOf(Angle(13)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),43)] [Find(MeasureOf(Angle(13)))].",
    "success": true
  },
  "1404": {
    "text_logic_forms": [
      "InscribedIn(Quadrilateral(A,B,C,D),Circle(Z))",
      "Equals(MeasureOf(Angle(B,Z,A)),104)",
      "Equals(MeasureOf(Arc(C,B)),94)",
      "Parallel(Line(A,B),Line(D,C))",
      "Find(MeasureOf(Angle(B,D,A)))"
    ],
    "output_text": "[InscribedIn(Quadrilateral(A,B,C,D),Circle(Z))] [Equals(MeasureOf(Angle(B,Z,A)),104)] [Equals(MeasureOf(Arc(C,B)),94)] and [Parallel(Line(A,B),Line(D,C))]. [Find(MeasureOf(Angle(B,D,A)))].",
    "success": true
  },
  "1405": {
    "text_logic_forms": [
      "Parallel(Line(a),Line(b))"
    ],
    "output_text": "If [Parallel(Line(a),Line(b))], which of following may not be true?",
    "success": false
  },
  "1406": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(M)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(M)))].",
    "success": true
  },
  "1407": {
    "text_logic_forms": [
      "IsIncenterOf(Point(Q),Triangle(J,K,L))",
      "Find(MeasureOf(Angle(Q,J,K)))"
    ],
    "output_text": "[IsIncenterOf(Point(Q),Triangle(J,K,L))]. [Find(MeasureOf(Angle(Q,J,K)))].",
    "success": true
  },
  "1408": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1409": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1410": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Equals(LengthOf(Line(J,K)),2b+3)",
      "Equals(LengthOf(Line(J,M)),3a)",
      "Find(b)"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(b)] if [Equals(LengthOf(Line(J,K)),2b+3)] and [Equals(LengthOf(Line(J,M)),3a)].",
    "success": true
  },
  "1411": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1412": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(B,A,D)),38)",
      "Equals(MeasureOf(Angle(B,C,D)),50)",
      "Find(MeasureOf(Angle(A,D,C)))"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(B,A,D)),38)] and [Equals(MeasureOf(Angle(B,C,D)),50)] [Find(MeasureOf(Angle(A,D,C)))].",
    "success": true
  },
  "1413": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(A,B,C)),2x-7)",
      "Equals(MeasureOf(Angle(B,C,D)),2x+3)",
      "Find(MeasureOf(Angle(D,A,B)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(MeasureOf(Angle(A,B,C)),2x-7)] and [Equals(MeasureOf(Angle(B,C,D)),2x+3)] [Find(MeasureOf(Angle(D,A,B)))].",
    "success": true
  },
  "1414": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,T)))].",
    "success": true
  },
  "1415": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))].",
    "success": true
  },
  "1416": {
    "text_logic_forms": [
      "Circle(Z)",
      "Equals(Angle(W,Z,X),Angle(X,Z,Y))",
      "Equals(MeasureOf(Angle(V,Z,U)),4x)",
      "Equals(MeasureOf(Angle(U,Z,Y)),2x+24)",
      "IsDiameterOf(Line(V,Y),Circle($))",
      "IsDiameterOf(Line(W,U),Circle($))",
      "Find(MeasureOf(Arc(W,X)))"
    ],
    "output_text": "In [Circle(Z)], [Equals(Angle(W,Z,X),Angle(X,Z,Y))], [Equals(MeasureOf(Angle(V,Z,U)),4x)] [Equals(MeasureOf(Angle(U,Z,Y)),2x+24)] and [IsDiameterOf(Line(V,Y),Circle($))], [IsDiameterOf(Line(W,U),Circle($))]. [Find(MeasureOf(Arc(W,X)))].",
    "success": true
  },
  "1417": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1418": {
    "text_logic_forms": [
      "Find(AreaOf(Quadrilateral($)))"
    ],
    "output_text": "[Find(AreaOf(Quadrilateral($)))].",
    "success": true
  },
  "1419": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(9)),75)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(9)),75)] [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1420": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "1421": {
    "text_logic_forms": [
      "IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))",
      "Equals(LengthOf(Line(G,H)),10)",
      "Find(LengthOf(Line(G,J)))"
    ],
    "output_text": "[IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))]. If [Equals(LengthOf(Line(G,H)),10)] [Find(LengthOf(Line(G,J)))].",
    "success": true
  },
  "1422": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),128)",
      "Find(x)"
    ],
    "output_text": ". [Find(x)]. [Equals(AreaOf(Shape(A)),128)].",
    "success": true
  },
  "1423": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(V)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(V)))].",
    "success": true
  },
  "1424": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),123)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),123)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "1425": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1426": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(A,E,D)),95)",
      "Equals(MeasureOf(Arc(A,D)),120)",
      "Find(MeasureOf(Angle(B,A,C)))"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(A,E,D)),95)] and [Equals(MeasureOf(Arc(A,D)),120)] [Find(MeasureOf(Angle(B,A,C)))]?",
    "success": true
  },
  "1427": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1428": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(K,L))",
      "Equals(LengthOf(Line(K,N)),9)",
      "Equals(LengthOf(Line(L,N)),16)",
      "Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))",
      "Find(LengthOf(Line(M,N)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(K,L))], [Equals(LengthOf(Line(K,N)),9)] [Equals(LengthOf(Line(L,N)),16)] and [Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))], [Find(LengthOf(Line(M,N)))].",
    "success": true
  },
  "1429": {
    "text_logic_forms": [
      "Find(LengthOf(Line(Y,Z)))"
    ],
    "output_text": "[Find(LengthOf(Line(Y,Z)))].",
    "success": true
  },
  "1430": {
    "text_logic_forms": [
      "Congruent(Triangle(L,M,N),Triangle(Q,R,S))",
      "Find(y)"
    ],
    "output_text": "[Congruent(Triangle(L,M,N),Triangle(Q,R,S))]. [Find(y)].",
    "success": true
  },
  "1431": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1432": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(E,D)))"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(E,D)))].",
    "success": true
  },
  "1433": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1434": {
    "text_logic_forms": [
      "Circle(G)",
      "Equals(MeasureOf(Angle(A,G,B)),30)",
      "Perpendicular(Line(C,G),Line(G,D))",
      "Find(MeasureOf(Arc(B,C)))"
    ],
    "output_text": "In [Circle(G)], [Equals(MeasureOf(Angle(A,G,B)),30)] and [Perpendicular(Line(C,G),Line(G,D))]. [Find(MeasureOf(Arc(B,C)))].",
    "success": true
  },
  "1435": {
    "text_logic_forms": [
      "Find(LengthOf(Line(S,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(S,T)))].",
    "success": true
  },
  "1436": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "1437": {
    "text_logic_forms": [
      "Equals(PerimeterOf(Regular(Pentagon($))),40)",
      "Find(AreaOf(Regular(Pentagon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Pentagon($))))], [Equals(PerimeterOf(Regular(Pentagon($))),40)].",
    "success": true
  },
  "1438": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1439": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1440": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1441": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1442": {
    "text_logic_forms": [
      "Congruent(Triangle(R,S,T),Triangle(A,B,C))",
      "Find(y)"
    ],
    "output_text": "[Congruent(Triangle(R,S,T),Triangle(A,B,C))]. [Find(y)].",
    "success": true
  },
  "1443": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))], [Find(x)].",
    "success": true
  },
  "1444": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(E,B)),9)",
      "Equals(LengthOf(Line(A,B)),12)",
      "Equals(MeasureOf(Angle(A,B,D)),55)",
      "Find(LengthOf(Line(C,E)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(E,B)),9)] [Equals(LengthOf(Line(A,B)),12)] and [Equals(MeasureOf(Angle(A,B,D)),55)] [Find(LengthOf(Line(C,E)))].",
    "success": true
  },
  "1445": {
    "text_logic_forms": [
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,Y)))].",
    "success": true
  },
  "1446": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1447": {
    "text_logic_forms": [
      "Isosceles(Triangle(K,L,N))",
      "Isosceles(Triangle(L,M,N))",
      "Equals(MeasureOf(Angle(J,K,N)),130)",
      "Find(MeasureOf(Angle(L,N,M)))"
    ],
    "output_text": "[Isosceles(Triangle(K,L,N))], [Isosceles(Triangle(L,M,N))] and [Equals(MeasureOf(Angle(J,K,N)),130)] [Find(MeasureOf(Angle(L,N,M)))].",
    "success": true
  },
  "1448": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,S)))].",
    "success": true
  },
  "1449": {
    "text_logic_forms": [
      "Rectangle(W,X,Y,Z)",
      "Equals(MeasureOf(Angle(1)),30)",
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": " [Rectangle(W,X,Y,Z)]. [Find(MeasureOf(Angle(8)))] if [Equals(MeasureOf(Angle(1)),30)].",
    "success": true
  },
  "1450": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))] to nearest tenth.",
    "success": true
  },
  "1451": {
    "text_logic_forms": [
      "Right(Triangle(X,Y,Z))",
      "IsHypotenuseOf(Line(X,Y),Right(Triangle(X,Y,Z)))",
      "Equals(LengthOf(Line(Y,P)),Line(Y,Z))",
      "Equals(MeasureOf(Angle(P,Y,Z)),26)",
      "Find(MeasureOf(Angle(X,Z,P)))"
    ],
    "output_text": "[Right(Triangle(X,Y,Z))], [IsHypotenuseOf(Line(X,Y),Right(Triangle(X,Y,Z)))], [Equals(LengthOf(Line(Y,P)),Line(Y,Z))]. If [Equals(MeasureOf(Angle(P,Y,Z)),26)] [Find(MeasureOf(Angle(X,Z,P)))].",
    "success": true
  },
  "1452": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "1453": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(X)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(X)))].",
    "success": true
  },
  "1454": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth.",
    "success": true
  },
  "1455": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(E,B)),9)",
      "Equals(LengthOf(Line(A,B)),12)",
      "Equals(MeasureOf(Angle(A,B,D)),55)",
      "Find(MeasureOf(Angle(B,D,A)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(E,B)),9)] [Equals(LengthOf(Line(A,B)),12)] and [Equals(MeasureOf(Angle(A,B,D)),55)] [Find(MeasureOf(Angle(B,D,A)))].",
    "success": true
  },
  "1456": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1457": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1458": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1459": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round angle measure to nearest degree.",
    "success": true
  },
  "1460": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1461": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1462": {
    "text_logic_forms": [
      "Find(SinOf(Angle(A)))"
    ],
    "output_text": "[Find(SinOf(Angle(A)))].",
    "success": true
  },
  "1463": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))] in. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1464": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1465": {
    "text_logic_forms": [
      "InscribedIn(Circle(P),Equilateral(Triangle(L,M,N)))",
      "Find(CircumferenceOf(Circle(P)))"
    ],
    "output_text": "[InscribedIn(Circle(P),Equilateral(Triangle(L,M,N)))]. [Find(CircumferenceOf(Circle(P)))]?",
    "success": true
  },
  "1466": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),60)",
      "Equals(LengthOf(Line(D,E)),48)",
      "Find(LengthOf(Line(C,F)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,B)),60)] and [Equals(LengthOf(Line(D,E)),48)] [Find(LengthOf(Line(C,F)))].",
    "success": true
  },
  "1467": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(A,B)),102)",
      "Find(MeasureOf(Angle(A,B,C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,B,C)))] if [Equals(MeasureOf(Arc(A,B)),102)].",
    "success": true
  },
  "1468": {
    "text_logic_forms": [
      "Parallel(Line(p),Line(q))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(p),Line(q))].",
    "success": true
  },
  "1469": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1470": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(A,P)),3x-1)",
      "Equals(LengthOf(Line(P,C)),x+9)",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(A,P)),3x-1)] and [Equals(LengthOf(Line(P,C)),x+9)] [Find(LengthOf(Line(A,C)))].",
    "success": true
  },
  "1471": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(B,C,D)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(B,C,D)))].",
    "success": true
  },
  "1472": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1473": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(A,F,B)),8x-6)",
      "Equals(MeasureOf(Angle(B,F,C)),14x+8)",
      "RightAngle(Angle(A,F,C))",
      "Find(x)"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(A,F,B)),8x-6)] and [Equals(MeasureOf(Angle(B,F,C)),14x+8)] [Find(x)] so [RightAngle(Angle(A,F,C))].",
    "success": true
  },
  "1474": {
    "text_logic_forms": [
      "Find(LengthOf(Line(F,H)))"
    ],
    "output_text": "[Find(LengthOf(Line(F,H)))].",
    "success": true
  },
  "1475": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),110)",
      "Equals(MeasureOf(Angle(12)),55)",
      "Find(MeasureOf(Angle(15)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),110)] and [Equals(MeasureOf(Angle(12)),55)] [Find(MeasureOf(Angle(15)))].",
    "success": true
  },
  "1476": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(F)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(F)))].",
    "success": true
  },
  "1477": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1478": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1479": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1480": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,R)",
      "Find(z)"
    ],
    "output_text": "Use [Parallelogram(M,N,P,R)] to [Find(z)].",
    "success": true
  },
  "1481": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))] in. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1482": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1483": {
    "text_logic_forms": [
      "Equals(AreaOf(Rhombus(R,S,T,U)),675)",
      "Find(LengthOf(Line(S,U)))"
    ],
    "output_text": "[Equals(AreaOf(Rhombus(R,S,T,U)),675)] [Find(LengthOf(Line(S,U)))].",
    "success": true
  },
  "1484": {
    "text_logic_forms": [
      "InscribedIn(Triangle($),Circle($))",
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[InscribedIn(Triangle($),Circle($))]. [Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "1485": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1486": {
    "text_logic_forms": [
      "Circle(R)",
      "Equals(LengthOf(Line(S,U)),20)",
      "Equals(LengthOf(Line(Y,W)),20)",
      "Equals(MeasureOf(Arc(Y,X)),45)",
      "Find(LengthOf(Line(S,V)))"
    ],
    "output_text": "In [Circle(R)], [Equals(LengthOf(Line(S,U)),20)] [Equals(LengthOf(Line(Y,W)),20)] and [Equals(MeasureOf(Arc(Y,X)),45)] [Find(LengthOf(Line(S,V)))].",
    "success": true
  },
  "1487": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,C)))].",
    "success": true
  },
  "1488": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1489": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(E,B)),9)",
      "Equals(LengthOf(Line(A,B)),12)",
      "Equals(MeasureOf(Angle(A,B,D)),55)",
      "Find(LengthOf(Line(A,E)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(E,B)),9)] [Equals(LengthOf(Line(A,B)),12)] and [Equals(MeasureOf(Angle(A,B,D)),55)] [Find(LengthOf(Line(A,E)))].",
    "success": true
  },
  "1490": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1491": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1492": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1493": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1494": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1495": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1496": {
    "text_logic_forms": [
      "Rectangle(A,B,D,C)",
      "Equals(MeasureOf(Angle(1)),38)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": " [Rectangle(A,B,D,C)]. [Find(MeasureOf(Angle(6)))] if [Equals(MeasureOf(Angle(1)),38)].",
    "success": true
  },
  "1497": {
    "text_logic_forms": [
      "Triangle(C,D,F)",
      "IsCentroidOf(Point(K),Triangle(C,D,F))",
      "Equals(LengthOf(Line(D,K)),16)",
      "Find(LengthOf(Line(F,G)))"
    ],
    "output_text": " [Triangle(C,D,F)], [IsCentroidOf(Point(K),Triangle(C,D,F))] and [Equals(LengthOf(Line(D,K)),16)] [Find(LengthOf(Line(F,G)))].",
    "success": true
  },
  "1498": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1499": {
    "text_logic_forms": [
      "Parallel(Line(E,B),Line(D,C))",
      "Find(x)"
    ],
    "output_text": "If [Parallel(Line(E,B),Line(D,C))], [Find(x)].",
    "success": true
  },
  "1500": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(O)),10)",
      "Equals(LengthOf(Line(A,B)),10)",
      "Equals(LengthOf(Line(A,B)),60)",
      "Find(MeasureOf(Arc(A,Y)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(O)),10)] [Equals(LengthOf(Line(A,B)),10)] and [Equals(LengthOf(Line(A,B)),60)] [Find(MeasureOf(Arc(A,Y)))].",
    "success": true
  },
  "1501": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Z,X,V)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Z,X,V)))].",
    "success": true
  },
  "1502": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1503": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1504": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1505": {
    "text_logic_forms": [
      "Isosceles(Triangle(J,M,N))",
      "Equals(LengthOf(Line(J,M)),Line(M,N))",
      "Find(LengthOf(Line(J,M)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,M)))] if [Isosceles(Triangle(J,M,N))] with [Equals(LengthOf(Line(J,M)),Line(M,N))].",
    "success": true
  },
  "1506": {
    "text_logic_forms": [
      "Tangent(Line(E,D),Circle(F))",
      "Point(E)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line(E,D),Circle(F))] at [Point(E)]. [Find(x)].",
    "success": true
  },
  "1507": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest hundredth.",
    "success": true
  },
  "1508": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))] in. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1509": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(F,J)),Line(F,H))",
      "Equals(LengthOf(Line(G,F)),Line(G,H))",
      "Equals(MeasureOf(Angle(G,H,J)),152)",
      "Equals(MeasureOf(Angle(G)),32)",
      "Find(MeasureOf(Angle(J,F,H)))"
    ],
    "output_text": ", [Equals(LengthOf(Line(F,J)),Line(F,H))] and [Equals(LengthOf(Line(G,F)),Line(G,H))]. If [Equals(MeasureOf(Angle(G,H,J)),152)] and [Equals(MeasureOf(Angle(G)),32)] [Find(MeasureOf(Angle(J,F,H)))].",
    "success": true
  },
  "1510": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A,B,D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,B,D)))].",
    "success": true
  },
  "1511": {
    "text_logic_forms": [
      "Equals(a,14)",
      "Equals(b,48)",
      "Equals(c,50)",
      "Find(SinOf(Angle(B)))"
    ],
    "output_text": "[Equals(a,14)] [Equals(b,48)] and [Equals(c,50)] [Find(SinOf(Angle(B)))].",
    "success": true
  },
  "1512": {
    "text_logic_forms": [
      "Similar(Triangle(D,E,F),Triangle(C,B,F))",
      "Equals(PerimeterOf(Triangle(C,B,F)),27)",
      "Equals(LengthOf(Line(D,F)),6)",
      "Equals(LengthOf(Line(F,C)),8)",
      "Find(PerimeterOf(Triangle(D,E,F)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(D,E,F)))], if [Similar(Triangle(D,E,F),Triangle(C,B,F))], [Equals(PerimeterOf(Triangle(C,B,F)),27)] [Equals(LengthOf(Line(D,F)),6)] [Equals(LengthOf(Line(F,C)),8)].",
    "success": true
  },
  "1513": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1514": {
    "text_logic_forms": [
      "Triangle(G,H,J)",
      "Equals(LengthOf(Line(H,P)),5x-16)",
      "Equals(LengthOf(Line(P,J)),3x+8)",
      "Equals(MeasureOf(Angle(G,J,N)),6y-3)",
      "Equals(MeasureOf(Angle(N,J,H)),4y+23)",
      "Equals(MeasureOf(Angle(H,M,G)),4z+14)",
      "Equals(Line(H,M),AltitudeOf(Angle(G,H,J)))",
      "Find(z)"
    ],
    "output_text": "In [Triangle(G,H,J)], [Equals(LengthOf(Line(H,P)),5x-16)] [Equals(LengthOf(Line(P,J)),3x+8)] [Equals(MeasureOf(Angle(G,J,N)),6y-3)] [Equals(MeasureOf(Angle(N,J,H)),4y+23)] and [Equals(MeasureOf(Angle(H,M,G)),4z+14)] If [Equals(Line(H,M),AltitudeOf(Angle(G,H,J)))], [Find(z)].",
    "success": true
  },
  "1515": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1516": {
    "text_logic_forms": [
      "Circle(D)",
      "Equals(LengthOf(Line(D,E)),Line(E,C))",
      "Equals(MeasureOf(Arc(C,F)),60)",
      "Perpendicular(Line(D,E),Line(E,C))",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "In [Circle(D)], [Equals(LengthOf(Line(D,E)),Line(E,C))], [Equals(MeasureOf(Arc(C,F)),60)] and [Perpendicular(Line(D,E),Line(E,C))]. [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "1517": {
    "text_logic_forms": [
      "Find(AreaOf(Circle($)))"
    ],
    "output_text": "[Find(AreaOf(Circle($)))]. Round to nearest tenth.",
    "success": true
  },
  "1518": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Find(MeasureOf(Angle(J,M,L)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(MeasureOf(Angle(J,M,L)))].",
    "success": true
  },
  "1519": {
    "text_logic_forms": [
      "Rectangle(W,X,Y,Z)",
      "Equals(LengthOf(Line(X,Z)),2c)",
      "Equals(LengthOf(Line(Z,Y)),6)",
      "Equals(LengthOf(Line(X,Y)),8)",
      "Find(LengthOf(Line(W,Y)))"
    ],
    "output_text": " [Rectangle(W,X,Y,Z)]. If [Equals(LengthOf(Line(X,Z)),2c)] and [Equals(LengthOf(Line(Z,Y)),6)] and [Equals(LengthOf(Line(X,Y)),8)] [Find(LengthOf(Line(W,Y)))].",
    "success": true
  },
  "1520": {
    "text_logic_forms": [
      "Circle(O)",
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Equals(Angle(B,O,D),Angle(D,O,E))",
      "Equals(Angle(D,O,E),Angle(E,O,F))",
      "Equals(Angle(E,O,F),Angle(F,O,A))",
      "Find(MeasureOf(Arc(A,C,B)))"
    ],
    "output_text": "[Circle(O)], [IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))] and [Equals(Angle(B,O,D),Angle(D,O,E))], [Equals(Angle(D,O,E),Angle(E,O,F))], [Equals(Angle(E,O,F),Angle(F,O,A))]. [Find(MeasureOf(Arc(A,C,B)))].",
    "success": true
  },
  "1521": {
    "text_logic_forms": [
      "IsDiameterOf(Line(D,F),Circle(A))",
      "IsDiameterOf(Line(P,G),Circle(A))",
      "Equals(LengthOf(Line(P,A)),7)",
      "Find(LengthOf(Line(P,G)))"
    ],
    "output_text": "[IsDiameterOf(Line(D,F),Circle(A))], [IsDiameterOf(Line(P,G),Circle(A))]. If [Equals(LengthOf(Line(P,A)),7)] [Find(LengthOf(Line(P,G)))].",
    "success": true
  },
  "1522": {
    "text_logic_forms": [
      "Find(AreaOf(Circle($)))"
    ],
    "output_text": "[Find(AreaOf(Circle($)))]. Round to nearest tenth.",
    "success": true
  },
  "1523": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(z)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(z)].",
    "success": true
  },
  "1524": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1525": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(AreaOf(Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], [Find(AreaOf(Green(Shape($))))].",
    "success": true
  },
  "1526": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(Q,R)),2)",
      "Equals(LengthOf(Line(X,W)),12)",
      "Equals(LengthOf(Line(Q,W)),15)",
      "Equals(LengthOf(Line(S,T)),5)",
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(Q,R)),2)] [Equals(LengthOf(Line(X,W)),12)] [Equals(LengthOf(Line(Q,W)),15)] and [Equals(LengthOf(Line(S,T)),5)] [Find(LengthOf(Line(R,S)))].",
    "success": true
  },
  "1527": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1528": {
    "text_logic_forms": [
      "Circle($)",
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))] formed by [Circle($)] and [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "1529": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1530": {
    "text_logic_forms": [
      "InscribedIn(Rhombus(P,Q,R,S),Circle($))",
      "Find(MeasureOf(Angle(Q,R,P)))"
    ],
    "output_text": " [InscribedIn(Rhombus(P,Q,R,S),Circle($))]. [Find(MeasureOf(Angle(Q,R,P)))].",
    "success": true
  },
  "1531": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1532": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "1533": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1534": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),50)",
      "Equals(MeasureOf(Angle(3)),60)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),50)] and [Equals(MeasureOf(Angle(3)),60)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "1535": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))].",
    "success": true
  },
  "1536": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "1537": {
    "text_logic_forms": [
      "Find(LengthOf(Line(E,F)))"
    ],
    "output_text": "[Find(LengthOf(Line(E,F)))]?",
    "success": true
  },
  "1538": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(K,P)),4)",
      "Equals(LengthOf(Line(P,M)),7)",
      "Find(LengthOf(Line(J,L)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,L)))], if [Equals(LengthOf(Line(K,P)),4)] and [Equals(LengthOf(Line(P,M)),7)].",
    "success": true
  },
  "1539": {
    "text_logic_forms": [
      "Triangle(R,S,T)",
      "IsCentroidOf(Point(Z),Triangle(R,S,T))",
      "Equals(LengthOf(Line(R,Z)),18)",
      "Find(LengthOf(Line(Z,V)))"
    ],
    "output_text": " [Triangle(R,S,T)], [IsCentroidOf(Point(Z),Triangle(R,S,T))] and [Equals(LengthOf(Line(R,Z)),18)] [Find(LengthOf(Line(Z,V)))].",
    "success": true
  },
  "1540": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "1541": {
    "text_logic_forms": [
      "Square(A)",
      "Square(B)",
      "Square(C)",
      "Equals(LengthOf(Line(J,K)),Mul(Line(K,L),2))",
      "Equals(LengthOf(Line(K,L)),Mul(Line(L,M),2))",
      "Equals(PerimeterOf(Shape($)),66)",
      "Find(AreaOf(Polygon($)))"
    ],
    "output_text": "consisting of [Square(A)], [Square(B)] and [Square(C)], [Equals(LengthOf(Line(J,K)),Mul(Line(K,L),2))] and [Equals(LengthOf(Line(K,L)),Mul(Line(L,M),2))]. If [Equals(PerimeterOf(Shape($)),66)] [Find(AreaOf(Polygon($)))]?",
    "success": true
  },
  "1542": {
    "text_logic_forms": [
      "Shape($)",
      "Parallel(Line(p),Line(q))",
      "Find(y)"
    ],
    "output_text": "[Shape($)]. [Find(y)] if [Parallel(Line(p),Line(q))].",
    "success": true
  },
  "1543": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest hundredth.",
    "success": true
  },
  "1544": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1545": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(A,F,B)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(A,F,B)))].",
    "success": true
  },
  "1546": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(2)),70-4x)",
      "Equals(MeasureOf(Angle(5)),18x-8)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(2)),70-4x)] and [Equals(MeasureOf(Angle(5)),18x-8)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "1547": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(MeasureOf(Angle(A,B,C)))"
    ],
    "output_text": "If [Regular(Polygon($))], [Find(MeasureOf(Angle(A,B,C)))].",
    "success": true
  },
  "1548": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1549": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),50)",
      "Equals(MeasureOf(Angle(3)),60)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),50)] and [Equals(MeasureOf(Angle(3)),60)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "1550": {
    "text_logic_forms": [
      "Parallel(Line(p),Line(q))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(p),Line(q))].",
    "success": true
  },
  "1551": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "1552": {
    "text_logic_forms": [
      "Parallelogram(Q,R,S,T)",
      "Find(x)"
    ],
    "output_text": "If [Parallelogram(Q,R,S,T)], [Find(x)]?",
    "success": true
  },
  "1553": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1554": {
    "text_logic_forms": [
      "Circle(O)",
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Equals(Angle(B,O,D),Angle(D,O,E))",
      "Equals(Angle(D,O,E),Angle(E,O,F))",
      "Equals(Angle(E,O,F),Angle(F,O,A))",
      "Find(MeasureOf(Arc(E,B)))"
    ],
    "output_text": "[Circle(O)], [IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))] and [Equals(Angle(B,O,D),Angle(D,O,E))], [Equals(Angle(D,O,E),Angle(E,O,F))], [Equals(Angle(E,O,F),Angle(F,O,A))]. [Find(MeasureOf(Arc(E,B)))].",
    "success": true
  },
  "1555": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(Z,X)),20)",
      "Equals(LengthOf(Line(T,Y)),15)",
      "Find(LengthOf(Line(W,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(W,T)))], if [Equals(LengthOf(Line(Z,X)),20)] and [Equals(LengthOf(Line(T,Y)),15)].",
    "success": true
  },
  "1556": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1557": {
    "text_logic_forms": [
      "Find(LengthOf(Line(P,Q)))"
    ],
    "output_text": "[Find(LengthOf(Line(P,Q)))].",
    "success": true
  },
  "1558": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1559": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1560": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]? Round to nearest tenth.",
    "success": true
  },
  "1561": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "1562": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1563": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1564": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1565": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "1566": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(S)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(S)))].",
    "success": true
  },
  "1567": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1568": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(LengthOf(Line(F,H)),Line(F,L))",
      "Equals(LengthOf(Line(F,K)),17)",
      "Find(LengthOf(Line(L,K)))"
    ],
    "output_text": "In [Circle(F)], [Equals(LengthOf(Line(F,H)),Line(F,L))] and [Equals(LengthOf(Line(F,K)),17)] [Find(LengthOf(Line(L,K)))].",
    "success": true
  },
  "1569": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(L,N)),12.4)",
      "Find(LengthOf(Line(J,M)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(L,N)),12.4)] [Find(LengthOf(Line(J,M)))]?",
    "success": true
  },
  "1570": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1571": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),78)",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Equals(AreaOf(Shape(A)),78)].",
    "success": true
  },
  "1572": {
    "text_logic_forms": [
      "Circle(A)",
      "Equals(MeasureOf(Angle(E,A,D)),42)",
      "Find(MeasureOf(Arc(E,D,B)))"
    ],
    "output_text": "In [Circle(A)], [Equals(MeasureOf(Angle(E,A,D)),42)] [Find(MeasureOf(Arc(E,D,B)))].",
    "success": true
  },
  "1573": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1574": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(a)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(a)].",
    "success": true
  },
  "1575": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1576": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(J,M)),Line(P,M))",
      "Equals(LengthOf(Line(M,L)),Line(P,L))",
      "Equals(MeasureOf(Angle(P,L,J)),58)",
      "Find(MeasureOf(Angle(P,J,L)))"
    ],
    "output_text": ", [Equals(LengthOf(Line(J,M)),Line(P,M))] and [Equals(LengthOf(Line(M,L)),Line(P,L))]. If [Equals(MeasureOf(Angle(P,L,J)),58)] [Find(MeasureOf(Angle(P,J,L)))].",
    "success": true
  },
  "1577": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest hundredth.",
    "success": true
  },
  "1578": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(E,G)))"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(E,G)))].",
    "success": true
  },
  "1579": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "1580": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1581": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(U,J)),9)",
      "Equals(LengthOf(Line(V,J)),3)",
      "Equals(LengthOf(Line(Z,T)),18)",
      "Find(LengthOf(Line(Z,J)))"
    ],
    "output_text": "[Equals(LengthOf(Line(U,J)),9)] [Equals(LengthOf(Line(V,J)),3)] and [Equals(LengthOf(Line(Z,T)),18)] [Find(LengthOf(Line(Z,J)))].",
    "success": true
  },
  "1582": {
    "text_logic_forms": [
      "Circle(D)",
      "Equals(LengthOf(Line(D,E)),Line(E,C))",
      "Equals(MeasureOf(Arc(C,F)),60)",
      "Perpendicular(Line(D,E),Line(E,C))",
      "Find(MeasureOf(Arc(A,F)))"
    ],
    "output_text": "In [Circle(D)], [Equals(LengthOf(Line(D,E)),Line(E,C))], [Equals(MeasureOf(Arc(C,F)),60)] and [Perpendicular(Line(D,E),Line(E,C))]. [Find(MeasureOf(Arc(A,F)))].",
    "success": true
  },
  "1583": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "1584": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1585": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "1586": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "1587": {
    "text_logic_forms": [
      "Find(LengthOf(Line(J,L)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,L)))].",
    "success": true
  },
  "1588": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1589": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "1590": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1591": {
    "text_logic_forms": [
      "IsDiameterOf(Line(P,M),Circle(R))",
      "Find(MeasureOf(Arc(M,N,P)))"
    ],
    "output_text": "[IsDiameterOf(Line(P,M),Circle(R))]. [Find(MeasureOf(Arc(M,N,P)))].",
    "success": true
  },
  "1592": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "1593": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "1594": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))] if [Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))].",
    "success": true
  },
  "1595": {
    "text_logic_forms": [
      "Find(LengthOf(Line(S,R)))"
    ],
    "output_text": "[Find(LengthOf(Line(S,R)))].",
    "success": true
  },
  "1596": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A,G,E)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,G,E)))].",
    "success": true
  },
  "1597": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]? Round to nearest tenth.",
    "success": true
  },
  "1598": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1599": {
    "text_logic_forms": [
      "Angle($)",
      "Line(v)",
      "Find(LengthOf(Line(m)))"
    ],
    "output_text": "[Find(LengthOf(Line(m)))] \\[Angle($)] [Line(v)].",
    "success": true
  },
  "1600": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1601": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]? Round to nearest tenth if necessary.",
    "success": true
  },
  "1602": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1603": {
    "text_logic_forms": [
      "Similar(Triangle(D,E,F),Triangle(A,B,C))",
      "Find(PerimeterOf(Triangle(D,E,F)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(D,E,F)))] if [Similar(Triangle(D,E,F),Triangle(A,B,C))].",
    "success": true
  },
  "1604": {
    "text_logic_forms": [
      "Arc(A,C)",
      "Arc(A,D,C)",
      "Equals(MeasureOf(Angle(A,B,C)),70)",
      "Find(y)"
    ],
    "output_text": "degree measure ofinor arc [Arc(A,C)] and major arc [Arc(A,D,C)] are x and y. If [Equals(MeasureOf(Angle(A,B,C)),70)] [Find(y)].",
    "success": false
  },
  "1605": {
    "text_logic_forms": [
      "IsMidpointOf(Point(P),Line(J,K))",
      "IsMidpointOf(Point(Q),Line(K,L))",
      "IsMidpointOf(Point(R),Line(J,L))",
      "Find(x)"
    ],
    "output_text": "[IsMidpointOf(Point(P),Line(J,K))], [IsMidpointOf(Point(Q),Line(K,L))], [IsMidpointOf(Point(R),Line(J,L))],,. [Find(x)].",
    "success": true
  },
  "1606": {
    "text_logic_forms": [
      "Find(LengthOf(Line(N,P)))"
    ],
    "output_text": "[Find(LengthOf(Line(N,P)))].",
    "success": true
  },
  "1607": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1608": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(T,P)),4x+2)",
      "Equals(LengthOf(Line(Q,P)),2y-6)",
      "Equals(LengthOf(Line(P,S)),5y-12)",
      "Equals(LengthOf(Line(P,R)),6x-4)",
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "If [Equals(LengthOf(Line(T,P)),4x+2)] [Equals(LengthOf(Line(Q,P)),2y-6)] [Equals(LengthOf(Line(P,S)),5y-12)] and [Equals(LengthOf(Line(P,R)),6x-4)] [Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1609": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "1610": {
    "text_logic_forms": [
      "Triangle(C,D,F)",
      "IsCentroidOf(Point(K),Triangle(C,D,F))",
      "Equals(LengthOf(Line(D,K)),16)",
      "Find(LengthOf(Line(K,H)))"
    ],
    "output_text": " [Triangle(C,D,F)], [IsCentroidOf(Point(K),Triangle(C,D,F))] and [Equals(LengthOf(Line(D,K)),16)] [Find(LengthOf(Line(K,H)))].",
    "success": true
  },
  "1611": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1612": {
    "text_logic_forms": [
      "Perpendicular(Line(A,B),Line(B,C))",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))] if [Perpendicular(Line(A,B),Line(B,C))].",
    "success": true
  },
  "1613": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Equals(LengthOf(Line(J,K)),2b+3)",
      "Equals(LengthOf(Line(J,M)),3a)",
      "Find(a)"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(a)] if [Equals(LengthOf(Line(J,K)),2b+3)] and [Equals(LengthOf(Line(J,M)),3a)].",
    "success": true
  },
  "1614": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "1615": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1616": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1617": {
    "text_logic_forms": [
      "IsPerpendicularBisectorOf(Line(l),Triangle(P,Q,R))",
      "IsPerpendicularBisectorOf(Line(m),Triangle(P,Q,R))",
      "IsPerpendicularBisectorOf(Line(n),Triangle(P,Q,R))",
      "IntersectAt(Line(l),Line(m),Line(n),Point(T))",
      "Equals(LengthOf(Line(T,Q)),2x)",
      "Equals(LengthOf(Line(P,T)),3y-1)",
      "Equals(LengthOf(Line(T,R)),8)",
      "Find(x)"
    ],
    "output_text": "[IsPerpendicularBisectorOf(Line(l),Triangle(P,Q,R))], [IsPerpendicularBisectorOf(Line(m),Triangle(P,Q,R))], [IsPerpendicularBisectorOf(Line(n),Triangle(P,Q,R))]. [IntersectAt(Line(l),Line(m),Line(n),Point(T))]. If [Equals(LengthOf(Line(T,Q)),2x)] [Equals(LengthOf(Line(P,T)),3y-1)] and [Equals(LengthOf(Line(T,R)),8)] [Find(x)].",
    "success": true
  },
  "1618": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),62)",
      "Equals(MeasureOf(Angle(14)),38)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(11)),62)] and [Equals(MeasureOf(Angle(14)),38)] [Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "1619": {
    "text_logic_forms": [
      "Isosceles(Triangle(X,Y,Z))",
      "Find(LengthOf(Line(X,Z)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,Z)))] of [Isosceles(Triangle(X,Y,Z))].",
    "success": true
  },
  "1620": {
    "text_logic_forms": [
      "Rhombus(X,Y,Z,W)",
      "Equals(MeasureOf(Angle(W,Y,Z)),53)",
      "Equals(LengthOf(Line(V,W)),3)",
      "Equals(LengthOf(Line(X,V)),2a-2)",
      "Equals(LengthOf(Line(Z,V)),\\frac{5a+1}{4})",
      "Find(LengthOf(Line(X,Z)))"
    ],
    "output_text": "Use [Rhombus(X,Y,Z,W)] with [Equals(MeasureOf(Angle(W,Y,Z)),53)] [Equals(LengthOf(Line(V,W)),3)] [Equals(LengthOf(Line(X,V)),2a-2)] and [Equals(LengthOf(Line(Z,V)),\\frac{5a+1}{4})] [Find(LengthOf(Line(X,Z)))].",
    "success": true
  },
  "1621": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1622": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1623": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1624": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1625": {
    "text_logic_forms": [
      "Rectangle(D,E,F,G)",
      "Equals(LengthOf(Line(D,E)),14+2x)",
      "Equals(LengthOf(Line(G,F)),4(x-3)+6)",
      "Find(LengthOf(Line(G,F)))"
    ],
    "output_text": " [Rectangle(D,E,F,G)]. If [Equals(LengthOf(Line(D,E)),14+2x)] and [Equals(LengthOf(Line(G,F)),4(x-3)+6)] [Find(LengthOf(Line(G,F)))].",
    "success": true
  },
  "1626": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1627": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),32)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(4)),32)] [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1628": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(B,C,D)),120)",
      "Find(MeasureOf(Angle(D,A,C)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(MeasureOf(Angle(B,C,D)),120)] [Find(MeasureOf(Angle(D,A,C)))].",
    "success": true
  },
  "1629": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1630": {
    "text_logic_forms": [
      "InscribedIn(Triangle($),Circle(D))",
      "Find(CircumferenceOf(Circle(D)))"
    ],
    "output_text": "[InscribedIn(Triangle($),Circle(D))]. [Find(CircumferenceOf(Circle(D)))].",
    "success": true
  },
  "1631": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,R)",
      "Find(w)"
    ],
    "output_text": "Use [Parallelogram(M,N,P,R)] to [Find(w)].",
    "success": true
  },
  "1632": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1633": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Find(x)"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. [Find(x)].",
    "success": true
  },
  "1634": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1635": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(Q,T)),11)",
      "Find(LengthOf(Line(Q,U)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(Q,T)),11)] [Find(LengthOf(Line(Q,U)))].",
    "success": true
  },
  "1636": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1637": {
    "text_logic_forms": [
      "Find(LengthOf(Line(E,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(E,D)))]?",
    "success": true
  },
  "1638": {
    "text_logic_forms": [
      "Trapezoid(A,B,C,D)",
      "IsMidpointOf(Point(S),LegOf(Trapezoid(A,B,C,D)))",
      "IsMidpointOf(Point(T),LegOf(Trapezoid(A,B,C,D)))",
      "Equals(LengthOf(Line(A,B)),3x)",
      "Equals(LengthOf(Line(S,T)),15)",
      "Equals(LengthOf(Line(C,D)),9x)",
      "Find(x)"
    ],
    "output_text": "[Trapezoid(A,B,C,D)], [IsMidpointOf(Point(S),LegOf(Trapezoid(A,B,C,D)))], [IsMidpointOf(Point(T),LegOf(Trapezoid(A,B,C,D)))],. If [Equals(LengthOf(Line(A,B)),3x)] [Equals(LengthOf(Line(S,T)),15)] and [Equals(LengthOf(Line(C,D)),9x)] [Find(x)].",
    "success": true
  },
  "1639": {
    "text_logic_forms": [
      "Circle(G)",
      "Equals(MeasureOf(Angle(A,G,B)),30)",
      "Perpendicular(Line(C,G),Line(G,D))",
      "Find(MeasureOf(Arc(F,D)))"
    ],
    "output_text": "In [Circle(G)], [Equals(MeasureOf(Angle(A,G,B)),30)] and [Perpendicular(Line(C,G),Line(G,D))]. [Find(MeasureOf(Arc(F,D)))].",
    "success": true
  },
  "1640": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(T,S)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(T,S)))].",
    "success": true
  },
  "1641": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1642": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(E)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(E)))].",
    "success": true
  },
  "1643": {
    "text_logic_forms": [
      "Trapezoid(A,B,C,D)",
      "Equals(LengthOf(Line(A,C)),3x-7)",
      "Equals(LengthOf(Line(B,D)),2x+8)",
      "Isosceles(Quadrilateral(A,B,C,D))",
      "Find(x)"
    ],
    "output_text": " [Trapezoid(A,B,C,D)]. If [Equals(LengthOf(Line(A,C)),3x-7)] and [Equals(LengthOf(Line(B,D)),2x+8)] [Find(x)] so [Isosceles(Quadrilateral(A,B,C,D))].",
    "success": true
  },
  "1644": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1645": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "1646": {
    "text_logic_forms": [
      "Isosceles(Triangle(K,L,N))",
      "Isosceles(Triangle(L,M,N))",
      "Equals(MeasureOf(Angle(J,K,N)),130)",
      "Find(MeasureOf(Angle(L,K,N)))"
    ],
    "output_text": "[Isosceles(Triangle(K,L,N))], [Isosceles(Triangle(L,M,N))] and [Equals(MeasureOf(Angle(J,K,N)),130)] [Find(MeasureOf(Angle(L,K,N)))].",
    "success": true
  },
  "1647": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1648": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] in [Parallelogram($)].",
    "success": true
  },
  "1649": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1650": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1651": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1652": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1653": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1654": {
    "text_logic_forms": [
      "Circle(R)",
      "Equals(LengthOf(Line(S,U)),20)",
      "Equals(LengthOf(Line(Y,W)),20)",
      "Equals(MeasureOf(Arc(Y,X)),45)",
      "Find(LengthOf(Line(W,Z)))"
    ],
    "output_text": "In [Circle(R)], [Equals(LengthOf(Line(S,U)),20)] [Equals(LengthOf(Line(Y,W)),20)] and [Equals(MeasureOf(Arc(Y,X)),45)] [Find(LengthOf(Line(W,Z)))].",
    "success": true
  },
  "1655": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1656": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "1657": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),53)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),53)] [Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "1658": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1659": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),94)",
      "Find(x)"
    ],
    "output_text": ". [Find(x)]. [Equals(AreaOf(Shape(A)),94)].",
    "success": true
  },
  "1660": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(B,D)),12)",
      "Find(RadiusOf(Circle($)))"
    ],
    "output_text": "[Equals(LengthOf(Line(B,D)),12)] [Find(RadiusOf(Circle($)))].",
    "success": true
  },
  "1661": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1662": {
    "text_logic_forms": [
      "Circle(R)",
      "Equals(LengthOf(Line(S,U)),20)",
      "Equals(LengthOf(Line(Y,W)),20)",
      "Equals(MeasureOf(Arc(Y,X)),45)",
      "Find(LengthOf(Line(U,V)))"
    ],
    "output_text": "In [Circle(R)], [Equals(LengthOf(Line(S,U)),20)] [Equals(LengthOf(Line(Y,W)),20)] and [Equals(MeasureOf(Arc(Y,X)),45)] [Find(LengthOf(Line(U,V)))].",
    "success": true
  },
  "1663": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1664": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1665": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,Q)",
      "Find(x)"
    ],
    "output_text": "[Parallelogram(M,N,P,Q)] is. [Find(x)]?",
    "success": true
  },
  "1666": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1667": {
    "text_logic_forms": [
      "Find(LengthOf(Line(C,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(C,D)))].",
    "success": true
  },
  "1668": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1669": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1670": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1671": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1672": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "IsDiagonalOf(Line(A,C),Rectangle(A,B,C,D))",
      "IsDiagonalOf(Line(B,D),Rectangle(A,B,C,D))",
      "Equals(LengthOf(Line(A,C)),56)",
      "Equals(LengthOf(Line(B,D)),56)",
      "Equals(MeasureOf(Angle(B,A,C)),42)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Rectangle(A,B,C,D)], [IsDiagonalOf(Line(A,C),Rectangle(A,B,C,D))], [IsDiagonalOf(Line(B,D),Rectangle(A,B,C,D))], [Equals(LengthOf(Line(A,C)),56)] [Equals(LengthOf(Line(B,D)),56)] If [Equals(MeasureOf(Angle(B,A,C)),42)] [Find(LengthOf(Line(A,B)))] to nearest tenth of foot?",
    "success": true
  },
  "1673": {
    "text_logic_forms": [
      "Find(LengthOf(Line(Q,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(Q,S)))].",
    "success": true
  },
  "1674": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))] in. Round to nearest tenth.",
    "success": true
  },
  "1675": {
    "text_logic_forms": [
      "Find(LengthOf(Line(C,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(C,B)))].",
    "success": true
  },
  "1676": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1677": {
    "text_logic_forms": [
      "Trapezoid(Q,R,T,U)",
      "IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))",
      "IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))",
      "Equals(LengthOf(Line(Q,R)),12)",
      "Equals(LengthOf(Line(U,T)),22)",
      "Find(LengthOf(Line(V,S)))"
    ],
    "output_text": "[Trapezoid(Q,R,T,U)], [IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))], [IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))],. If [Equals(LengthOf(Line(Q,R)),12)] and [Equals(LengthOf(Line(U,T)),22)] [Find(LengthOf(Line(V,S)))].",
    "success": true
  },
  "1678": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(E)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(E)))].",
    "success": true
  },
  "1679": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(J)))"
    ],
    "output_text": "to [Find(MeasureOf(Angle(J)))] to nearest degree.",
    "success": true
  },
  "1680": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(LengthOf(Line(P,S)),4)",
      "Find(LengthOf(Arc(Q,R)))"
    ],
    "output_text": "In [Circle(P)], [Equals(LengthOf(Line(P,S)),4)] [Find(LengthOf(Arc(Q,R)))]. Round to nearest hundredth.",
    "success": true
  },
  "1681": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))",
      "Equals(MeasureOf(Angle(A,G,F)),108)",
      "Equals(LengthOf(Line(G,F)),14)",
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(D,G)),4.5)",
      "Equals(LengthOf(Line(E,F)),8)",
      "Equals(LengthOf(Line(A,B)),26)",
      "Find(ScaleFactorOf(Trapezoid(A,B,C,D),Trapezoid(A,E,F,G)))"
    ],
    "output_text": "[Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))], [Equals(MeasureOf(Angle(A,G,F)),108)] [Equals(LengthOf(Line(G,F)),14)] [Equals(LengthOf(Line(A,D)),12)] [Equals(LengthOf(Line(D,G)),4.5)] [Equals(LengthOf(Line(E,F)),8)] and [Equals(LengthOf(Line(A,B)),26)] [Find(ScaleFactorOf(Trapezoid(A,B,C,D),Trapezoid(A,E,F,G)))].",
    "success": true
  },
  "1682": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1683": {
    "text_logic_forms": [
      "Square(W,X,Y,Z)",
      "Equals(LengthOf(Line(W,T)),3)",
      "Find(MeasureOf(Angle(W,T,Z)))"
    ],
    "output_text": " [Square(W,X,Y,Z)]. If [Equals(LengthOf(Line(W,T)),3)] [Find(MeasureOf(Angle(W,T,Z)))].",
    "success": true
  },
  "1684": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1685": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(D,G,F)),53)",
      "Equals(MeasureOf(Angle(A,G,C)),40)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))] if [Equals(MeasureOf(Angle(D,G,F)),53)] and [Equals(MeasureOf(Angle(A,G,C)),40)].",
    "success": true
  },
  "1686": {
    "text_logic_forms": [
      "Find(RatioOf(SinOf(Angle(A))))"
    ],
    "output_text": "[Find(RatioOf(SinOf(Angle(A))))] to nearest hundredth.",
    "success": true
  },
  "1687": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. (Hint: Draw auxiliary line).",
    "success": true
  },
  "1688": {
    "text_logic_forms": [
      "Isosceles(Trapezoid(X,Y,Z,W))",
      "Find(MedianOf(Isosceles(Trapezoid(X,Y,Z,W))))"
    ],
    "output_text": "[Isosceles(Trapezoid(X,Y,Z,W))], [Find(MedianOf(Isosceles(Trapezoid(X,Y,Z,W))))].",
    "success": true
  },
  "1689": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1690": {
    "text_logic_forms": [
      "Find(LengthOf(Line(S,P)))"
    ],
    "output_text": "[Find(LengthOf(Line(S,P)))].",
    "success": true
  },
  "1691": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1692": {
    "text_logic_forms": [
      "Find(RatioOf(SinOf(Angle(L))))"
    ],
    "output_text": "[Find(RatioOf(SinOf(Angle(L))))] to nearest hundredth.",
    "success": true
  },
  "1693": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(LengthOf(Line(A,F)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(LengthOf(Line(A,F)))].",
    "success": true
  },
  "1694": {
    "text_logic_forms": [
      "Isosceles(Triangle(W,X,Y))",
      "Isosceles(Triangle(X,Y,Z))",
      "Equals(MeasureOf(Angle(X,Y,Z)),128)",
      "Find(MeasureOf(Angle(Y,Z,X)))"
    ],
    "output_text": "[Isosceles(Triangle(W,X,Y))], [Isosceles(Triangle(X,Y,Z))] and [Equals(MeasureOf(Angle(X,Y,Z)),128)] [Find(MeasureOf(Angle(Y,Z,X)))].",
    "success": true
  },
  "1695": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1696": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1697": {
    "text_logic_forms": [
      "Right(Triangle(F,G,H))",
      "IsHypotenuseOf(Line(F,H),Right(Triangle(F,G,H)))",
      "Equals(LengthOf(Line(G,J)),Line(G,H))",
      "Find(MeasureOf(Angle(J,G,H)))"
    ],
    "output_text": ", [Right(Triangle(F,G,H))], [IsHypotenuseOf(Line(F,H),Right(Triangle(F,G,H)))] and [Equals(LengthOf(Line(G,J)),Line(G,H))]. [Find(MeasureOf(Angle(J,G,H)))]?",
    "success": true
  },
  "1698": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "1699": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "1700": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1701": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))] in. Round to nearest tenth, if necessary.",
    "success": true
  },
  "1702": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "1703": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1704": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1705": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1706": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1707": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1708": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1709": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(LengthOf(Line(P,D)),10)",
      "Equals(LengthOf(Line(P,Q)),10)",
      "Equals(LengthOf(Line(Q,E)),20)",
      "Find(LengthOf(Line(P,E)))"
    ],
    "output_text": "In [Circle(P)], [Equals(LengthOf(Line(P,D)),10)] [Equals(LengthOf(Line(P,Q)),10)] and [Equals(LengthOf(Line(Q,E)),20)] [Find(LengthOf(Line(P,E)))].",
    "success": true
  },
  "1710": {
    "text_logic_forms": [
      "Circle(A)",
      "Equals(MeasureOf(Angle(E,A,D)),42)",
      "Find(MeasureOf(Arc(B,C)))"
    ],
    "output_text": "In [Circle(A)], [Equals(MeasureOf(Angle(E,A,D)),42)] [Find(MeasureOf(Arc(B,C)))].",
    "success": true
  },
  "1711": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "1712": {
    "text_logic_forms": [
      "Find(LengthOf(Line(S,W)))"
    ],
    "output_text": "[Find(LengthOf(Line(S,W)))].",
    "success": true
  },
  "1713": {
    "text_logic_forms": [
      "Find(RatioOf(SinOf(Angle(A))))"
    ],
    "output_text": "[Find(RatioOf(SinOf(Angle(A))))] to nearest hundredth.",
    "success": true
  },
  "1714": {
    "text_logic_forms": [
      "Circle(X)",
      "Equals(LengthOf(Line(A,B)),30)",
      "Equals(LengthOf(Line(C,D)),30)",
      "Equals(MeasureOf(Arc(C,Z)),40)",
      "Find(MeasureOf(Arc(D,Z)))"
    ],
    "output_text": "In [Circle(X)], [Equals(LengthOf(Line(A,B)),30)] [Equals(LengthOf(Line(C,D)),30)] and [Equals(MeasureOf(Arc(C,Z)),40)] [Find(MeasureOf(Arc(D,Z)))].",
    "success": true
  },
  "1715": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1716": {
    "text_logic_forms": [
      "IsAltitudeOf(Line(S,A),Shape($))",
      "IsAltitudeOf(Line(F,B),Shape($))",
      "Similar(Triangle(R,S,T),Triangle(E,F,G))",
      "Find(LengthOf(Line(F,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(F,B)))] if [IsAltitudeOf(Line(S,A),Shape($))], [IsAltitudeOf(Line(F,B),Shape($))] and [Similar(Triangle(R,S,T),Triangle(E,F,G))].",
    "success": true
  },
  "1717": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(B,C)),30)",
      "Congruent(Line(A,B),Arc(C,D))",
      "Find(MeasureOf(Arc(A,B)))"
    ],
    "output_text": "If [Equals(MeasureOf(Arc(B,C)),30)] and [Congruent(Line(A,B),Arc(C,D))], [Find(MeasureOf(Arc(A,B)))].",
    "success": true
  },
  "1718": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest hundredth.",
    "success": true
  },
  "1719": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),2x-17)",
      "Equals(MeasureOf(Angle(1)),85)",
      "Find(x)"
    ],
    "output_text": "to. If [Equals(MeasureOf(Angle(4)),2x-17)] and [Equals(MeasureOf(Angle(1)),85)] [Find(x)].",
    "success": true
  },
  "1720": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),123)",
      "Find(MeasureOf(Angle(16)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),123)] [Find(MeasureOf(Angle(16)))].",
    "success": true
  },
  "1721": {
    "text_logic_forms": [
      "Find(LengthOf(Line(S,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(S,C)))].",
    "success": true
  },
  "1722": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1723": {
    "text_logic_forms": [
      "Circle(Z)",
      "Equals(Angle(W,Z,X),Angle(X,Z,Y))",
      "Equals(MeasureOf(Angle(V,Z,U)),4x)",
      "Equals(MeasureOf(Angle(U,Z,Y)),2x+24)",
      "IsDiameterOf(Line(V,Y),Circle($))",
      "IsDiameterOf(Line(W,U),Circle($))",
      "Find(MeasureOf(Arc(W,V)))"
    ],
    "output_text": "In [Circle(Z)], [Equals(Angle(W,Z,X),Angle(X,Z,Y))], [Equals(MeasureOf(Angle(V,Z,U)),4x)] [Equals(MeasureOf(Angle(U,Z,Y)),2x+24)] and [IsDiameterOf(Line(V,Y),Circle($))], [IsDiameterOf(Line(W,U),Circle($))]. [Find(MeasureOf(Arc(W,V)))].",
    "success": true
  },
  "1724": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1725": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(J,H),Triangle(K,L,M))",
      "Find(x)"
    ],
    "output_text": "[IsMidsegmentOf(Line(J,H),Triangle(K,L,M))]. [Find(x)].",
    "success": true
  },
  "1726": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),53)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),53)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1727": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D)))].",
    "success": true
  },
  "1728": {
    "text_logic_forms": [
      "Quadrilateral(P,Q,R,S)",
      "Equals(LengthOf(Line(P,Q)),721)",
      "Equals(LengthOf(Line(Q,R)),547)",
      "Equals(LengthOf(Line(R,S)),593)",
      "Equals(LengthOf(Line(P,S)),756)",
      "Equals(MeasureOf(Angle(P)),58)",
      "Find(LengthOf(Line(Q,S)))"
    ],
    "output_text": "In [Quadrilateral(P,Q,R,S)], [Equals(LengthOf(Line(P,Q)),721)] [Equals(LengthOf(Line(Q,R)),547)] [Equals(LengthOf(Line(R,S)),593)] [Equals(LengthOf(Line(P,S)),756)] and [Equals(MeasureOf(Angle(P)),58)] [Find(LengthOf(Line(Q,S)))].",
    "success": true
  },
  "1729": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "1730": {
    "text_logic_forms": [
      "IsMidpointOf(Point(J),Line(K,H))",
      "IsMidpointOf(Point(P),Line(H,M))",
      "IsMidpointOf(Point(L),Line(M,K))",
      "Find(x)"
    ],
    "output_text": "If [IsMidpointOf(Point(J),Line(K,H))], [IsMidpointOf(Point(P),Line(H,M))], [IsMidpointOf(Point(L),Line(M,K))],,. [Find(x)].",
    "success": true
  },
  "1731": {
    "text_logic_forms": [
      "Trapezoid(Q,R,S,T)",
      "IsMidpointOf(Point(M),LegOf(Trapezoid(Q,R,S,T)))",
      "IsMidpointOf(Point(P),LegOf(Trapezoid(Q,R,S,T)))",
      "Equals(LengthOf(Line(Q,R)),16)",
      "Equals(LengthOf(Line(P,M)),12)",
      "Equals(LengthOf(Line(T,S)),4x)",
      "Find(x)"
    ],
    "output_text": "[Trapezoid(Q,R,S,T)], [IsMidpointOf(Point(M),LegOf(Trapezoid(Q,R,S,T)))], [IsMidpointOf(Point(P),LegOf(Trapezoid(Q,R,S,T)))],. If [Equals(LengthOf(Line(Q,R)),16)] [Equals(LengthOf(Line(P,M)),12)] and [Equals(LengthOf(Line(T,S)),4x)] [Find(x)].",
    "success": true
  },
  "1732": {
    "text_logic_forms": [
      "IsDiameterOf(SideOf(Square($)),Circle($))",
      "Equals(SideOf(Square($)),5)",
      "Shaded(Shape($))"
    ],
    "output_text": "One [IsDiameterOf(SideOf(Square($)),Circle($))]. length of one [Equals(SideOf(Square($)),5)] To nearest hundredth, Find probability a point chosen at random is in [Shaded(Shape($))]?",
    "success": false
  },
  "1733": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),3a+40)",
      "Equals(MeasureOf(Angle(2)),2a+25)",
      "Equals(MeasureOf(Angle(3)),5b-26)",
      "Find(b)"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),3a+40)] [Equals(MeasureOf(Angle(2)),2a+25)] and [Equals(MeasureOf(Angle(3)),5b-26)] [Find(b)].",
    "success": true
  },
  "1734": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest hundredth, if necessary.",
    "success": true
  },
  "1735": {
    "text_logic_forms": [
      "Rectangle(W,X,Y,Z)",
      "Equals(LengthOf(Line(Z,Y)),2x+3)",
      "Equals(LengthOf(Line(W,X)),x+4)",
      "Find(LengthOf(Line(W,X)))"
    ],
    "output_text": " [Rectangle(W,X,Y,Z)]. If [Equals(LengthOf(Line(Z,Y)),2x+3)] and [Equals(LengthOf(Line(W,X)),x+4)] [Find(LengthOf(Line(W,X)))].",
    "success": true
  },
  "1736": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1737": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(N,R)),62)",
      "Equals(MeasureOf(Arc(N,P)),108)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [Equals(MeasureOf(Arc(N,R)),62)] and [Equals(MeasureOf(Arc(N,P)),108)]?",
    "success": true
  },
  "1738": {
    "text_logic_forms": [
      "Equals(a,10\\sqrt{3})",
      "Find(LengthOf(Line(C,E)))"
    ],
    "output_text": "If [Equals(a,10\\sqrt{3})] [Find(LengthOf(Line(C,E)))].",
    "success": true
  },
  "1739": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),123)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),123)] [Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "1740": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1741": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(2)),4x+7)",
      "Equals(MeasureOf(Angle(7)),5x-13)",
      "Find(x)"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(2)),4x+7)] and [Equals(MeasureOf(Angle(7)),5x-13)] [Find(x)].",
    "success": true
  },
  "1742": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(B,X)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(B,X)))].",
    "success": true
  },
  "1743": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "1744": {
    "text_logic_forms": [
      "Similar(Triangle(P,Q,M),Triangle(P,R,Q))",
      "Find(PerimeterOf(Triangle(P,Q,R)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(P,Q,R)))], if [Similar(Triangle(P,Q,M),Triangle(P,R,Q))].",
    "success": true
  },
  "1745": {
    "text_logic_forms": [
      "Tangent(Line(J,H),Circle(G))",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line(J,H),Circle(G))] at J. [Find(x)].",
    "success": false
  },
  "1746": {
    "text_logic_forms": [
      "IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))",
      "Equals(LengthOf(Line(G,H)),10)",
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "[IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))]. If [Equals(LengthOf(Line(G,H)),10)] [Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "1747": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(X)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(X)))].",
    "success": true
  },
  "1748": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(D,G,F)),53)",
      "Equals(MeasureOf(Angle(A,G,C)),40)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))] if [Equals(MeasureOf(Angle(D,G,F)),53)] and [Equals(MeasureOf(Angle(A,G,C)),40)].",
    "success": true
  },
  "1749": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(X,Y),Triangle(R,S,T))",
      "IsMidsegmentOf(Line(X,Z),Triangle(R,S,T))",
      "Find(LengthOf(Line(X,Z)))"
    ],
    "output_text": "[IsMidsegmentOf(Line(X,Y),Triangle(R,S,T))], [IsMidsegmentOf(Line(X,Z),Triangle(R,S,T))]. [Find(LengthOf(Line(X,Z)))].",
    "success": true
  },
  "1750": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1751": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1752": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(K,L))",
      "Equals(LengthOf(Line(K,N)),9)",
      "Equals(LengthOf(Line(L,N)),16)",
      "Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))",
      "Find(LengthOf(Line(M,R)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(K,L))], [Equals(LengthOf(Line(K,N)),9)] [Equals(LengthOf(Line(L,N)),16)] [Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))], [Find(LengthOf(Line(M,R)))].",
    "success": true
  },
  "1753": {
    "text_logic_forms": [
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Find(MeasureOf(Arc(E,B)))"
    ],
    "output_text": "[IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))]. [Find(MeasureOf(Arc(E,B)))].",
    "success": true
  },
  "1754": {
    "text_logic_forms": [
      "Find(RatioOf(SinOf(Angle(C))))"
    ],
    "output_text": "[Find(RatioOf(SinOf(Angle(C))))] to nearest hundredth.",
    "success": true
  },
  "1755": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(F)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(F)))].",
    "success": true
  },
  "1756": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "1757": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1758": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(D,G,I)),24)",
      "Equals(r,6)",
      "Find(Arc(D,G))"
    ],
    "output_text": "[Find(Arc(D,G))] if [Equals(MeasureOf(Angle(D,G,I)),24)] and [Equals(r,6)].",
    "success": true
  },
  "1759": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1760": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1761": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1762": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1763": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1764": {
    "text_logic_forms": [
      "Find(LengthOf(Line(F,G)))"
    ],
    "output_text": "[Find(LengthOf(Line(F,G)))].",
    "success": true
  },
  "1765": {
    "text_logic_forms": [
      "IsMedianOf(Line(W,P),Shape($))",
      "BisectsAngle(Line(W,P),Angle($))",
      "Equals(LengthOf(Line(A,P)),3y+11)",
      "Equals(LengthOf(Line(P,H)),7y-5)",
      "Equals(MeasureOf(Angle(H,W,P)),x+12)",
      "Equals(MeasureOf(Angle(P,A,W)),3x-2)",
      "Equals(MeasureOf(Angle(H,W,A)),4x-16)",
      "Find(x)"
    ],
    "output_text": "If [IsMedianOf(Line(W,P),Shape($))], [BisectsAngle(Line(W,P),Angle($))], [Equals(LengthOf(Line(A,P)),3y+11)] [Equals(LengthOf(Line(P,H)),7y-5)] [Equals(MeasureOf(Angle(H,W,P)),x+12)] [Equals(MeasureOf(Angle(P,A,W)),3x-2)] and [Equals(MeasureOf(Angle(H,W,A)),4x-16)] [Find(x)].",
    "success": true
  },
  "1766": {
    "text_logic_forms": [
      "Find(RatioOf(TanOf(Angle(P))))"
    ],
    "output_text": "[Find(RatioOf(TanOf(Angle(P))))] to nearest hundredth.",
    "success": true
  },
  "1767": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "1768": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1769": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1770": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1771": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1772": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1773": {
    "text_logic_forms": [
      "Triangle(A,B,C)",
      "BisectsAngle(Line(A,D),Triangle(A,B,C))",
      "BisectsAngle(Line(D,C),Triangle(A,B,C))",
      "Equals(MeasureOf(Angle(B)),76)",
      "Find(MeasureOf(Angle(A,D,C)))"
    ],
    "output_text": "[Triangle(A,B,C)], [BisectsAngle(Line(A,D),Triangle(A,B,C))], [BisectsAngle(Line(D,C),Triangle(A,B,C))] and [Equals(MeasureOf(Angle(B)),76)] [Find(MeasureOf(Angle(A,D,C)))]?",
    "success": true
  },
  "1774": {
    "text_logic_forms": [
      "Similar(Triangle(A,B,C),Triangle(D,E,F))",
      "Equals(LengthOf(Line(A,B)),5)",
      "Equals(LengthOf(Line(B,C)),6)",
      "Equals(LengthOf(Line(A,C)),7)",
      "Equals(LengthOf(Line(D,E)),3)",
      "Find(PerimeterOf(Triangle(D,E,F)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(D,E,F)))], if [Similar(Triangle(A,B,C),Triangle(D,E,F))], [Equals(LengthOf(Line(A,B)),5)] [Equals(LengthOf(Line(B,C)),6)] [Equals(LengthOf(Line(A,C)),7)] and [Equals(LengthOf(Line(D,E)),3)].",
    "success": true
  },
  "1775": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Find(MeasureOf(Angle(M,J,K)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(MeasureOf(Angle(M,J,K)))].",
    "success": true
  },
  "1776": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle(A,B,C)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(A,B,C)))].",
    "success": true
  },
  "1777": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1778": {
    "text_logic_forms": [
      "Equals(AreaOf(Parallelogram($)),100)",
      "Find(BaseOf(Parallelogram($)))"
    ],
    "output_text": "[Find(BaseOf(Parallelogram($)))], [Equals(AreaOf(Parallelogram($)),100)].",
    "success": true
  },
  "1779": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1780": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(G)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(G)))].",
    "success": true
  },
  "1781": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1782": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1783": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1784": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1785": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1786": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1787": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "1788": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1789": {
    "text_logic_forms": [
      "Rectangle(J,K,L,M)",
      "Equals(MeasureOf(Angle(K,J,L)),2x+4)",
      "Equals(MeasureOf(Angle(J,L,K)),7x+5)",
      "Find(x)"
    ],
    "output_text": " [Rectangle(J,K,L,M)]. If [Equals(MeasureOf(Angle(K,J,L)),2x+4)] and [Equals(MeasureOf(Angle(J,L,K)),7x+5)] [Find(x)].",
    "success": true
  },
  "1790": {
    "text_logic_forms": [
      "Isosceles(Triangle(D,F,G))",
      "Isosceles(Triangle(F,G,H))",
      "Equals(MeasureOf(Angle(F,D,H)),28)",
      "Equals(LengthOf(Line(D,G)),Line(F,G))",
      "Equals(LengthOf(Line(F,G)),Line(F,H))",
      "Find(MeasureOf(Angle(G,F,H)))"
    ],
    "output_text": "[Isosceles(Triangle(D,F,G))], [Isosceles(Triangle(F,G,H))], [Equals(MeasureOf(Angle(F,D,H)),28)] and [Equals(LengthOf(Line(D,G)),Line(F,G))], [Equals(LengthOf(Line(F,G)),Line(F,H))]. [Find(MeasureOf(Angle(G,F,H)))].",
    "success": true
  },
  "1791": {
    "text_logic_forms": [
      "Find(CosOf(Angle(B)))"
    ],
    "output_text": "[Find(CosOf(Angle(B)))].",
    "success": true
  },
  "1792": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(x)].",
    "success": true
  },
  "1793": {
    "text_logic_forms": [
      "Parallelogram(P,Q,R,S)",
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "Use [Parallelogram(P,Q,R,S)] to [Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "1794": {
    "text_logic_forms": [
      "Congruent(Circle(J),Circle(K))",
      "Congruent(Arc(M,N),Arc(P,Q))",
      "Find(LengthOf(Line(P,Q)))"
    ],
    "output_text": "[Congruent(Circle(J),Circle(K))] and [Congruent(Arc(M,N),Arc(P,Q))]. [Find(LengthOf(Line(P,Q)))].",
    "success": true
  },
  "1795": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1796": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1797": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "1798": {
    "text_logic_forms": [
      "Parallel(Line(l),Line(m))",
      "Equals(MeasureOf(Angle(1)),105)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))] if [Parallel(Line(l),Line(m))] and [Equals(MeasureOf(Angle(1)),105)].",
    "success": true
  },
  "1799": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1800": {
    "text_logic_forms": [
      "Congruent(Triangle(N,D,G),Triangle(L,G,D))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(N,D,G),Triangle(L,G,D))]. [Find(x)].",
    "success": true
  },
  "1801": {
    "text_logic_forms": [
      "Parallelogram(W,X,Y,Z)",
      "Find(MeasureOf(Angle(X,W,Z)))"
    ],
    "output_text": " [Parallelogram(W,X,Y,Z)]. [Find(MeasureOf(Angle(X,W,Z)))].",
    "success": true
  },
  "1802": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,T)))].",
    "success": true
  },
  "1803": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth.",
    "success": true
  },
  "1804": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1805": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(K,L))",
      "Equals(LengthOf(Line(K,N)),9)",
      "Equals(LengthOf(Line(L,N)),16)",
      "Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))",
      "Find(LengthOf(Line(M,L)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(K,L))], [Equals(LengthOf(Line(K,N)),9)] [Equals(LengthOf(Line(L,N)),16)] [Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))], [Find(LengthOf(Line(M,L)))].",
    "success": true
  },
  "1806": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "1807": {
    "text_logic_forms": [
      "Equals(RatioOf(Line(I,J),Line(X,J)),RatioOf(Line(H,J),Line(Y,J)))",
      "Equals(MeasureOf(Angle(W,X,J)),130)",
      "Equals(MeasureOf(Angle(W,Z,G)),20)",
      "Find(MeasureOf(Angle(J,H,I)))"
    ],
    "output_text": "If [Equals(RatioOf(Line(I,J),Line(X,J)),RatioOf(Line(H,J),Line(Y,J)))], [Equals(MeasureOf(Angle(W,X,J)),130)] and [Equals(MeasureOf(Angle(W,Z,G)),20)] [Find(MeasureOf(Angle(J,H,I)))].",
    "success": true
  },
  "1808": {
    "text_logic_forms": [
      "Equals(Line(E,C),AltitudeOf(Triangle(A,E,D)))",
      "Equals(MeasureOf(Angle(1)),2x+7)",
      "Equals(MeasureOf(Angle(2)),3x+13)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "If [Equals(Line(E,C),AltitudeOf(Triangle(A,E,D)))], [Equals(MeasureOf(Angle(1)),2x+7)] and [Equals(MeasureOf(Angle(2)),3x+13)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1809": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))].",
    "success": true
  },
  "1810": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1811": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "1812": {
    "text_logic_forms": [
      "Circle(X)",
      "Equals(LengthOf(Line(A,B)),30)",
      "Equals(LengthOf(Line(C,D)),30)",
      "Equals(MeasureOf(Arc(C,Z)),40)",
      "Find(LengthOf(Line(C,N)))"
    ],
    "output_text": "In [Circle(X)], [Equals(LengthOf(Line(A,B)),30)] [Equals(LengthOf(Line(C,D)),30)] and [Equals(MeasureOf(Arc(C,Z)),40)] [Find(LengthOf(Line(C,N)))].",
    "success": true
  },
  "1813": {
    "text_logic_forms": [
      "IsMidpointOf(Point(S),Line(D,E))",
      "IsMidpointOf(Point(T),Line(E,F))",
      "IsMidpointOf(Point(U),Line(D,F))",
      "Find(z)"
    ],
    "output_text": "[IsMidpointOf(Point(S),Line(D,E))], [IsMidpointOf(Point(T),Line(E,F))], [IsMidpointOf(Point(U),Line(D,F))],,. [Find(z)].",
    "success": true
  },
  "1814": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "1815": {
    "text_logic_forms": [
      "Isosceles(Triangle(W,X,Y))",
      "Isosceles(Triangle(X,Y,Z))",
      "Equals(MeasureOf(Angle(X,Y,Z)),128)",
      "Find(MeasureOf(Angle(W,X,Y)))"
    ],
    "output_text": "[Isosceles(Triangle(W,X,Y))], [Isosceles(Triangle(X,Y,Z))] and [Equals(MeasureOf(Angle(X,Y,Z)),128)] [Find(MeasureOf(Angle(W,X,Y)))].",
    "success": true
  },
  "1816": {
    "text_logic_forms": [
      "Parallel(Line(l),Line(m))",
      "Equals(MeasureOf(Angle(1)),105)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(6)))] if [Parallel(Line(l),Line(m))] and [Equals(MeasureOf(Angle(1)),105)].",
    "success": true
  },
  "1817": {
    "text_logic_forms": [
      "Find(RatioOf(TanOf(Angle(C))))"
    ],
    "output_text": "[Find(RatioOf(TanOf(Angle(C))))] to nearest hundredth.",
    "success": true
  },
  "1818": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1819": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1820": {
    "text_logic_forms": [
      "Find(LengthOf(Line(S,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(S,T)))].",
    "success": true
  },
  "1821": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(9)),75)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(9)),75)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "1822": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1823": {
    "text_logic_forms": [
      "Isosceles(Triangle(J,M,N))",
      "Equals(LengthOf(Line(J,M)),Line(M,N))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [Isosceles(Triangle(J,M,N))] with [Equals(LengthOf(Line(J,M)),Line(M,N))].",
    "success": true
  },
  "1824": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "1825": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1826": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram(A,B,C,D)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram(A,B,C,D)))].",
    "success": true
  },
  "1827": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))], [Find(x)].",
    "success": true
  },
  "1828": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "1829": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1830": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]?",
    "success": true
  },
  "1831": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1832": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(x)].",
    "success": true
  },
  "1833": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "1834": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(H)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(H)))].",
    "success": true
  },
  "1835": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))",
      "Equals(MeasureOf(Angle(A,G,F)),108)",
      "Equals(LengthOf(Line(G,F)),14)",
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(D,G)),4.5)",
      "Equals(LengthOf(Line(E,F)),8)",
      "Equals(LengthOf(Line(A,B)),26)",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))], [Equals(MeasureOf(Angle(A,G,F)),108)] [Equals(LengthOf(Line(G,F)),14)] [Equals(LengthOf(Line(A,D)),12)] [Equals(LengthOf(Line(D,G)),4.5)] [Equals(LengthOf(Line(E,F)),8)] and [Equals(LengthOf(Line(A,B)),26)] [Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "1836": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(C,D)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(C,D)))].",
    "success": true
  },
  "1837": {
    "text_logic_forms": [
      "Isosceles(Triangle(X,Y,Z))",
      "Find(LengthOf(Line(Y,Z)))"
    ],
    "output_text": "[Find(LengthOf(Line(Y,Z)))] of [Isosceles(Triangle(X,Y,Z))].",
    "success": true
  },
  "1838": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,C)))].",
    "success": true
  },
  "1839": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1840": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(W)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(W)))].",
    "success": true
  },
  "1841": {
    "text_logic_forms": [
      "Circle($)",
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))] formed by [Circle($)] and [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "1842": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(K,L))",
      "Equals(LengthOf(Line(K,N)),9)",
      "Equals(LengthOf(Line(L,N)),16)",
      "Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))",
      "Find(LengthOf(Line(K,M)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(K,L))], [Equals(LengthOf(Line(K,N)),9)] [Equals(LengthOf(Line(L,N)),16)] [Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))], [Find(LengthOf(Line(K,M)))].",
    "success": true
  },
  "1843": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. Round to nearest hundredth.",
    "success": true
  },
  "1844": {
    "text_logic_forms": [
      "Equilateral(Triangle(L,M,N))",
      "BisectsAngle(Line(M,P),Line(L,N))",
      "Find(x)"
    ],
    "output_text": "[Equilateral(Triangle(L,M,N))] and [BisectsAngle(Line(M,P),Line(L,N))]. [Find(x)].",
    "success": true
  },
  "1845": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),92)",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Equals(AreaOf(Shape(A)),92)].",
    "success": true
  },
  "1846": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(b)"
    ],
    "output_text": "[Find(b)] in [Parallelogram($)].",
    "success": true
  },
  "1847": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(LengthOf(Line(F,H)),Line(F,L))",
      "Equals(LengthOf(Line(F,K)),17)",
      "Find(LengthOf(Line(K,M)))"
    ],
    "output_text": "In [Circle(F)], [Equals(LengthOf(Line(F,H)),Line(F,L))] and [Equals(LengthOf(Line(F,K)),17)] [Find(LengthOf(Line(K,M)))].",
    "success": true
  },
  "1848": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1849": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(F)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(F)))].",
    "success": true
  },
  "1850": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "1851": {
    "text_logic_forms": [
      "Rectangle(W,X,Y,Z)",
      "Equals(MeasureOf(Angle(1)),30)",
      "Find(MeasureOf(Angle(12)))"
    ],
    "output_text": " [Rectangle(W,X,Y,Z)]. [Find(MeasureOf(Angle(12)))] if [Equals(MeasureOf(Angle(1)),30)].",
    "success": true
  },
  "1852": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(y)].",
    "success": true
  },
  "1853": {
    "text_logic_forms": [
      "Find(LengthOf(Line(C,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(C,B)))].",
    "success": true
  },
  "1854": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(J,H),Triangle(K,L,M))",
      "IsMidsegmentOf(Line(J,P),Triangle(K,L,M))",
      "IsMidsegmentOf(Line(P,H),Triangle(K,L,M))",
      "Find(x)"
    ],
    "output_text": "[IsMidsegmentOf(Line(J,H),Triangle(K,L,M))], [IsMidsegmentOf(Line(J,P),Triangle(K,L,M))], [IsMidsegmentOf(Line(P,H),Triangle(K,L,M))],. [Find(x)].",
    "success": true
  },
  "1855": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))].",
    "success": true
  },
  "1856": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram(T,R,V,W)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram(T,R,V,W)))].",
    "success": true
  },
  "1857": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1858": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1859": {
    "text_logic_forms": [
      "Find(RatioOf(CosOf(Angle(L))))"
    ],
    "output_text": "[Find(RatioOf(CosOf(Angle(L))))] to nearest hundredth.",
    "success": true
  },
  "1860": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))] to nearest tenth.",
    "success": true
  },
  "1861": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(MeasureOf(Angle(R,S,U)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R,S,U)))] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "1862": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(B,A,C)),40)",
      "Equals(MeasureOf(Angle(D,A,C)),40)",
      "Equals(LengthOf(Line(D,C)),10)",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(B,A,C)),40)] [Equals(MeasureOf(Angle(D,A,C)),40)] and [Equals(LengthOf(Line(D,C)),10)] [Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "1863": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1864": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))] to nearest tenth.",
    "success": true
  },
  "1865": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(A)),10)",
      "Equals(DiameterOf(Circle(B)),30)",
      "Equals(DiameterOf(Circle(C)),10)",
      "Equals(LengthOf(Line(A,Z)),Line(C,W))",
      "Equals(LengthOf(Line(C,W)),2)",
      "Find(LengthOf(Line(B,Y)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(A)),10)] [Equals(DiameterOf(Circle(B)),30)] [Equals(DiameterOf(Circle(C)),10)] [Find(LengthOf(Line(B,Y)))] if [Equals(LengthOf(Line(A,Z)),Line(C,W))] and [Equals(LengthOf(Line(C,W)),2)].",
    "success": true
  },
  "1866": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "1867": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1868": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]?",
    "success": true
  },
  "1869": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D,A,B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D,A,B)))].",
    "success": true
  },
  "1870": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1871": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(J,L)),27)",
      "Equals(LengthOf(Line(B,L)),9)",
      "Equals(LengthOf(Line(J,K)),18)",
      "Find(LengthOf(Line(J,A)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(J,L)),27)] [Equals(LengthOf(Line(B,L)),9)] and [Equals(LengthOf(Line(J,K)),18)] [Find(LengthOf(Line(J,A)))].",
    "success": true
  },
  "1872": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1873": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1874": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(J)),10)",
      "Equals(RadiusOf(Circle(K)),8)",
      "Equals(LengthOf(Line(B,C)),5.4)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(J)),10)] [Equals(RadiusOf(Circle(K)),8)] and [Equals(LengthOf(Line(B,C)),5.4)] [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "1875": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1876": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(E)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(E)))].",
    "success": true
  },
  "1877": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(G,H,I)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(G,H,I)))]?",
    "success": true
  },
  "1878": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,Q)",
      "Equals(LengthOf(Line(M,R)),Mul(Line(M,N),\\frac{1}{4}))",
      "Find(RatioOf(Line(M,S),Line(S,P)))"
    ],
    "output_text": "[Find(RatioOf(Line(M,S),Line(S,P)))], [Parallelogram(M,N,P,Q)] with [Equals(LengthOf(Line(M,R)),Mul(Line(M,N),\\frac{1}{4}))].",
    "success": true
  },
  "1879": {
    "text_logic_forms": [
      "Equilateral(Triangle(R,S,T))",
      "Equals(LengthOf(Line(R,S)),x+9)",
      "Equals(LengthOf(Line(S,T)),2x)",
      "Equals(LengthOf(Line(R,T)),3x-9)",
      "Find(LengthOf(Line(S,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(S,T)))] of [Equilateral(Triangle(R,S,T))] if [Equals(LengthOf(Line(R,S)),x+9)] [Equals(LengthOf(Line(S,T)),2x)] and [Equals(LengthOf(Line(R,T)),3x-9)].",
    "success": true
  },
  "1880": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1881": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest hundredth.",
    "success": true
  },
  "1882": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1883": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1884": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),50)",
      "Equals(MeasureOf(Angle(3)),60)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),50)] and [Equals(MeasureOf(Angle(3)),60)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1885": {
    "text_logic_forms": [
      "Find(DiameterOf(Circle(M)))"
    ],
    "output_text": "[Find(DiameterOf(Circle(M)))].",
    "success": true
  },
  "1886": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "1887": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1888": {
    "text_logic_forms": [
      "CircumscribedTo(Triangle(R,S,T),Circle($))",
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[CircumscribedTo(Triangle(R,S,T),Circle($))]. [Find(PerimeterOf(Triangle($)))]?",
    "success": true
  },
  "1889": {
    "text_logic_forms": [
      "CircumscribedTo(Rhombus(A,B,C,D),Circle(P))",
      "Equals(PerimeterOf(Rhombus(A,B,C,D)),32)",
      "Find(x)"
    ],
    "output_text": "[CircumscribedTo(Rhombus(A,B,C,D),Circle(P))], [Equals(PerimeterOf(Rhombus(A,B,C,D)),32)] [Find(x)].",
    "success": true
  },
  "1890": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(G,J,F)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(G,J,F)))].",
    "success": true
  },
  "1891": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(B,E)),24)",
      "Equals(LengthOf(Line(C,D)),32)",
      "Equals(LengthOf(Line(A,B)),33)",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,C)))] if [Equals(LengthOf(Line(B,E)),24)] [Equals(LengthOf(Line(C,D)),32)] and [Equals(LengthOf(Line(A,B)),33)].",
    "success": true
  },
  "1892": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(J,H),Triangle(K,L,M))",
      "Find(x)"
    ],
    "output_text": "[IsMidsegmentOf(Line(J,H),Triangle(K,L,M))]. [Find(x)].",
    "success": true
  },
  "1893": {
    "text_logic_forms": [
      "IsIncenterOf(Point(H),Triangle(A,B,C))",
      "Find(MeasureOf(Angle(D,H,G)))"
    ],
    "output_text": "[IsIncenterOf(Point(H),Triangle(A,B,C))]. [Find(MeasureOf(Angle(D,H,G)))].",
    "success": true
  },
  "1894": {
    "text_logic_forms": [
      "Similar(Triangle(A,B,C),Triangle(D,E,F))",
      "Equals(Line(B,G),AltitudeOf(Triangle(A,B,C)))",
      "Equals(Line(E,H),AltitudeOf(Triangle(D,E,F)))",
      "Equals(LengthOf(Line(B,G)),3)",
      "Equals(LengthOf(Line(B,F)),4)",
      "Equals(LengthOf(Line(F,C)),2)",
      "Equals(LengthOf(Line(C,E)),1)",
      "Find(LengthOf(Line(E,H)))"
    ],
    "output_text": "[Find(LengthOf(Line(E,H)))] if [Similar(Triangle(A,B,C),Triangle(D,E,F))], [Equals(Line(B,G),AltitudeOf(Triangle(A,B,C)))], [Equals(Line(E,H),AltitudeOf(Triangle(D,E,F)))], [Equals(LengthOf(Line(B,G)),3)] [Equals(LengthOf(Line(B,F)),4)] [Equals(LengthOf(Line(F,C)),2)] and [Equals(LengthOf(Line(C,E)),1)].",
    "success": true
  },
  "1895": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(19)),100+20x)",
      "Equals(MeasureOf(Angle(20)),20x)",
      "Find(MeasureOf(Angle(19)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(19)),100+20x)] [Equals(MeasureOf(Angle(20)),20x)] [Find(MeasureOf(Angle(19)))].",
    "success": true
  },
  "1896": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1897": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,C)),14)",
      "Equals(LengthOf(Line(B,C)),8)",
      "Equals(LengthOf(Line(A,D)),21)",
      "Find(LengthOf(Line(E,D)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,C)),14)] [Equals(LengthOf(Line(B,C)),8)] and [Equals(LengthOf(Line(A,D)),21)] [Find(LengthOf(Line(E,D)))].",
    "success": true
  },
  "1898": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "1899": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),110)",
      "Equals(MeasureOf(Angle(12)),55)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),110)] and [Equals(MeasureOf(Angle(12)),55)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "1900": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(R,P)),3.5)",
      "Equals(LengthOf(Line(J,P)),9)",
      "Find(LengthOf(Line(P,L)))"
    ],
    "output_text": "[Equals(LengthOf(Line(R,P)),3.5)] and [Equals(LengthOf(Line(J,P)),9)] [Find(LengthOf(Line(P,L)))].",
    "success": true
  },
  "1901": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1902": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1903": {
    "text_logic_forms": [
      "Quadrilateral(A,B,C,D)",
      "Square(E,F,G,H)",
      "Find(AreaOf(Quadrilateral(A,B,C,D)))"
    ],
    "output_text": ", vertices of [Quadrilateral(A,B,C,D)] intersect [Square(E,F,G,H)] and divide sides into segments with measure have a ratio of 1:2. [Find(AreaOf(Quadrilateral(A,B,C,D)))].",
    "success": false
  },
  "1904": {
    "text_logic_forms": [
      "IsIncenterOf(Point(H),Triangle(A,B,C))",
      "Find(LengthOf(Line(B,D)))"
    ],
    "output_text": "[IsIncenterOf(Point(H),Triangle(A,B,C))]. [Find(LengthOf(Line(B,D)))].",
    "success": true
  },
  "1905": {
    "text_logic_forms": [
      "Rectangle(E,F,G,H)",
      "Equals(MeasureOf(Angle(F,E,G)),57)",
      "Find(MeasureOf(Angle(G,E,H)))"
    ],
    "output_text": " [Rectangle(E,F,G,H)]. If [Equals(MeasureOf(Angle(F,E,G)),57)] [Find(MeasureOf(Angle(G,E,H)))].",
    "success": true
  },
  "1906": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "1907": {
    "text_logic_forms": [
      "Parallelogram(N,Q,R,M)",
      "Find(LengthOf(Line(Q,R)))"
    ],
    "output_text": "Use [Parallelogram(N,Q,R,M)] to [Find(LengthOf(Line(Q,R)))].",
    "success": true
  },
  "1908": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1909": {
    "text_logic_forms": [
      "Find(RatioOf(MeasureOf(Angle(A,C,B)),MeasureOf(Angle(A,O,B))))"
    ],
    "output_text": "[Find(RatioOf(MeasureOf(Angle(A,C,B)),MeasureOf(Angle(A,O,B))))]?",
    "success": true
  },
  "1910": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Find(y)"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. [Find(y)].",
    "success": true
  },
  "1911": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(a)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(a)].",
    "success": true
  },
  "1912": {
    "text_logic_forms": [
      "Similar(Triangle(Q,R,S),Triangle(Q,T,P))",
      "Find(PerimeterOf(Triangle(Q,R,S)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(Q,R,S)))] if [Similar(Triangle(Q,R,S),Triangle(Q,T,P))].",
    "success": true
  },
  "1913": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1914": {
    "text_logic_forms": [
      "Find(AreaOf(Sector($)))"
    ],
    "output_text": "[Find(AreaOf(Sector($)))]. Round to nearest tenth.",
    "success": true
  },
  "1915": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))].",
    "success": true
  },
  "1916": {
    "text_logic_forms": [
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "1917": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(W)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(W)))].",
    "success": true
  },
  "1918": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1919": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(S,T)),18)",
      "Equals(RadiusOf(Circle(P)),5)",
      "Find(PerimeterOf(Polygon($)))"
    ],
    "output_text": "[Find(PerimeterOf(Polygon($)))] for. [Equals(LengthOf(Line(S,T)),18)] [Equals(RadiusOf(Circle(P)),5)].",
    "success": true
  },
  "1920": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "1921": {
    "text_logic_forms": [
      "Circle(D)",
      "Equals(LengthOf(Line(D,E)),Line(E,C))",
      "Equals(LengthOf(Line(C,F)),60)",
      "Perpendicular(Line(D,E),Line(E,C))",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "In [Circle(D)], [Equals(LengthOf(Line(D,E)),Line(E,C))], [Equals(LengthOf(Line(C,F)),60)] and [Perpendicular(Line(D,E),Line(E,C))]. [Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "1922": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1923": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(G,K)),Line(G,H))",
      "Equals(LengthOf(Line(H,K)),Line(K,J))",
      "Equals(MeasureOf(Angle(H,G,K)),42)",
      "Find(MeasureOf(Angle(H,J,K)))"
    ],
    "output_text": ", [Equals(LengthOf(Line(G,K)),Line(G,H))] and [Equals(LengthOf(Line(H,K)),Line(K,J))]. If [Equals(MeasureOf(Angle(H,G,K)),42)] [Find(MeasureOf(Angle(H,J,K)))].",
    "success": true
  },
  "1924": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "1925": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(P,T)),y-3)",
      "Equals(LengthOf(Line(P,S)),y+2)",
      "Equals(LengthOf(Line(R,S)),12)",
      "Equals(LengthOf(Line(Q,S)),16)",
      "Find(y)"
    ],
    "output_text": "If [Equals(LengthOf(Line(P,T)),y-3)] [Equals(LengthOf(Line(P,S)),y+2)] [Equals(LengthOf(Line(R,S)),12)] and [Equals(LengthOf(Line(Q,S)),16)] [Find(y)].",
    "success": true
  },
  "1926": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "1927": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),43)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),43)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "1928": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1929": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1930": {
    "text_logic_forms": [
      "Parallel(Line(a),Line(b))",
      "Parallel(Line(c),Line(d))",
      "Equals(MeasureOf(Angle(4)),57)",
      "Find(MeasureOf(Angle(10)))"
    ],
    "output_text": ", [Parallel(Line(a),Line(b))], [Parallel(Line(c),Line(d))] and [Equals(MeasureOf(Angle(4)),57)] [Find(MeasureOf(Angle(10)))].",
    "success": true
  },
  "1931": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(U,J)),9)",
      "Equals(LengthOf(Line(V,J)),3)",
      "Equals(LengthOf(Line(Z,T)),18)",
      "Find(LengthOf(Line(Y,J)))"
    ],
    "output_text": "[Equals(LengthOf(Line(U,J)),9)] [Equals(LengthOf(Line(V,J)),3)] and [Equals(LengthOf(Line(Z,T)),18)] [Find(LengthOf(Line(Y,J)))].",
    "success": true
  },
  "1932": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1933": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1934": {
    "text_logic_forms": [
      "Similar(Pentagon(A,B,C,D,E),Pentagon(P,Q,R,S,T))",
      "Find(PerimeterOf(Pentagon(P,Q,R,S,T)))"
    ],
    "output_text": "If [Similar(Pentagon(A,B,C,D,E),Pentagon(P,Q,R,S,T))], [Find(PerimeterOf(Pentagon(P,Q,R,S,T)))].",
    "success": true
  },
  "1935": {
    "text_logic_forms": [
      "Parallel(Line(K,H),Line(J,I))",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "If [Parallel(Line(K,H),Line(J,I))], [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "1936": {
    "text_logic_forms": [
      "Rhombus(L,M,P,Q)",
      "Equals(MeasureOf(Angle(Q,L,M)),2x^{2}-10)",
      "Equals(MeasureOf(Angle(Q,P,M)),8x)",
      "Equals(LengthOf(Line(M,P)),10)",
      "Find(LengthOf(Line(Q,L)))"
    ],
    "output_text": "In [Rhombus(L,M,P,Q)], [Equals(MeasureOf(Angle(Q,L,M)),2x^{2}-10)] [Equals(MeasureOf(Angle(Q,P,M)),8x)] and [Equals(LengthOf(Line(M,P)),10)] [Find(LengthOf(Line(Q,L)))].",
    "success": true
  },
  "1937": {
    "text_logic_forms": [
      "Find(LengthOf(Line(D,F)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,F)))].",
    "success": true
  },
  "1938": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(F,B,C)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(F,B,C)))].",
    "success": true
  },
  "1939": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))] to nearest tenth.",
    "success": true
  },
  "1940": {
    "text_logic_forms": [
      "Equals(c,8)",
      "Find(b)"
    ],
    "output_text": "If [Equals(c,8)] [Find(b)].",
    "success": true
  },
  "1941": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] and so [Parallelogram($)]",
    "success": true
  },
  "1942": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1943": {
    "text_logic_forms": [
      "Equals(x,7\\sqrt{3})",
      "Find(a)"
    ],
    "output_text": "If [Equals(x,7\\sqrt{3})] [Find(a)].",
    "success": true
  },
  "1944": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] in [Parallelogram($)].",
    "success": true
  },
  "1945": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Z)))].",
    "success": true
  },
  "1946": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "1947": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round angle measure to nearest degree.",
    "success": true
  },
  "1948": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(y)].",
    "success": true
  },
  "1949": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))].",
    "success": true
  },
  "1950": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "1951": {
    "text_logic_forms": [
      "InscribedIn(Regular(Polygon($)),Circle($))",
      "Find(MeasureOf(Angle($)))"
    ],
    "output_text": ", [InscribedIn(Regular(Polygon($)),Circle($))]. [Find(MeasureOf(Angle($)))].",
    "success": true
  },
  "1952": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1953": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "1954": {
    "text_logic_forms": [
      "Equals(SumOf(MeasureOf(Angle(6)),MeasureOf(Angle(6))),90)",
      "Equals(MeasureOf(Angle(8)),47)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": "[Equals(SumOf(MeasureOf(Angle(6)),MeasureOf(Angle(6))),90)], [Equals(MeasureOf(Angle(8)),47)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "1955": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(y)"
    ],
    "output_text": "two [Similar(Polygon($1),Polygon($2))]. Then, [Find(y)].",
    "success": true
  },
  "1956": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1957": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1958": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1959": {
    "text_logic_forms": [
      "Equals(AreaOf(Circle($)),20\\pi)",
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[Equals(AreaOf(Circle($)),20\\pi)] [Find(CircumferenceOf(Circle($)))]?",
    "success": true
  },
  "1960": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(P,M)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(P,M)))].",
    "success": true
  },
  "1961": {
    "text_logic_forms": [
      "Tangent(Line(P,Q),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line(P,Q),Circle($))]. [Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "1962": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "1963": {
    "text_logic_forms": [
      "Square(A,B,C,D)",
      "Triangle(A,D,E)",
      "Equals(MeasureOf(Angle(E,A,D)),30)",
      "Equals(LengthOf(Line(A,E)),4\\sqrt{3})",
      "Find(AreaOf(Square(A,B,C,D)))"
    ],
    "output_text": ",, [Square(A,B,C,D)] is attached to [Triangle(A,D,E)]. If [Equals(MeasureOf(Angle(E,A,D)),30)] and [Equals(LengthOf(Line(A,E)),4\\sqrt{3})] [Find(AreaOf(Square(A,B,C,D)))]?",
    "success": false
  },
  "1964": {
    "text_logic_forms": [
      "Find(AreaOf(Trapezoid($)))"
    ],
    "output_text": "[Find(AreaOf(Trapezoid($)))].",
    "success": true
  },
  "1965": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1966": {
    "text_logic_forms": [
      "Similar(Triangle(C,B,H),Triangle(F,E,H))",
      "Parallelogram(A,D,E,G)",
      "Equals(LengthOf(Line(C,H)),7)",
      "Equals(LengthOf(Line(F,H)),10)",
      "Equals(LengthOf(Line(F,E)),11)",
      "Equals(LengthOf(Line(E,H)),6)",
      "Find(PerimeterOf(Triangle(C,B,H)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(C,B,H)))], if [Similar(Triangle(C,B,H),Triangle(F,E,H))], [Parallelogram(A,D,E,G)], [Equals(LengthOf(Line(C,H)),7)] [Equals(LengthOf(Line(F,H)),10)] [Equals(LengthOf(Line(F,E)),11)] and [Equals(LengthOf(Line(E,H)),6)] Rounded to nearest tenth.",
    "success": true
  },
  "1967": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "1968": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(P,Q)),12)",
      "Equals(LengthOf(Line(Q,R)),2)",
      "Equals(LengthOf(Line(T,S)),3)",
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,S)))] if [Equals(LengthOf(Line(P,Q)),12)] [Equals(LengthOf(Line(Q,R)),2)] and [Equals(LengthOf(Line(T,S)),3)].",
    "success": true
  },
  "1969": {
    "text_logic_forms": [
      "Isosceles(Trapezoid(T,W,Y,Z))",
      "Equals(Angle(Z),Angle(Y))",
      "Equals(MeasureOf(Angle(Z)),30x)",
      "Equals(Angle(T),Angle(W))",
      "Equals(MeasureOf(Angle(T)),20x)",
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Isosceles(Trapezoid(T,W,Y,Z))] with [Equals(Angle(Z),Angle(Y))], [Equals(MeasureOf(Angle(Z)),30x)] [Equals(Angle(T),Angle(W))] and [Equals(MeasureOf(Angle(T)),20x)] [Find(MeasureOf(Angle(T)))].",
    "success": true
  },
  "1970": {
    "text_logic_forms": [
      "IsAltitudeOf(Line(A,B),Shape($))",
      "IsAltitudeOf(Line(J,K),Shape($))",
      "Similar(Triangle(D,A,C),Triangle(M,J,L))",
      "Equals(LengthOf(Line(A,B)),9)",
      "Equals(LengthOf(Line(A,D)),4x-8)",
      "Equals(LengthOf(Line(J,K)),21)",
      "Equals(LengthOf(Line(J,M)),5x+3)",
      "Find(x)"
    ],
    "output_text": "If [IsAltitudeOf(Line(A,B),Shape($))], [IsAltitudeOf(Line(J,K),Shape($))], [Similar(Triangle(D,A,C),Triangle(M,J,L))], [Equals(LengthOf(Line(A,B)),9)] [Equals(LengthOf(Line(A,D)),4x-8)] [Equals(LengthOf(Line(J,K)),21)] and [Equals(LengthOf(Line(J,M)),5x+3)] [Find(x)].",
    "success": true
  },
  "1971": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Circle(T)))"
    ],
    "output_text": "[Find(CircumferenceOf(Circle(T)))]? Round to nearest tenth.",
    "success": true
  },
  "1972": {
    "text_logic_forms": [
      "Find(LengthOf(Arc(Z,Y)))"
    ],
    "output_text": "[Find(LengthOf(Arc(Z,Y)))]. Round to nearest hundredth.",
    "success": true
  },
  "1973": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "1974": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1975": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1976": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "1977": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(A,C)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(A,C)))].",
    "success": true
  },
  "1978": {
    "text_logic_forms": [
      "Kite(C,D,F,G)",
      "Find(MeasureOf(Angle(D)))"
    ],
    "output_text": "If [Kite(C,D,F,G)], [Find(MeasureOf(Angle(D)))].",
    "success": true
  },
  "1979": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,T)))].",
    "success": true
  },
  "1980": {
    "text_logic_forms": [
      "Parallelogram(N,Q,R,M)",
      "Find(x)"
    ],
    "output_text": "Use [Parallelogram(N,Q,R,M)] to [Find(x)].",
    "success": true
  },
  "1981": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "1982": {
    "text_logic_forms": [
      "Parallel(Line(B,C),Line(D,F))",
      "Equals(LengthOf(Line(A,C)),15)",
      "Equals(LengthOf(Line(B,D)),3x-2)",
      "Equals(LengthOf(Line(C,F)),3x+2)",
      "Equals(LengthOf(Line(A,B)),12)",
      "Find(x)"
    ],
    "output_text": "[Parallel(Line(B,C),Line(D,F))]. [Equals(LengthOf(Line(A,C)),15)] [Equals(LengthOf(Line(B,D)),3x-2)] [Equals(LengthOf(Line(C,F)),3x+2)] and [Equals(LengthOf(Line(A,B)),12)] [Find(x)].",
    "success": true
  },
  "1983": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "1984": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1985": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "1986": {
    "text_logic_forms": [
      "Rectangle(A,B,D,C)",
      "Equals(MeasureOf(Angle(1)),38)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": " [Rectangle(A,B,D,C)]. [Find(MeasureOf(Angle(5)))] if [Equals(MeasureOf(Angle(1)),38)].",
    "success": true
  },
  "1987": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(G,H)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(G,H)))].",
    "success": true
  },
  "1988": {
    "text_logic_forms": [
      "Triangle(J,L,P)",
      "Equals(MeasureOf(Angle(J,M,P)),3x-6)",
      "Equals(LengthOf(Line(J,K)),3y-2)",
      "Equals(LengthOf(Line(L,K)),5y-8)",
      "Equals(Line(J,M),AltitudeOf(Triangle(J,L,P)))",
      "Find(x)"
    ],
    "output_text": "In [Triangle(J,L,P)], [Equals(MeasureOf(Angle(J,M,P)),3x-6)] [Equals(LengthOf(Line(J,K)),3y-2)] and [Equals(LengthOf(Line(L,K)),5y-8)] If [Equals(Line(J,M),AltitudeOf(Triangle(J,L,P)))], [Find(x)].",
    "success": true
  },
  "1989": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Z)))].",
    "success": true
  },
  "1990": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "1991": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round angle measure to nearest degree.",
    "success": true
  },
  "1992": {
    "text_logic_forms": [
      "IsIncenterOf(Point(P),Angle(X,Y,Z))",
      "Find(MeasureOf(Angle(L,Z,P)))"
    ],
    "output_text": "[IsIncenterOf(Point(P),Angle(X,Y,Z))]. [Find(MeasureOf(Angle(L,Z,P)))].",
    "success": true
  },
  "1993": {
    "text_logic_forms": [
      "Quadrilateral(P,Q,R,S)",
      "Equals(LengthOf(Line(P,Q)),721)",
      "Equals(LengthOf(Line(Q,R)),547)",
      "Equals(LengthOf(Line(R,S)),593)",
      "Equals(LengthOf(Line(P,S)),756)",
      "Equals(MeasureOf(Angle(P)),58)",
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "In [Quadrilateral(P,Q,R,S)], [Equals(LengthOf(Line(P,Q)),721)] [Equals(LengthOf(Line(Q,R)),547)] [Equals(LengthOf(Line(R,S)),593)] [Equals(LengthOf(Line(P,S)),756)] and [Equals(MeasureOf(Angle(P)),58)] [Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "1994": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(R,P)),3.5)",
      "Equals(LengthOf(Line(J,P)),9)",
      "Find(LengthOf(Line(P,S)))"
    ],
    "output_text": "[Equals(LengthOf(Line(R,P)),3.5)] and [Equals(LengthOf(Line(J,P)),9)] [Find(LengthOf(Line(P,S)))].",
    "success": true
  },
  "1995": {
    "text_logic_forms": [
      "Circle(Z)",
      "Equals(LengthOf(Line(P,Z)),Line(Z,Q))",
      "Equals(LengthOf(Line(X,Y)),4a-5)",
      "Equals(LengthOf(Line(S,T)),-5a+13)",
      "Find(LengthOf(Line(S,Q)))"
    ],
    "output_text": "In [Circle(Z)], [Equals(LengthOf(Line(P,Z)),Line(Z,Q))], [Equals(LengthOf(Line(X,Y)),4a-5)] and [Equals(LengthOf(Line(S,T)),-5a+13)] [Find(LengthOf(Line(S,Q)))].",
    "success": true
  },
  "1996": {
    "text_logic_forms": [
      "Find(h)"
    ],
    "output_text": "[Find(h)].",
    "success": true
  },
  "1997": {
    "text_logic_forms": [
      "Find(AreaOf(Sector($)))"
    ],
    "output_text": "[Find(AreaOf(Sector($)))]. Round to nearest tenth.",
    "success": true
  },
  "1998": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "1999": {
    "text_logic_forms": [
      "Isosceles(Trapezoid(A,B,C,D))",
      "IsMidpointOf(Point(X),LegOf(Isosceles(Trapezoid(A,B,C,D))))",
      "IsMidpointOf(Point(Y),LegOf(Isosceles(Trapezoid(A,B,C,D))))",
      "Equals(MeasureOf(Angle(A,D,Y)),78)",
      "Find(MeasureOf(Angle(X,B,C)))"
    ],
    "output_text": "[Isosceles(Trapezoid(A,B,C,D))], [IsMidpointOf(Point(X),LegOf(Isosceles(Trapezoid(A,B,C,D))))], [IsMidpointOf(Point(Y),LegOf(Isosceles(Trapezoid(A,B,C,D))))],. [Find(MeasureOf(Angle(X,B,C)))] if [Equals(MeasureOf(Angle(A,D,Y)),78)].",
    "success": true
  },
  "2000": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]?",
    "success": true
  },
  "2001": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(J,H)),114)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Equals(MeasureOf(Arc(J,H)),114)] [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2002": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2003": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2004": {
    "text_logic_forms": [
      "Find(AreaOf(Blue(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Blue(Shape($))))].",
    "success": true
  },
  "2005": {
    "text_logic_forms": [
      "Find(AreaOf(Rectangle(W,X,Y,Z)))"
    ],
    "output_text": "[Find(AreaOf(Rectangle(W,X,Y,Z)))]?",
    "success": true
  },
  "2006": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2007": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2008": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2009": {
    "text_logic_forms": [
      "Find(LengthOf(Line(Y,Z)))"
    ],
    "output_text": "[Find(LengthOf(Line(Y,Z)))].",
    "success": true
  },
  "2010": {
    "text_logic_forms": [
      "Equals(AreaOf(Rhombus(Q,R,S,T)),137.9)",
      "Equals(Line(R,T),12.2)",
      "Find(LengthOf(Line(Q,S)))"
    ],
    "output_text": "[Equals(AreaOf(Rhombus(Q,R,S,T)),137.9)] If [Equals(Line(R,T),12.2)] [Find(LengthOf(Line(Q,S)))].",
    "success": true
  },
  "2011": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2012": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2013": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2014": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2015": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,D)),8)",
      "Equals(LengthOf(Line(A,E)),12)",
      "Equals(LengthOf(Line(E,C)),18)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,D)),8)] [Equals(LengthOf(Line(A,E)),12)] and [Equals(LengthOf(Line(E,C)),18)] [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2016": {
    "text_logic_forms": [
      "Circle(S)",
      "Equals(MeasureOf(Angle(T,S,R)),42)",
      "Find(MeasureOf(Arc(K,T)))"
    ],
    "output_text": "In [Circle(S)], [Equals(MeasureOf(Angle(T,S,R)),42)] [Find(MeasureOf(Arc(K,T)))].",
    "success": true
  },
  "2017": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "2018": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2019": {
    "text_logic_forms": [
      "Circle(R)",
      "Equals(LengthOf(Line(S,U)),20)",
      "Equals(LengthOf(Line(Y,W)),20)",
      "Equals(MeasureOf(Arc(Y,X)),45)",
      "Find(MeasureOf(Arc(S,T)))"
    ],
    "output_text": "In [Circle(R)], [Equals(LengthOf(Line(S,U)),20)] [Equals(LengthOf(Line(Y,W)),20)] and [Equals(MeasureOf(Arc(Y,X)),45)] [Find(MeasureOf(Arc(S,T)))].",
    "success": true
  },
  "2020": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "2021": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2022": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2023": {
    "text_logic_forms": [
      "Find(LengthOf(Line(D,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,E)))].",
    "success": true
  },
  "2024": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(W)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(W)))].",
    "success": true
  },
  "2025": {
    "text_logic_forms": [
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Find(MeasureOf(Arc(A,C,B)))"
    ],
    "output_text": "[IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))]. [Find(MeasureOf(Arc(A,C,B)))].",
    "success": true
  },
  "2026": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(b)"
    ],
    "output_text": "[Find(b)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2027": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "2028": {
    "text_logic_forms": [
      "Find(RatioOf(TanOf(Angle(X))))"
    ],
    "output_text": "[Find(RatioOf(TanOf(Angle(X))))] to nearest hundredth.",
    "success": true
  },
  "2029": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2030": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2031": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2032": {
    "text_logic_forms": [
      "IsIncenterOf(Point(J),Angle(A,B,C))",
      "Find(LengthOf(Line(J,F)))"
    ],
    "output_text": "[IsIncenterOf(Point(J),Angle(A,B,C))]. [Find(LengthOf(Line(J,F)))].",
    "success": true
  },
  "2033": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2034": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(P)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(P)))].",
    "success": true
  },
  "2035": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "2036": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2037": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2038": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,B,C,D),Quadrilateral(Q,S,R,P))",
      "Find(x)"
    ],
    "output_text": "[Similar(Quadrilateral(A,B,C,D),Quadrilateral(Q,S,R,P))]. [Find(x)].",
    "success": true
  },
  "2039": {
    "text_logic_forms": [
      "IsPerpendicularBisectorOf(Line(W,P),Line($))",
      "Equals(MeasureOf(Angle(W,H,A)),8q+17)",
      "Equals(MeasureOf(Angle(H,W,P)),10+q)",
      "Equals(LengthOf(Line(A,P)),6r+4)",
      "Equals(LengthOf(Line(P,H)),22+3r)",
      "Find(MeasureOf(Angle(H,W,P)))"
    ],
    "output_text": "If [IsPerpendicularBisectorOf(Line(W,P),Line($))], [Equals(MeasureOf(Angle(W,H,A)),8q+17)] [Equals(MeasureOf(Angle(H,W,P)),10+q)] [Equals(LengthOf(Line(A,P)),6r+4)] and [Equals(LengthOf(Line(P,H)),22+3r)] [Find(MeasureOf(Angle(H,W,P)))].",
    "success": true
  },
  "2040": {
    "text_logic_forms": [
      "Find(LengthOf(Line(K,L)))"
    ],
    "output_text": "[Find(LengthOf(Line(K,L)))].",
    "success": true
  },
  "2041": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2042": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "2043": {
    "text_logic_forms": [
      "Parallel(Line(a),Line(b))",
      "Parallel(Line(c),Line(d))",
      "Equals(MeasureOf(Angle(4)),57)",
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": ", [Parallel(Line(a),Line(b))], [Parallel(Line(c),Line(d))] and [Equals(MeasureOf(Angle(4)),57)] [Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "2044": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2045": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2046": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2047": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(x)].",
    "success": true
  },
  "2048": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "2049": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2050": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2051": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2052": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "2053": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth.",
    "success": true
  },
  "2054": {
    "text_logic_forms": [
      "CircumscribedTo(Triangle(A,D,C),Circle(O))",
      "Equals(LengthOf(Line(E,C)),Add(Line(D,E),Line(A,F)))",
      "Find(PerimeterOf(Triangle(A,D,C)))"
    ],
    "output_text": "[CircumscribedTo(Triangle(A,D,C),Circle(O))]. [Find(PerimeterOf(Triangle(A,D,C)))] if [Equals(LengthOf(Line(E,C)),Add(Line(D,E),Line(A,F)))].",
    "success": true
  },
  "2055": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "2056": {
    "text_logic_forms": [
      "Trapezoid(D,E,G,H)",
      "IsMidpointOf(Point(X),LegOf(Trapezoid(D,E,G,H)))",
      "IsMidpointOf(Point(Y),LegOf(Trapezoid(D,E,G,H)))",
      "Find(LengthOf(Line(D,E)))"
    ],
    "output_text": "[Trapezoid(D,E,G,H)], [IsMidpointOf(Point(X),LegOf(Trapezoid(D,E,G,H)))], [IsMidpointOf(Point(Y),LegOf(Trapezoid(D,E,G,H)))],. [Find(LengthOf(Line(D,E)))].",
    "success": true
  },
  "2057": {
    "text_logic_forms": [
      "Find(AreaOf(Trapezoid($)))"
    ],
    "output_text": "[Find(AreaOf(Trapezoid($)))].",
    "success": true
  },
  "2058": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2059": {
    "text_logic_forms": [
      "Trapezoid(Q,R,S,T)",
      "IsMidpointOf(Point(M),LegOf(Trapezoid(Q,R,S,T)))",
      "IsMidpointOf(Point(P),LegOf(Trapezoid(Q,R,S,T)))",
      "Equals(LengthOf(Line(P,M)),2x)",
      "Equals(LengthOf(Line(Q,R)),3x)",
      "Equals(LengthOf(Line(T,S)),10)",
      "Find(LengthOf(Line(P,M)))"
    ],
    "output_text": "[Trapezoid(Q,R,S,T)], [IsMidpointOf(Point(M),LegOf(Trapezoid(Q,R,S,T)))], [IsMidpointOf(Point(P),LegOf(Trapezoid(Q,R,S,T)))],. If [Equals(LengthOf(Line(P,M)),2x)] [Equals(LengthOf(Line(Q,R)),3x)] and [Equals(LengthOf(Line(T,S)),10)] [Find(LengthOf(Line(P,M)))].",
    "success": true
  },
  "2060": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Z)))] to nearest tenth.",
    "success": true
  },
  "2061": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(K)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(K)))].",
    "success": true
  },
  "2062": {
    "text_logic_forms": [
      "Find(h)"
    ],
    "output_text": "[Find(h)].",
    "success": true
  },
  "2063": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2064": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))].",
    "success": true
  },
  "2065": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))] in [Isosceles(Triangle(A,B,C))].",
    "success": true
  },
  "2066": {
    "text_logic_forms": [
      "IntersectAt(Parallelogram(A,B,C,D),Line(B,D),Line(A,C),Point(E))",
      "Equals(LengthOf(Line(A,E)),9)",
      "Equals(LengthOf(Line(B,E)),3x-7)",
      "Equals(LengthOf(Line(D,E)),x+5)",
      "Find(x)"
    ],
    "output_text": "In [IntersectAt(Parallelogram(A,B,C,D),Line(B,D),Line(A,C),Point(E))]. If [Equals(LengthOf(Line(A,E)),9)] [Equals(LengthOf(Line(B,E)),3x-7)] and [Equals(LengthOf(Line(D,E)),x+5)] [Find(x)].",
    "success": true
  },
  "2067": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(1)),2x+20)",
      "Equals(MeasureOf(Angle(2)),5x-4)",
      "Equals(LengthOf(Line(A,C)),15)",
      "Equals(MeasureOf(Angle(3)),y^{2}+26)",
      "Find(x)"
    ],
    "output_text": "Use [Rhombus(A,B,C,D)] with [Equals(MeasureOf(Angle(1)),2x+20)] [Equals(MeasureOf(Angle(2)),5x-4)] [Equals(LengthOf(Line(A,C)),15)] and [Equals(MeasureOf(Angle(3)),y^{2}+26)] [Find(x)].",
    "success": true
  },
  "2068": {
    "text_logic_forms": [
      "Find(LengthOf(Line(V,W)))"
    ],
    "output_text": "[Find(LengthOf(Line(V,W)))].",
    "success": true
  },
  "2069": {
    "text_logic_forms": [
      "Find(RadiusOf(Circle(K)))"
    ],
    "output_text": "[Find(RadiusOf(Circle(K)))]. Round to nearest hundredth.",
    "success": true
  },
  "2070": {
    "text_logic_forms": [
      "Find(LengthOf(Line(X,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,T)))].",
    "success": true
  },
  "2071": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Q)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Q)))].",
    "success": true
  },
  "2072": {
    "text_logic_forms": [
      "Equilateral(Triangle(F,G,H))",
      "Triangle($)",
      "Find(LengthOf(Line(H,G)))"
    ],
    "output_text": "[Equilateral(Triangle(F,G,H))] [Triangle($)]. [Find(LengthOf(Line(H,G)))].",
    "success": true
  },
  "2073": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2074": {
    "text_logic_forms": [
      "IsDiameterOf(Line(A,B),Circle($))",
      "Equals(LengthOf(Line(A,C)),8)",
      "Equals(LengthOf(Line(B,C)),15)",
      "Find(DiameterOf(Circle($)))"
    ],
    "output_text": "[IsDiameterOf(Line(A,B),Circle($))], [Equals(LengthOf(Line(A,C)),8)] and [Equals(LengthOf(Line(B,C)),15)] [Find(DiameterOf(Circle($)))].",
    "success": true
  },
  "2075": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] in [Parallelogram($)].",
    "success": true
  },
  "2076": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2077": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2078": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(F,E)),118)",
      "Equals(MeasureOf(Arc(A,B)),108)",
      "Equals(MeasureOf(Angle(E,G,B)),52)",
      "Equals(MeasureOf(Angle(E,F,B)),30)",
      "Find(MeasureOf(Arc(E,D,B)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(E,D,B)))] if [Equals(MeasureOf(Arc(F,E)),118)] [Equals(MeasureOf(Arc(A,B)),108)] [Equals(MeasureOf(Angle(E,G,B)),52)] and [Equals(MeasureOf(Angle(E,F,B)),30)].",
    "success": true
  },
  "2079": {
    "text_logic_forms": [
      "Circle(R)",
      "Equals(LengthOf(Line(S,U)),20)",
      "Equals(LengthOf(Line(Y,W)),20)",
      "Equals(MeasureOf(Arc(Y,X)),45)",
      "Find(MeasureOf(Arc(S,U)))"
    ],
    "output_text": "In [Circle(R)], [Equals(LengthOf(Line(S,U)),20)] [Equals(LengthOf(Line(Y,W)),20)] and [Equals(MeasureOf(Arc(Y,X)),45)] [Find(MeasureOf(Arc(S,U)))].",
    "success": true
  },
  "2080": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2081": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2082": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(D,G,F)),53)",
      "Equals(MeasureOf(Angle(A,G,C)),40)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))] if [Equals(MeasureOf(Angle(D,G,F)),53)] and [Equals(MeasureOf(Angle(A,G,C)),40)].",
    "success": true
  },
  "2083": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(R,Q)),Line(R,S))",
      "Equals(MeasureOf(Angle(R,Q,S)),75)",
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(R,Q)),Line(R,S))] and [Equals(MeasureOf(Angle(R,Q,S)),75)] [Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "2084": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2085": {
    "text_logic_forms": [
      "BisectsAngle(Line(R,S),Angle(V,R,U))",
      "Find(x)"
    ],
    "output_text": "[BisectsAngle(Line(R,S),Angle(V,R,U))]. [Find(x)].",
    "success": true
  },
  "2086": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2087": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))].",
    "success": true
  },
  "2088": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))].",
    "success": true
  },
  "2089": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A,G,D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,G,D)))].",
    "success": true
  },
  "2090": {
    "text_logic_forms": [
      "IsDiameterOf(Line(H,K),Circle(L))",
      "IsDiameterOf(Line(I,G),Circle(L))",
      "Find(MeasureOf(Arc(H,G,K)))"
    ],
    "output_text": "[IsDiameterOf(Line(H,K),Circle(L))], [IsDiameterOf(Line(I,G),Circle(L))]. [Find(MeasureOf(Arc(H,G,K)))].",
    "success": true
  },
  "2091": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),62)",
      "Equals(MeasureOf(Angle(14)),38)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(11)),62)] and [Equals(MeasureOf(Angle(14)),38)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "2092": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(J,H)),114)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Equals(MeasureOf(Arc(J,H)),114)] [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2093": {
    "text_logic_forms": [
      "Parallelogram(Q,R,S,T)",
      "Find(z)"
    ],
    "output_text": "If [Parallelogram(Q,R,S,T)]. [Find(z)].",
    "success": true
  },
  "2094": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Equals(LengthOf(Line(J,K)),2b+3)",
      "Equals(LengthOf(Line(J,M)),3a)",
      "Find(MeasureOf(Angle(J,M,L)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(MeasureOf(Angle(J,M,L)))] if [Equals(LengthOf(Line(J,K)),2b+3)] and [Equals(LengthOf(Line(J,M)),3a)].",
    "success": true
  },
  "2095": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(MeasureOf(Angle(D,F,A)),50)",
      "Perpendicular(Line(C,F),Line(F,B))",
      "Find(MeasureOf(Arc(C,B,E)))"
    ],
    "output_text": "In [Circle(F)], [Equals(MeasureOf(Angle(D,F,A)),50)] and [Perpendicular(Line(C,F),Line(F,B))]. [Find(MeasureOf(Arc(C,B,E)))].",
    "success": true
  },
  "2096": {
    "text_logic_forms": [
      "Congruent(Quadrilateral(B,C,D,E),Quadrilateral(R,S,T,U))",
      "Find(z)"
    ],
    "output_text": "[Congruent(Quadrilateral(B,C,D,E),Quadrilateral(R,S,T,U))]. [Find(z)].",
    "success": true
  },
  "2097": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(Z,Y,W)),2x-7)",
      "Equals(MeasureOf(Angle(W,Y,X)),2x+5)",
      "Find(MeasureOf(Angle(Z,Y,W)))"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(Z,Y,W)),2x-7)] and [Equals(MeasureOf(Angle(W,Y,X)),2x+5)] [Find(MeasureOf(Angle(Z,Y,W)))].",
    "success": true
  },
  "2098": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "2099": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2100": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2101": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))].",
    "success": true
  },
  "2102": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2103": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2104": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),62)",
      "Equals(MeasureOf(Angle(14)),38)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(11)),62)] and [Equals(MeasureOf(Angle(14)),38)] [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2105": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth?",
    "success": true
  },
  "2106": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Shape($)))"
    ],
    "output_text": "[Find(CircumferenceOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "2107": {
    "text_logic_forms": [
      "IsMedianOf(Line(N,Q),Shape($))",
      "IsMedianOf(Line(V,X),Shape($))",
      "Similar(Triangle(P,N,R),Triangle(W,V,Y))",
      "Equals(LengthOf(Line(N,Q)),8)",
      "Equals(LengthOf(Line(P,R)),12)",
      "Equals(LengthOf(Line(W,Y)),7x-1)",
      "Equals(LengthOf(Line(V,X)),4x+2)",
      "Find(x)"
    ],
    "output_text": "If [IsMedianOf(Line(N,Q),Shape($))], [IsMedianOf(Line(V,X),Shape($))], [Similar(Triangle(P,N,R),Triangle(W,V,Y))], [Equals(LengthOf(Line(N,Q)),8)] [Equals(LengthOf(Line(P,R)),12)] [Equals(LengthOf(Line(W,Y)),7x-1)] and [Equals(LengthOf(Line(V,X)),4x+2)] [Find(x)].",
    "success": true
  },
  "2108": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2109": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "2110": {
    "text_logic_forms": [
      "Find(PerimeterOf(Quadrilateral(A,B,C,D)))"
    ],
    "output_text": "[Find(PerimeterOf(Quadrilateral(A,B,C,D)))].",
    "success": true
  },
  "2111": {
    "text_logic_forms": [
      "Find(RatioOf(CosOf(Angle(A))))"
    ],
    "output_text": "[Find(RatioOf(CosOf(Angle(A))))] to nearest hundredth.",
    "success": true
  },
  "2112": {
    "text_logic_forms": [
      "Equals(PerimeterOf(Square(2)),200)",
      "Equals(PerimeterOf(Square(1)),150)",
      "Find(PerimeterOf(Square(3)))"
    ],
    "output_text": "If [Equals(PerimeterOf(Square(2)),200)] and [Equals(PerimeterOf(Square(1)),150)] [Find(PerimeterOf(Square(3)))]?",
    "success": true
  },
  "2113": {
    "text_logic_forms": [
      "Rhombus(L,M,P,Q)",
      "Equals(MeasureOf(Angle(Q,L,M)),2x^{2}-10)",
      "Equals(MeasureOf(Angle(Q,P,M)),8x)",
      "Equals(LengthOf(Line(M,P)),10)",
      "Find(MeasureOf(Angle(L,Q,P)))"
    ],
    "output_text": "In [Rhombus(L,M,P,Q)], [Equals(MeasureOf(Angle(Q,L,M)),2x^{2}-10)] [Equals(MeasureOf(Angle(Q,P,M)),8x)] and [Equals(LengthOf(Line(M,P)),10)] [Find(MeasureOf(Angle(L,Q,P)))].",
    "success": true
  },
  "2114": {
    "text_logic_forms": [
      "Find(LengthOf(Arc(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Arc(A,B)))]. Round to nearest hundredth.",
    "success": true
  },
  "2115": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2116": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(R,Q)),Line(R,S))",
      "Equals(LengthOf(Line(R,P)),Line(R,T))",
      "Equals(MeasureOf(Angle(R,Q,S)),80)",
      "Find(MeasureOf(Angle(P)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(R,Q)),Line(R,S))], [Equals(LengthOf(Line(R,P)),Line(R,T))] and [Equals(MeasureOf(Angle(R,Q,S)),80)] [Find(MeasureOf(Angle(P)))].",
    "success": true
  },
  "2117": {
    "text_logic_forms": [
      "IsChordOf(Line(A,B),Circle($))",
      "Circle(P)",
      "Perpendicular(Circle(Q),Line($))",
      "Equals(LengthOf(Line(A,B)),10)",
      "Find(LengthOf(Line(P,Q)))"
    ],
    "output_text": "common [IsChordOf(Line(A,B),Circle($))] between [Circle(P)] and [Perpendicular(Circle(Q),Line($))] connecting centers of circles. If [Equals(LengthOf(Line(A,B)),10)] [Find(LengthOf(Line(P,Q)))]?",
    "success": false
  },
  "2118": {
    "text_logic_forms": [
      "Find(PerimeterOf(Quadrilateral(A,B,C,D)))"
    ],
    "output_text": "[Find(PerimeterOf(Quadrilateral(A,B,C,D)))] to nearest tenth.",
    "success": true
  },
  "2119": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2120": {
    "text_logic_forms": [
      "Equilateral(Triangle(Q,R,S))",
      "Triangle($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [Equilateral(Triangle(Q,R,S))] [Triangle($)].",
    "success": true
  },
  "2121": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2122": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2123": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "2124": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(y)].",
    "success": true
  },
  "2125": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2126": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R,C,N)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R,C,N)))].",
    "success": true
  },
  "2127": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2128": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))].",
    "success": true
  },
  "2129": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "Equilateral(Triangle(D,C,E))",
      "Isosceles(Triangle(F,C,G))",
      "Equals(Angle(1),Angle(C))",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": ", [Isosceles(Triangle(A,B,C))], [Equilateral(Triangle(D,C,E))] and [Isosceles(Triangle(F,C,G))]. [Find(MeasureOf(Angle(1)))], [Equals(Angle(1),Angle(C))].",
    "success": true
  },
  "2130": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2131": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(J,A)),25)",
      "Equals(LengthOf(Line(A,K)),10)",
      "Equals(LengthOf(Line(B,L)),14)",
      "Find(LengthOf(Line(J,B)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(J,A)),25)] [Equals(LengthOf(Line(A,K)),10)] and [Equals(LengthOf(Line(B,L)),14)] [Find(LengthOf(Line(J,B)))].",
    "success": true
  },
  "2132": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(LengthOf(Line(P,R)),15)",
      "Equals(MeasureOf(Angle(Q,P,R)),120)",
      "Find(LengthOf(Arc(Q,R)))"
    ],
    "output_text": "In [Circle(P)], [Equals(LengthOf(Line(P,R)),15)] and [Equals(MeasureOf(Angle(Q,P,R)),120)] [Find(LengthOf(Arc(Q,R)))].",
    "success": true
  },
  "2133": {
    "text_logic_forms": [
      "Find(TanOf(Angle(S)))"
    ],
    "output_text": "[Find(TanOf(Angle(S)))].",
    "success": true
  },
  "2134": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2135": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "2136": {
    "text_logic_forms": [
      "Similar(Quadrilateral(B,E,F,A),Quadrilateral(E,D,C,B))",
      "Find(x)"
    ],
    "output_text": "If [Similar(Quadrilateral(B,E,F,A),Quadrilateral(E,D,C,B))], [Find(x)].",
    "success": true
  },
  "2137": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2138": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(D,G,F)),53)",
      "Equals(MeasureOf(Angle(A,G,C)),40)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))] if [Equals(MeasureOf(Angle(D,G,F)),53)] and [Equals(MeasureOf(Angle(A,G,C)),40)].",
    "success": true
  },
  "2139": {
    "text_logic_forms": [
      "Find(LengthOf(Line(D,H)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,H)))].",
    "success": true
  },
  "2140": {
    "text_logic_forms": [
      "IsIncenterOf(Point(Q),Triangle(J,K,L))",
      "Find(LengthOf(Line(Q,P)))"
    ],
    "output_text": "[IsIncenterOf(Point(Q),Triangle(J,K,L))]. [Find(LengthOf(Line(Q,P)))].",
    "success": true
  },
  "2141": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2142": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(LengthOf(Line(J,K)),10)",
      "Equals(Arc(J,K,L),134)",
      "Find(LengthOf(Line(P,Q)))"
    ],
    "output_text": "In [Circle(P)], [Equals(LengthOf(Line(J,K)),10)] and [Equals(Arc(J,K,L),134)] [Find(LengthOf(Line(P,Q)))]. Round to nearest hundredth.",
    "success": true
  },
  "2143": {
    "text_logic_forms": [
      "Find(LengthOf(Line(W,Y)))"
    ],
    "output_text": "[Find(LengthOf(Line(W,Y)))].",
    "success": true
  },
  "2144": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2145": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2146": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)]. Round to nearest tenth.",
    "success": true
  },
  "2147": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2148": {
    "text_logic_forms": [
      "Rhombus(W,X,Y,Z)",
      "Equals(MeasureOf(Angle(X,Y,Z)),110)",
      "Find(MeasureOf(Angle(Z,W,Y)))"
    ],
    "output_text": " [Rhombus(W,X,Y,Z)]. If [Equals(MeasureOf(Angle(X,Y,Z)),110)] [Find(MeasureOf(Angle(Z,W,Y)))].",
    "success": true
  },
  "2149": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(U,J)),9)",
      "Equals(LengthOf(Line(V,J)),3)",
      "Equals(LengthOf(Line(Z,T)),18)",
      "Find(LengthOf(Line(Y,U)))"
    ],
    "output_text": "[Equals(LengthOf(Line(U,J)),9)] [Equals(LengthOf(Line(V,J)),3)] and [Equals(LengthOf(Line(Z,T)),18)] [Find(LengthOf(Line(Y,U)))].",
    "success": true
  },
  "2150": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(x)].",
    "success": true
  },
  "2151": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. Round to nearest hundredth.",
    "success": true
  },
  "2152": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))",
      "Equals(MeasureOf(Angle(A,G,F)),108)",
      "Equals(LengthOf(Line(G,F)),14)",
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(D,G)),4.5)",
      "Equals(LengthOf(Line(E,F)),8)",
      "Equals(LengthOf(Line(A,B)),26)",
      "Find(RatioOf(PerimeterOf(Quadrilateral(A,B,C,D)),PerimeterOf(Quadrilateral(A,E,F,G))))"
    ],
    "output_text": "[Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))], [Equals(MeasureOf(Angle(A,G,F)),108)] [Equals(LengthOf(Line(G,F)),14)] [Equals(LengthOf(Line(A,D)),12)] [Equals(LengthOf(Line(D,G)),4.5)] [Equals(LengthOf(Line(E,F)),8)] and [Equals(LengthOf(Line(A,B)),26)] [Find(RatioOf(PerimeterOf(Quadrilateral(A,B,C,D)),PerimeterOf(Quadrilateral(A,E,F,G))))].",
    "success": true
  },
  "2153": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(G,H)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(G,H)))].",
    "success": true
  },
  "2154": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2155": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "2156": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))]?",
    "success": true
  },
  "2157": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Q)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Q)))].",
    "success": true
  },
  "2158": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(A,G)))"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(A,G)))].",
    "success": true
  },
  "2159": {
    "text_logic_forms": [
      "Find(LengthOf(Arc(B,C)))"
    ],
    "output_text": "[Find(LengthOf(Arc(B,C)))].",
    "success": true
  },
  "2160": {
    "text_logic_forms": [
      "Circle(G)",
      "Equals(MeasureOf(Angle(A,G,B)),30)",
      "Perpendicular(Line(C,G),Line(G,D))",
      "Find(MeasureOf(Arc(F,A,B)))"
    ],
    "output_text": "In [Circle(G)], [Equals(MeasureOf(Angle(A,G,B)),30)] and [Perpendicular(Line(C,G),Line(G,D))]. [Find(MeasureOf(Arc(F,A,B)))].",
    "success": true
  },
  "2161": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2162": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "2163": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "2164": {
    "text_logic_forms": [
      "Find(h)"
    ],
    "output_text": "[Find(h)].",
    "success": true
  },
  "2165": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2166": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2167": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),8)",
      "Equals(LengthOf(Line(K,L)),10)",
      "Equals(LengthOf(Line(J,B)),13)",
      "Find(LengthOf(Line(J,L)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,B)),8)] [Equals(LengthOf(Line(K,L)),10)] and [Equals(LengthOf(Line(J,B)),13)] [Find(LengthOf(Line(J,L)))].",
    "success": true
  },
  "2168": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "2169": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2170": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(LengthOf(Line(P,Q)),3)",
      "Find(MeasureOf(Arc(R,T,S)))"
    ],
    "output_text": "In [Circle(P)], [Equals(LengthOf(Line(P,Q)),3)] [Find(MeasureOf(Arc(R,T,S)))]. Round to nearest hundredth.",
    "success": true
  },
  "2171": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(R,S),Trapezoid(M,N,O,P))",
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "[IsMidsegmentOf(Line(R,S),Trapezoid(M,N,O,P))]. [Find(LengthOf(Line(R,S)))]?",
    "success": true
  },
  "2172": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2173": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2174": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "2175": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2176": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "2177": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2178": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2179": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "2180": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(G,I)),14)",
      "Equals(LengthOf(Line(G,H)),7)",
      "Equals(LengthOf(Line(K,J)),6)",
      "Find(LengthOf(Line(G,K)))"
    ],
    "output_text": "[Find(LengthOf(Line(G,K)))] if [Equals(LengthOf(Line(G,I)),14)] [Equals(LengthOf(Line(G,H)),7)] and [Equals(LengthOf(Line(K,J)),6)].",
    "success": true
  },
  "2181": {
    "text_logic_forms": [
      "Equals(AreaOf(Trapezoid(P,Q,R,S)),250)",
      "Find(HeightOf(Quadrilateral(P,Q,R,S)))"
    ],
    "output_text": "[Equals(AreaOf(Trapezoid(P,Q,R,S)),250)] [Find(HeightOf(Quadrilateral(P,Q,R,S)))].",
    "success": true
  },
  "2182": {
    "text_logic_forms": [
      "Tangent(Line(T,V),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line(T,V),Circle($))] and R and S are points on [Circle($)]. [Find(x)] to nearest tenth?",
    "success": false
  },
  "2183": {
    "text_logic_forms": [
      "Rectangle(Q,R,S,T)",
      "Equals(MeasureOf(Angle(Q,T,R)),2x^{2}-7)",
      "Equals(MeasureOf(Angle(S,R,T)),x^{2}+18)",
      "Find(MeasureOf(Angle(Q,T,R)))"
    ],
    "output_text": " [Rectangle(Q,R,S,T)]. If [Equals(MeasureOf(Angle(Q,T,R)),2x^{2}-7)] and [Equals(MeasureOf(Angle(S,R,T)),x^{2}+18)] [Find(MeasureOf(Angle(Q,T,R)))].",
    "success": true
  },
  "2184": {
    "text_logic_forms": [
      "Isosceles(Triangle(W,X,Y))",
      "Isosceles(Triangle(X,Y,Z))",
      "Equals(MeasureOf(Angle(X,Y,Z)),128)",
      "Find(MeasureOf(Angle(X,W,Y)))"
    ],
    "output_text": "[Isosceles(Triangle(W,X,Y))], [Isosceles(Triangle(X,Y,Z))] and [Equals(MeasureOf(Angle(X,Y,Z)),128)] [Find(MeasureOf(Angle(X,W,Y)))].",
    "success": true
  },
  "2185": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Z)))] to nearest tenth.",
    "success": true
  },
  "2186": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "2187": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(MeasureOf(Angle(1)),12x+4)",
      "Equals(MeasureOf(Angle(2)),16x-12)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. If [Equals(MeasureOf(Angle(1)),12x+4)] and [Equals(MeasureOf(Angle(2)),16x-12)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2188": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2189": {
    "text_logic_forms": [
      "Equals(a,8)",
      "Equals(b,15)",
      "Equals(c,17)",
      "Find(SinOf(Angle(B)))"
    ],
    "output_text": "[Equals(a,8)] [Equals(b,15)] and [Equals(c,17)] [Find(SinOf(Angle(B)))].",
    "success": true
  },
  "2190": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Pentagon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Pentagon($))))]?",
    "success": true
  },
  "2191": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2192": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2193": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2194": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "2195": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2196": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2197": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2198": {
    "text_logic_forms": [],
    "output_text": "Which statement about x is not true?",
    "success": false
  },
  "2199": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] in [Parallelogram($)].",
    "success": true
  },
  "2200": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),165)",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Equals(AreaOf(Shape(A)),165)].",
    "success": true
  },
  "2201": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),32)",
      "Equals(LengthOf(Line(F,C)),11)",
      "Find(LengthOf(Line(F,E)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,B)),32)] and [Equals(LengthOf(Line(F,C)),11)] [Find(LengthOf(Line(F,E)))].",
    "success": true
  },
  "2202": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "2203": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(MeasureOf(Angle(D,F,A)),50)",
      "Perpendicular(Line(C,F),Line(F,B))",
      "Find(MeasureOf(Arc(B,E)))"
    ],
    "output_text": "In [Circle(F)], [Equals(MeasureOf(Angle(D,F,A)),50)] and [Perpendicular(Line(C,F),Line(F,B))]. [Find(MeasureOf(Arc(B,E)))].",
    "success": true
  },
  "2204": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(LengthOf(Line(R,T)),15)",
      "Find(LengthOf(Arc(R,S)))"
    ],
    "output_text": "In [Circle(P)], [Equals(LengthOf(Line(R,T)),15)] [Find(LengthOf(Arc(R,S)))]. Round to nearest hundredth.",
    "success": true
  },
  "2205": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))].",
    "success": true
  },
  "2206": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2207": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2208": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2209": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2210": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2211": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2212": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Assume inscribed [Regular(Polygon($))].",
    "success": true
  },
  "2213": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2214": {
    "text_logic_forms": [
      "Tangent(Line(A,B),Circle($))",
      "Tangent(Line(B,C),Circle($))",
      "Tangent(Line(C,D),Circle($))",
      "Tangent(Line(A,D),Circle($))",
      "Equals(LengthOf(Line(A,B)),19)",
      "Equals(LengthOf(Line(B,C)),6)",
      "Equals(LengthOf(Line(C,D)),14)",
      "Find(LengthOf(Line(A,D)))"
    ],
    "output_text": "[Tangent(Line(A,B),Circle($))], [Tangent(Line(B,C),Circle($))], [Tangent(Line(C,D),Circle($))], [Tangent(Line(A,D),Circle($))]. If [Equals(LengthOf(Line(A,B)),19)] [Equals(LengthOf(Line(B,C)),6)] and [Equals(LengthOf(Line(C,D)),14)] [Find(LengthOf(Line(A,D)))].",
    "success": true
  },
  "2215": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(LengthOf(Line(P,D)),10)",
      "Equals(LengthOf(Line(P,Q)),10)",
      "Equals(LengthOf(Line(Q,E)),20)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "In [Circle(P)], [Equals(LengthOf(Line(P,D)),10)] [Equals(LengthOf(Line(P,Q)),10)] and [Equals(LengthOf(Line(Q,E)),20)] [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2216": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,S)))].",
    "success": true
  },
  "2217": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "2218": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2219": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2220": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),104)",
      "Equals(MeasureOf(Angle(14)),118)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(4)),104)] [Equals(MeasureOf(Angle(14)),118)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2221": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(B,C,D)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(B,C,D)))].",
    "success": true
  },
  "2222": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(A,C)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(A,C)))].",
    "success": true
  },
  "2223": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2224": {
    "text_logic_forms": [
      "Triangle(G,H,J)",
      "Equals(LengthOf(Line(H,P)),5x-16)",
      "Equals(LengthOf(Line(P,J)),3x+8)",
      "Equals(MeasureOf(Angle(G,J,N)),6y-3)",
      "Equals(MeasureOf(Angle(N,J,H)),4y+23)",
      "Equals(MeasureOf(Angle(H,M,G)),4z+14)",
      "IsMedianOf(Line(G,P),Triangle(G,H,J))",
      "Find(LengthOf(Line(H,J)))"
    ],
    "output_text": "In [Triangle(G,H,J)], [Equals(LengthOf(Line(H,P)),5x-16)] [Equals(LengthOf(Line(P,J)),3x+8)] [Equals(MeasureOf(Angle(G,J,N)),6y-3)] [Equals(MeasureOf(Angle(N,J,H)),4y+23)] and [Equals(MeasureOf(Angle(H,M,G)),4z+14)] [IsMedianOf(Line(G,P),Triangle(G,H,J))]. [Find(LengthOf(Line(H,J)))].",
    "success": true
  },
  "2225": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(LengthOf(Line(C,F)),14)",
      "Find(DiameterOf(Circle($)))"
    ],
    "output_text": "In [Circle(F)], if [Equals(LengthOf(Line(C,F)),14)] [Find(DiameterOf(Circle($)))]?",
    "success": true
  },
  "2226": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "2227": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2228": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2229": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2230": {
    "text_logic_forms": [
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "2231": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "2232": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2233": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(A)),10)",
      "Equals(DiameterOf(Circle(B)),20)",
      "Equals(DiameterOf(Circle(C)),14)",
      "Find(LengthOf(Line(X,B)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(A)),10)] [Equals(DiameterOf(Circle(B)),20)] [Equals(DiameterOf(Circle(C)),14)] [Find(LengthOf(Line(X,B)))].",
    "success": true
  },
  "2234": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2235": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "2236": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "2237": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(W,X))",
      "Equals(LengthOf(Line(W,X)),10)",
      "Equals(LengthOf(Line(X,Y)),6)",
      "Equals(LengthOf(Line(W,Y)),8)",
      "Equals(LengthOf(Line(R,Y)),5)",
      "Equals(LengthOf(Line(P,S)),3)",
      "Find(LengthOf(Line(P,Y)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(W,X))], [Equals(LengthOf(Line(W,X)),10)] [Equals(LengthOf(Line(X,Y)),6)] [Equals(LengthOf(Line(W,Y)),8)] [Equals(LengthOf(Line(R,Y)),5)] and [Equals(LengthOf(Line(P,S)),3)] [Find(LengthOf(Line(P,Y)))].",
    "success": true
  },
  "2238": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2239": {
    "text_logic_forms": [
      "Circle(Z)",
      "Equals(Angle(W,Z,X),Angle(X,Z,Y))",
      "Equals(MeasureOf(Angle(V,Z,U)),4x)",
      "Equals(MeasureOf(Angle(U,Z,Y)),2x+24)",
      "IsDiameterOf(Line(V,Y),Circle($))",
      "IsDiameterOf(Line(W,U),Circle($))",
      "Find(MeasureOf(Arc(W,U,Y)))"
    ],
    "output_text": "In [Circle(Z)], [Equals(Angle(W,Z,X),Angle(X,Z,Y))], [Equals(MeasureOf(Angle(V,Z,U)),4x)] [Equals(MeasureOf(Angle(U,Z,Y)),2x+24)] and [IsDiameterOf(Line(V,Y),Circle($))], [IsDiameterOf(Line(W,U),Circle($))]. [Find(MeasureOf(Arc(W,U,Y)))].",
    "success": true
  },
  "2240": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2241": {
    "text_logic_forms": [
      "UseTheorem(Pythagorean_Triple)",
      "Find(x)"
    ],
    "output_text": "[UseTheorem(Pythagorean_Triple)] to [Find(x)].",
    "success": true
  },
  "2242": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2243": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]? Round to nearest whole number if necessary.",
    "success": true
  },
  "2244": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Equals(LengthOf(Line(J,K)),2b+3)",
      "Equals(LengthOf(Line(J,M)),3a)",
      "Find(MeasureOf(Angle(M,J,K)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(MeasureOf(Angle(M,J,K)))] if [Equals(LengthOf(Line(J,K)),2b+3)] and [Equals(LengthOf(Line(J,M)),3a)].",
    "success": true
  },
  "2245": {
    "text_logic_forms": [
      "Find(LengthOf(Line(L,M)))"
    ],
    "output_text": "[Find(LengthOf(Line(L,M)))].",
    "success": true
  },
  "2246": {
    "text_logic_forms": [
      "Find(AreaOf(Rhombus($)))"
    ],
    "output_text": "[Find(AreaOf(Rhombus($)))].",
    "success": true
  },
  "2247": {
    "text_logic_forms": [
      "Isosceles(Trapezoid(X,Y,Z,W))",
      "Find(MeasureOf(Angle(W)))"
    ],
    "output_text": "For [Isosceles(Trapezoid(X,Y,Z,W))], [Find(MeasureOf(Angle(W)))].",
    "success": true
  },
  "2248": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(J,M)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(J,M)))].",
    "success": true
  },
  "2249": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2250": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2251": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(D,B)),2x-4)",
      "Equals(LengthOf(Line(P,B)),2x-9)",
      "Find(LengthOf(Line(P,D)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(D,B)),2x-4)] and [Equals(LengthOf(Line(P,B)),2x-9)] [Find(LengthOf(Line(P,D)))].",
    "success": true
  },
  "2252": {
    "text_logic_forms": [
      "Similar(Triangle(A,C,B),Triangle(E,G,F))",
      "Equals(Line(A,D),AltitudeOf(Triangle(A,C,B)))",
      "Equals(Line(E,H),AltitudeOf(Triangle(E,G,F)))",
      "Equals(LengthOf(Line(A,C)),17)",
      "Equals(LengthOf(Line(A,D)),15)",
      "Equals(LengthOf(Line(E,H)),7.5)",
      "Find(LengthOf(Line(E,G)))"
    ],
    "output_text": "[Find(LengthOf(Line(E,G)))] if [Similar(Triangle(A,C,B),Triangle(E,G,F))], [Equals(Line(A,D),AltitudeOf(Triangle(A,C,B)))], [Equals(Line(E,H),AltitudeOf(Triangle(E,G,F)))], [Equals(LengthOf(Line(A,C)),17)] [Equals(LengthOf(Line(A,D)),15)] and [Equals(LengthOf(Line(E,H)),7.5)].",
    "success": true
  },
  "2253": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))] to nearest tenth.",
    "success": true
  },
  "2254": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "2255": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2256": {
    "text_logic_forms": [
      "Isosceles(Trapezoid(T,W,Y,Z))",
      "Equals(Angle(Z),Angle(Y))",
      "Equals(MeasureOf(Angle(Z)),30x)",
      "Equals(Angle(T),Angle(W))",
      "Equals(MeasureOf(Angle(T)),20x)",
      "Find(MeasureOf(Angle(Y)))"
    ],
    "output_text": "[Isosceles(Trapezoid(T,W,Y,Z))] with [Equals(Angle(Z),Angle(Y))], [Equals(MeasureOf(Angle(Z)),30x)] [Equals(Angle(T),Angle(W))] and [Equals(MeasureOf(Angle(T)),20x)] [Find(MeasureOf(Angle(Y)))].",
    "success": true
  },
  "2257": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2258": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(MeasureOf(Angle(D,F,E)),36)",
      "Find(MeasureOf(Arc(E,A)))"
    ],
    "output_text": "In [Circle(F)], [Find(MeasureOf(Arc(E,A)))] if [Equals(MeasureOf(Angle(D,F,E)),36)]?",
    "success": true
  },
  "2259": {
    "text_logic_forms": [
      "Isosceles(Triangle(D,F,G))",
      "Isosceles(Triangle(F,G,H))",
      "Equals(MeasureOf(Angle(F,D,H)),28)",
      "Equals(LengthOf(Line(D,G)),Line(F,G))",
      "Equals(LengthOf(Line(F,G)),Line(F,H))",
      "Find(MeasureOf(Angle(D,G,F)))"
    ],
    "output_text": "[Isosceles(Triangle(D,F,G))], [Isosceles(Triangle(F,G,H))], [Equals(MeasureOf(Angle(F,D,H)),28)] and [Equals(LengthOf(Line(D,G)),Line(F,G))], [Equals(LengthOf(Line(F,G)),Line(F,H))]. [Find(MeasureOf(Angle(D,G,F)))].",
    "success": true
  },
  "2260": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),101)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(4)),101)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "2261": {
    "text_logic_forms": [
      "IsIncenterOf(Point(S),Triangle(J,P,L))",
      "Find(LengthOf(Line(S,Q)))"
    ],
    "output_text": "[IsIncenterOf(Point(S),Triangle(J,P,L))]. [Find(LengthOf(Line(S,Q)))].",
    "success": true
  },
  "2262": {
    "text_logic_forms": [
      "Circle(S)",
      "Equals(MeasureOf(Angle(T,S,R)),42)",
      "Find(MeasureOf(Arc(K,R,T)))"
    ],
    "output_text": "In [Circle(S)], [Equals(MeasureOf(Angle(T,S,R)),42)] [Find(MeasureOf(Arc(K,R,T)))].",
    "success": true
  },
  "2263": {
    "text_logic_forms": [
      "Find(m)"
    ],
    "output_text": "[Find(m)].",
    "success": true
  },
  "2264": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2265": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(9)),75)",
      "Find(MeasureOf(Angle(11)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(9)),75)] [Find(MeasureOf(Angle(11)))].",
    "success": true
  },
  "2266": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2267": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2268": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2269": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2270": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "2271": {
    "text_logic_forms": [
      "IsIncenterOf(Point(S),Triangle(J,P,L))",
      "Find(LengthOf(Line(Q,J)))"
    ],
    "output_text": "[IsIncenterOf(Point(S),Triangle(J,P,L))]. [Find(LengthOf(Line(Q,J)))].",
    "success": true
  },
  "2272": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "2273": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2274": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),62)",
      "Equals(MeasureOf(Angle(14)),38)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(11)),62)] and [Equals(MeasureOf(Angle(14)),38)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "2275": {
    "text_logic_forms": [
      "Find(b)"
    ],
    "output_text": "[Find(b)].",
    "success": true
  },
  "2276": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2277": {
    "text_logic_forms": [
      "Circle(H)",
      "Equals(LengthOf(Line(P,Q)),3x-4)",
      "Equals(LengthOf(Line(R,S)),14)",
      "Find(x)"
    ],
    "output_text": "In [Circle(H)], [Equals(LengthOf(Line(P,Q)),3x-4)] and [Equals(LengthOf(Line(R,S)),14)] [Find(x)].",
    "success": true
  },
  "2278": {
    "text_logic_forms": [
      "Circle(C)",
      "Equals(MeasureOf(Angle(H,C,G)),2x)",
      "Equals(MeasureOf(Angle(H,C,D)),6x+28)",
      "Find(MeasureOf(Arc(H,G,F)))"
    ],
    "output_text": "In [Circle(C)], [Equals(MeasureOf(Angle(H,C,G)),2x)] and [Equals(MeasureOf(Angle(H,C,D)),6x+28)] [Find(MeasureOf(Arc(H,G,F)))].",
    "success": true
  },
  "2279": {
    "text_logic_forms": [
      "Shape($)",
      "Parallel(Line(p),Line(q))",
      "Find(MeasureOf(Angle(C,B,D)))"
    ],
    "output_text": "[Shape($)]. [Find(MeasureOf(Angle(C,B,D)))] if [Parallel(Line(p),Line(q))].",
    "success": true
  },
  "2280": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))].",
    "success": true
  },
  "2281": {
    "text_logic_forms": [
      "Equilateral(Triangle(Q,R,S))",
      "Triangle($)",
      "Find(LengthOf(Line(Q,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(Q,S)))] if [Equilateral(Triangle(Q,R,S))] [Triangle($)].",
    "success": true
  },
  "2282": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),53)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),53)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "2283": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2284": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2285": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(W,X)),7)",
      "Equals(LengthOf(Line(W,Y)),a)",
      "Equals(LengthOf(Line(W,V)),6)",
      "Equals(LengthOf(Line(V,Z)),a-9)",
      "Find(LengthOf(Line(W,Y)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(W,X)),7)] [Equals(LengthOf(Line(W,Y)),a)] [Equals(LengthOf(Line(W,V)),6)] and [Equals(LengthOf(Line(V,Z)),a-9)] [Find(LengthOf(Line(W,Y)))].",
    "success": true
  },
  "2286": {
    "text_logic_forms": [
      "Find(LengthOf(Line(D,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,E)))].",
    "success": true
  },
  "2287": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2288": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(8)),96)",
      "Equals(MeasureOf(Angle(12)),42)",
      "Find(MeasureOf(Angle(11)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(8)),96)] and [Equals(MeasureOf(Angle(12)),42)] [Find(MeasureOf(Angle(11)))].",
    "success": true
  },
  "2289": {
    "text_logic_forms": [
      "Equilateral(Triangle(E,F,G))",
      "BisectsAngle(Line(E,H),Angle(E))",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Equilateral(Triangle(E,F,G))] and [BisectsAngle(Line(E,H),Angle(E))]. [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2290": {
    "text_logic_forms": [
      "Equals(a,8)",
      "Equals(b,15)",
      "Equals(c,17)",
      "Find(CosOf(Angle(A)))"
    ],
    "output_text": "[Equals(a,8)] [Equals(b,15)] and [Equals(c,17)] [Find(CosOf(Angle(A)))].",
    "success": true
  },
  "2291": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(a)"
    ],
    "output_text": "[Find(a)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2292": {
    "text_logic_forms": [
      "IsIncenterOf(Point(P),Triangle(A,E,C))",
      "Find(LengthOf(Line(P,B)))"
    ],
    "output_text": "[IsIncenterOf(Point(P),Triangle(A,E,C))]. [Find(LengthOf(Line(P,B)))]. Rounded to nearest hundredth.",
    "success": true
  },
  "2293": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),6)",
      "Equals(LengthOf(Line(A,F)),8)",
      "Equals(LengthOf(Line(B,C)),x)",
      "Equals(LengthOf(Line(C,D)),y)",
      "Equals(LengthOf(Line(D,E)),2y-3)",
      "Equals(LengthOf(Line(F,E)),x+\\frac{10}{3})",
      "Find(LengthOf(Line(D,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,E)))] if [Equals(LengthOf(Line(A,B)),6)] [Equals(LengthOf(Line(A,F)),8)] [Equals(LengthOf(Line(B,C)),x)] [Equals(LengthOf(Line(C,D)),y)] [Equals(LengthOf(Line(D,E)),2y-3)] and [Equals(LengthOf(Line(F,E)),x+\\frac{10}{3})].",
    "success": true
  },
  "2294": {
    "text_logic_forms": [
      "Circle(F)",
      "IsDiameterOf(Line(A,C),Circle(F))",
      "Find(MeasureOf(Angle(A,F,D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,F,D)))] on [Circle(F)], [IsDiameterOf(Line(A,C),Circle(F))].",
    "success": true
  },
  "2295": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest hundredth, if necessary.",
    "success": true
  },
  "2296": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(P)),5)",
      "Equals(LengthOf(Line(P,R)),3)",
      "Find(LengthOf(Line(Q,R)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(P)),5)] and [Equals(LengthOf(Line(P,R)),3)] [Find(LengthOf(Line(Q,R)))].",
    "success": true
  },
  "2297": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2298": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "2299": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),94)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),94)] [Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "2300": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,P)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,P)))].",
    "success": true
  },
  "2301": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2302": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),58)",
      "Equals(MeasureOf(Angle(2)),47)",
      "Equals(MeasureOf(Angle(3)),26)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),58)] [Equals(MeasureOf(Angle(2)),47)] and [Equals(MeasureOf(Angle(3)),26)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "2303": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D)))].",
    "success": true
  },
  "2304": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(LengthOf(Line(C,F)),4x+1)",
      "Equals(LengthOf(Line(D,F)),x+13)",
      "Find(x)"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. If [Equals(LengthOf(Line(C,F)),4x+1)] and [Equals(LengthOf(Line(D,F)),x+13)] [Find(x)].",
    "success": true
  },
  "2305": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2306": {
    "text_logic_forms": [
      "BisectsAngle(Line(A,C),Angle(D,A,B))",
      "Equals(LengthOf(Line(B,C)),4x+8)",
      "Equals(LengthOf(Line(D,C)),9x-7)",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "If [BisectsAngle(Line(A,C),Angle(D,A,B))], [Equals(LengthOf(Line(B,C)),4x+8)] and [Equals(LengthOf(Line(D,C)),9x-7)] [Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "2307": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "2308": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2309": {
    "text_logic_forms": [
      "Quadrilateral(P,Q,R,S)",
      "Equals(LengthOf(Line(P,Q)),721)",
      "Equals(LengthOf(Line(Q,R)),547)",
      "Equals(LengthOf(Line(R,S)),593)",
      "Equals(LengthOf(Line(P,S)),756)",
      "Equals(MeasureOf(Angle(P)),58)",
      "Find(MeasureOf(Angle(P,Q,S)))"
    ],
    "output_text": "In [Quadrilateral(P,Q,R,S)], [Equals(LengthOf(Line(P,Q)),721)] [Equals(LengthOf(Line(Q,R)),547)] [Equals(LengthOf(Line(R,S)),593)] [Equals(LengthOf(Line(P,S)),756)] and [Equals(MeasureOf(Angle(P)),58)] [Find(MeasureOf(Angle(P,Q,S)))].",
    "success": true
  },
  "2310": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2311": {
    "text_logic_forms": [
      "Equals(SumOf(MeasureOf(Angle(4)),MeasureOf(Angle(4))),180)",
      "Equals(MeasureOf(Angle(1)),2x)",
      "Equals(MeasureOf(Angle(2)),3x-20)",
      "Equals(MeasureOf(Angle(3)),x-4)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Equals(SumOf(MeasureOf(Angle(4)),MeasureOf(Angle(4))),180)]. If [Equals(MeasureOf(Angle(1)),2x)] [Equals(MeasureOf(Angle(2)),3x-20)] and [Equals(MeasureOf(Angle(3)),x-4)] [Find(MeasureOf(Angle(3)))]?",
    "success": true
  },
  "2312": {
    "text_logic_forms": [
      "Isosceles(Triangle(D,F,G))",
      "Isosceles(Triangle(F,G,H))",
      "Equals(MeasureOf(Angle(F,D,H)),28)",
      "Equals(LengthOf(Line(D,G)),Line(F,G))",
      "Equals(LengthOf(Line(F,G)),Line(F,H))",
      "Find(MeasureOf(Angle(F,G,H)))"
    ],
    "output_text": "[Isosceles(Triangle(D,F,G))], [Isosceles(Triangle(F,G,H))], [Equals(MeasureOf(Angle(F,D,H)),28)] and [Equals(LengthOf(Line(D,G)),Line(F,G))], [Equals(LengthOf(Line(F,G)),Line(F,H))]. [Find(MeasureOf(Angle(F,G,H)))].",
    "success": true
  },
  "2313": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,C)))].",
    "success": true
  },
  "2314": {
    "text_logic_forms": [
      "Equals(SinOf(x),0.6)",
      "Equals(LengthOf(Line(A,B)),12)",
      "Find(AreaOf(Triangle(A,B,C)))"
    ],
    "output_text": "If [Equals(SinOf(x),0.6)] and [Equals(LengthOf(Line(A,B)),12)] [Find(AreaOf(Triangle(A,B,C)))]?",
    "success": true
  },
  "2315": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2316": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))].",
    "success": true
  },
  "2317": {
    "text_logic_forms": [
      "Circle(S)",
      "Equals(MeasureOf(Angle(T,S,R)),42)",
      "Find(MeasureOf(Arc(E,R,T)))"
    ],
    "output_text": "In [Circle(S)], [Equals(MeasureOf(Angle(T,S,R)),42)] [Find(MeasureOf(Arc(E,R,T)))].",
    "success": true
  },
  "2318": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2319": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))]. Round to nearest degree.",
    "success": true
  },
  "2320": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2321": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2322": {
    "text_logic_forms": [
      "Circle(S)",
      "Equals(LengthOf(Line(L,M)),16)",
      "Equals(LengthOf(Line(P,N)),4x)",
      "Find(x)"
    ],
    "output_text": "In [Circle(S)], [Equals(LengthOf(Line(L,M)),16)] and [Equals(LengthOf(Line(P,N)),4x)] [Find(x)]?",
    "success": true
  },
  "2323": {
    "text_logic_forms": [
      "Similar(Triangle(A,D,F),Triangle(B,C,E))",
      "Equals(LengthOf(Line(B,C)),24)",
      "Equals(LengthOf(Line(E,B)),12)",
      "Equals(LengthOf(Line(C,E)),18)",
      "Equals(LengthOf(Line(D,F)),21)",
      "Find(PerimeterOf(Triangle(A,D,F)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(A,D,F)))], if [Similar(Triangle(A,D,F),Triangle(B,C,E))], [Equals(LengthOf(Line(B,C)),24)] [Equals(LengthOf(Line(E,B)),12)] [Equals(LengthOf(Line(C,E)),18)] and [Equals(LengthOf(Line(D,F)),21)].",
    "success": true
  },
  "2324": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2325": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2326": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D)))].",
    "success": true
  },
  "2327": {
    "text_logic_forms": [
      "Parallel(Line(p),Line(q))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(p),Line(q))].",
    "success": true
  },
  "2328": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(B,C)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(B,C)))].",
    "success": true
  },
  "2329": {
    "text_logic_forms": [
      "Find(LengthOf(Line(T,Y)))"
    ],
    "output_text": "[Find(LengthOf(Line(T,Y)))].",
    "success": true
  },
  "2330": {
    "text_logic_forms": [
      "Circle(Z)",
      "Equals(Angle(W,Z,X),Angle(X,Z,Y))",
      "Equals(MeasureOf(Angle(V,Z,U)),4x)",
      "Equals(MeasureOf(Angle(U,Z,Y)),2x+24)",
      "IsDiameterOf(Line(V,Y),Circle($))",
      "IsDiameterOf(Line(W,U),Circle($))",
      "Find(MeasureOf(Arc(X,Y)))"
    ],
    "output_text": "In [Circle(Z)], [Equals(Angle(W,Z,X),Angle(X,Z,Y))], [Equals(MeasureOf(Angle(V,Z,U)),4x)] [Equals(MeasureOf(Angle(U,Z,Y)),2x+24)] and [IsDiameterOf(Line(V,Y),Circle($))], [IsDiameterOf(Line(W,U),Circle($))]. [Find(MeasureOf(Arc(X,Y)))].",
    "success": true
  },
  "2331": {
    "text_logic_forms": [
      "Triangle(P,Q,R)",
      "Equals(LengthOf(Line(Z,Q)),3a-11)",
      "Equals(LengthOf(Line(Z,P)),a+5)",
      "Equals(LengthOf(Line(P,Y)),2c-1)",
      "Equals(LengthOf(Line(Y,R)),4c-11)",
      "Equals(MeasureOf(Angle(P,R,Z)),4b-17)",
      "Equals(MeasureOf(Angle(Z,R,Q)),3b-4)",
      "Equals(MeasureOf(Angle(Q,Y,R)),7b+6)",
      "Equals(MeasureOf(Angle(P,X,R)),2a+10)",
      "IsPerpendicularBisectorOf(Line(Q,Y),Line(P,R))",
      "Find(b)"
    ],
    "output_text": "In [Triangle(P,Q,R)], [Equals(LengthOf(Line(Z,Q)),3a-11)] [Equals(LengthOf(Line(Z,P)),a+5)] [Equals(LengthOf(Line(P,Y)),2c-1)] [Equals(LengthOf(Line(Y,R)),4c-11)] [Equals(MeasureOf(Angle(P,R,Z)),4b-17)] [Equals(MeasureOf(Angle(Z,R,Q)),3b-4)] [Equals(MeasureOf(Angle(Q,Y,R)),7b+6)] and [Equals(MeasureOf(Angle(P,X,R)),2a+10)] If [IsPerpendicularBisectorOf(Line(Q,Y),Line(P,R))], [Find(b)].",
    "success": true
  },
  "2332": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2333": {
    "text_logic_forms": [
      "Triangle(D,E,F)",
      "IsMidpointOf(Point(P),Line(D,E))",
      "IsMidpointOf(Point(Q),Line(D,F))",
      "Equals(LengthOf(Line(E,F)),3x+4)",
      "Equals(LengthOf(Line(P,Q)),20)",
      "Find(x)"
    ],
    "output_text": "In [Triangle(D,E,F)], [IsMidpointOf(Point(P),Line(D,E))] and [IsMidpointOf(Point(Q),Line(D,F))]. If [Equals(LengthOf(Line(E,F)),3x+4)] and [Equals(LengthOf(Line(P,Q)),20)] [Find(x)]?",
    "success": true
  },
  "2334": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B,A,C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B,A,C)))].",
    "success": true
  },
  "2335": {
    "text_logic_forms": [
      "Find(PerimeterOf(Right(Triangle($))))"
    ],
    "output_text": "[Find(PerimeterOf(Right(Triangle($))))]? Round to nearest tenth if necessary.",
    "success": true
  },
  "2336": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2337": {
    "text_logic_forms": [
      "Perpendicular(Line(A,B),Line(B,C))",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(5)))] if [Perpendicular(Line(A,B),Line(B,C))].",
    "success": true
  },
  "2338": {
    "text_logic_forms": [
      "Similar(Triangle(W,Z,X),Triangle(S,R,T))",
      "Equals(LengthOf(Line(S,T)),6)",
      "Equals(LengthOf(Line(W,X)),5)",
      "Equals(PerimeterOf(Triangle(S,R,T)),15)",
      "Find(PerimeterOf(Triangle(W,Z,X)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(W,Z,X)))], if [Similar(Triangle(W,Z,X),Triangle(S,R,T))], [Equals(LengthOf(Line(S,T)),6)] [Equals(LengthOf(Line(W,X)),5)] and [Equals(PerimeterOf(Triangle(S,R,T)),15)].",
    "success": true
  },
  "2339": {
    "text_logic_forms": [
      "Find(RatioOf(SinOf(Angle(V))))"
    ],
    "output_text": "[Find(RatioOf(SinOf(Angle(V))))] to nearest hundredth.",
    "success": true
  },
  "2340": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C,G,B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C,G,B)))].",
    "success": true
  },
  "2341": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2342": {
    "text_logic_forms": [
      "Rectangle(L,M,N,P)",
      "Parallelogram(L,K,M,J)",
      "Equals(LengthOf(Line(M,K)),6x)",
      "Equals(LengthOf(Line(K,L)),3x+2y)",
      "Equals(LengthOf(Line(J,N)),14-x)",
      "Find(x)"
    ],
    "output_text": "Use [Rectangle(L,M,N,P)], [Parallelogram(L,K,M,J)] to. If [Equals(LengthOf(Line(M,K)),6x)] [Equals(LengthOf(Line(K,L)),3x+2y)] and [Equals(LengthOf(Line(J,N)),14-x)] [Find(x)].",
    "success": true
  },
  "2343": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2344": {
    "text_logic_forms": [
      "Angle($)"
    ],
    "output_text": "Which of following [Angle($)] pairs are alternate exterior angles?",
    "success": false
  },
  "2345": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(12)),64)",
      "Find(MeasureOf(Angle(9)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(12)),64)] [Find(MeasureOf(Angle(9)))].",
    "success": true
  },
  "2346": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(C,F,D)),12a+45)",
      "Perpendicular(Line(F,C),Line(F,D))",
      "Find(a)"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(C,F,D)),12a+45)] [Find(a)] so [Perpendicular(Line(F,C),Line(F,D))].",
    "success": true
  },
  "2347": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(B,N,C)),20)",
      "Find(MeasureOf(Arc(B,C)))"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(B,N,C)),20)] [Find(MeasureOf(Arc(B,C)))].",
    "success": true
  },
  "2348": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "2349": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2350": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(b)"
    ],
    "output_text": "[Find(b)] in [Parallelogram($)].",
    "success": true
  },
  "2351": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "2352": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(W,X))",
      "Equals(LengthOf(Line(W,X)),10)",
      "Equals(LengthOf(Line(X,Y)),6)",
      "Equals(LengthOf(Line(W,Y)),8)",
      "Equals(LengthOf(Line(R,Y)),5)",
      "Equals(LengthOf(Line(P,S)),3)",
      "Find(LengthOf(Line(P,Y)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(W,X))], [Equals(LengthOf(Line(W,X)),10)] [Equals(LengthOf(Line(X,Y)),6)] [Equals(LengthOf(Line(W,Y)),8)] [Equals(LengthOf(Line(R,Y)),5)] and [Equals(LengthOf(Line(P,S)),3)] [Find(LengthOf(Line(P,Y)))].",
    "success": true
  },
  "2353": {
    "text_logic_forms": [
      "IsDiameterOf(Line(A,D),Circle(B))",
      "IsDiameterOf(Line(C,G),Circle(B))",
      "Find(MeasureOf(Arc(A,C)))"
    ],
    "output_text": "[IsDiameterOf(Line(A,D),Circle(B))], [IsDiameterOf(Line(C,G),Circle(B))]. [Find(MeasureOf(Arc(A,C)))].",
    "success": true
  },
  "2354": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2355": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2356": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2357": {
    "text_logic_forms": [
      "Equals(b,3)",
      "Find(a)"
    ],
    "output_text": "If [Equals(b,3)] [Find(a)].",
    "success": true
  },
  "2358": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2359": {
    "text_logic_forms": [
      "Find(LengthOf(Line(R,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,T)))].",
    "success": true
  },
  "2360": {
    "text_logic_forms": [
      "Circle(E)",
      "Equals(LengthOf(Line(E,G)),Line(E,F))",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "In [Circle(E)], [Equals(LengthOf(Line(E,G)),Line(E,F))]. [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2361": {
    "text_logic_forms": [
      "Equals(CircumferenceOf(Circle($)),16\\pi)",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "If [Equals(CircumferenceOf(Circle($)),16\\pi)] [Find(AreaOf(Shaded(Shape($))))]?",
    "success": true
  },
  "2362": {
    "text_logic_forms": [
      "Equals(AreaOf(Parallelogram($)),2000)",
      "Find(BaseOf(Parallelogram($)))"
    ],
    "output_text": "[Find(BaseOf(Parallelogram($)))], [Equals(AreaOf(Parallelogram($)),2000)].",
    "success": true
  },
  "2363": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2364": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "2365": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram(A,B,C,D)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram(A,B,C,D)))] to nearest tenth.",
    "success": true
  },
  "2366": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(D,A,B)),2)",
      "MeasureOf(Angle(A,D,C))",
      "Equals(LengthOf(Line(C,B)),6)",
      "Find(MeasureOf(Angle(D,A,B)))"
    ],
    "output_text": "In [Rhombus(A,B,C,D)], [Equals(MeasureOf(Angle(D,A,B)),2)] [MeasureOf(Angle(A,D,C))] and [Equals(LengthOf(Line(C,B)),6)] [Find(MeasureOf(Angle(D,A,B)))].",
    "success": true
  },
  "2367": {
    "text_logic_forms": [
      "Rectangle(W,X,Y,Z)",
      "Equals(LengthOf(Line(P,Y)),3x-5)",
      "Equals(LengthOf(Line(W,P)),2x+11)",
      "Find(LengthOf(Line(Z,P)))"
    ],
    "output_text": " [Rectangle(W,X,Y,Z)]. If [Equals(LengthOf(Line(P,Y)),3x-5)] and [Equals(LengthOf(Line(W,P)),2x+11)] [Find(LengthOf(Line(Z,P)))].",
    "success": true
  },
  "2368": {
    "text_logic_forms": [
      "Equals(a,4)",
      "Find(c)"
    ],
    "output_text": "If [Equals(a,4)] [Find(c)].",
    "success": true
  },
  "2369": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "2370": {
    "text_logic_forms": [
      "Square(W,X,Y,Z)",
      "Equals(LengthOf(Line(W,T)),3)",
      "Find(MeasureOf(Angle(W,Y,X)))"
    ],
    "output_text": " [Square(W,X,Y,Z)]. If [Equals(LengthOf(Line(W,T)),3)] [Find(MeasureOf(Angle(W,Y,X)))].",
    "success": true
  },
  "2371": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),133)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),133)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "2372": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2373": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2374": {
    "text_logic_forms": [
      "Find(LengthOf(Line(P,N)))"
    ],
    "output_text": "[Find(LengthOf(Line(P,N)))].",
    "success": true
  },
  "2375": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,F)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,F)))].",
    "success": true
  },
  "2376": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(E,S)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(E,S)))].",
    "success": true
  },
  "2377": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2378": {
    "text_logic_forms": [
      "Parallelogram(P,Q,R,S)",
      "Find(MeasureOf(Angle(S)))"
    ],
    "output_text": "Use [Parallelogram(P,Q,R,S)] to [Find(MeasureOf(Angle(S)))].",
    "success": true
  },
  "2379": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(W)),4)",
      "Equals(RadiusOf(Circle(Z)),7)",
      "Equals(LengthOf(Line(X,Y)),2)",
      "Find(LengthOf(Line(I,X)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(W)),4)] [Equals(RadiusOf(Circle(Z)),7)] and [Equals(LengthOf(Line(X,Y)),2)] [Find(LengthOf(Line(I,X)))].",
    "success": true
  },
  "2380": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2381": {
    "text_logic_forms": [
      "IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))",
      "Equals(LengthOf(Line(G,H)),10)",
      "Find(LengthOf(Line(F,G)))"
    ],
    "output_text": "[IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))]. If [Equals(LengthOf(Line(G,H)),10)] [Find(LengthOf(Line(F,G)))].",
    "success": true
  },
  "2382": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2383": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2384": {
    "text_logic_forms": [
      "Find(LengthOf(Line(J,L)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,L)))].",
    "success": true
  },
  "2385": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(A,E)),75)",
      "Find(MeasureOf(Angle(A,D,E)))"
    ],
    "output_text": "If [Equals(MeasureOf(Arc(A,E)),75)] [Find(MeasureOf(Angle(A,D,E)))].",
    "success": true
  },
  "2386": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2387": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2388": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "2389": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2390": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2391": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2392": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2393": {
    "text_logic_forms": [
      "Congruent(Triangle(L,M,N),Triangle(Q,R,S))",
      "Find(y)"
    ],
    "output_text": "[Congruent(Triangle(L,M,N),Triangle(Q,R,S))]. [Find(y)].",
    "success": true
  },
  "2394": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "2395": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2396": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "2397": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Y,X,W)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Y,X,W)))].",
    "success": true
  },
  "2398": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(F)),7x+2)",
      "Equals(MeasureOf(Angle(H)),17x-8)",
      "Find(x)"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(F)),7x+2)] and [Equals(MeasureOf(Angle(H)),17x-8)] [Find(x)].",
    "success": true
  },
  "2399": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2400": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))].",
    "success": true
  },
  "2401": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "2402": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(O)),13)",
      "Equals(Line(O,B),Radius)",
      "IsChordOf(Line(C,D),Circle($))",
      "Perpendicular(Line(O,B),Line(C,D))",
      "Equals(Line(C,D),24)",
      "Find(LengthOf(Line(O,X)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(O)),13)] [Equals(Line(O,B),Radius)] [IsChordOf(Line(C,D),Circle($))]. [Perpendicular(Line(O,B),Line(C,D))]. [Equals(Line(C,D),24)] [Find(LengthOf(Line(O,X)))].",
    "success": true
  },
  "2403": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2404": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C,A,M)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C,A,M)))].",
    "success": true
  },
  "2405": {
    "text_logic_forms": [
      "Angle(A,B,C)",
      "Parallel(Line(l),Line(m))",
      "IntersectAt(Line(l),Line(m),Point(B))",
      "Find(MeasureOf(Angle(A,B,C)))"
    ],
    "output_text": ", [Angle(A,B,C)]. [Parallel(Line(l),Line(m))]. [IntersectAt(Line(l),Line(m),Point(B))]. [Find(MeasureOf(Angle(A,B,C)))]?",
    "success": true
  },
  "2406": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2407": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2408": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(X,N)),6)",
      "Equals(LengthOf(Line(X,M)),2)",
      "Equals(LengthOf(Line(X,Y)),10)",
      "Find(LengthOf(Line(N,Z)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(X,N)),6)] [Equals(LengthOf(Line(X,M)),2)] and [Equals(LengthOf(Line(X,Y)),10)] [Find(LengthOf(Line(N,Z)))].",
    "success": true
  },
  "2409": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2410": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,C)),x-3)",
      "Equals(LengthOf(Line(B,E)),20)",
      "Equals(LengthOf(Line(A,B)),16)",
      "Equals(LengthOf(Line(C,D)),x+5)",
      "Find(LengthOf(Line(C,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(C,D)))] if [Equals(LengthOf(Line(A,C)),x-3)] [Equals(LengthOf(Line(B,E)),20)] [Equals(LengthOf(Line(A,B)),16)] and [Equals(LengthOf(Line(C,D)),x+5)].",
    "success": true
  },
  "2411": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "2412": {
    "text_logic_forms": [
      "Rectangle(J,K,L,M)",
      "Rhombus(M,L,P,R)",
      "Equals(Angle(J,M,K),Angle(R,M,P))",
      "Equals(MeasureOf(Angle(J,M,K)),55)",
      "Equals(MeasureOf(Angle(M,R,P)),70)",
      "Find(MeasureOf(Angle(K,M,L)))"
    ],
    "output_text": " [Rectangle(J,K,L,M)]. [Rhombus(M,L,P,R)]. [Equals(Angle(J,M,K),Angle(R,M,P))], [Equals(MeasureOf(Angle(J,M,K)),55)] and [Equals(MeasureOf(Angle(M,R,P)),70)] [Find(MeasureOf(Angle(K,M,L)))].",
    "success": true
  },
  "2413": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(D,A,B)),2)",
      "MeasureOf(Angle(A,D,C))",
      "Equals(LengthOf(Line(C,B)),6)",
      "Find(MeasureOf(Angle(A,C,D)))"
    ],
    "output_text": "In [Rhombus(A,B,C,D)], [Equals(MeasureOf(Angle(D,A,B)),2)] [MeasureOf(Angle(A,D,C))] and [Equals(LengthOf(Line(C,B)),6)] [Find(MeasureOf(Angle(A,C,D)))].",
    "success": true
  },
  "2414": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),12)",
      "Equals(LengthOf(Line(A,C)),16)",
      "Equals(LengthOf(Line(E,D)),5)",
      "Find(LengthOf(Line(A,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,E)))] if [Equals(LengthOf(Line(A,B)),12)] [Equals(LengthOf(Line(A,C)),16)] and [Equals(LengthOf(Line(E,D)),5)].",
    "success": true
  },
  "2415": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,R)",
      "Find(MeasureOf(Angle(R,N,P)))"
    ],
    "output_text": "Use [Parallelogram(M,N,P,R)] to [Find(MeasureOf(Angle(R,N,P)))].",
    "success": true
  },
  "2416": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2417": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(RadiusOf(Circle(P)),2)",
      "Find(LengthOf(Arc(R,S)))"
    ],
    "output_text": " [Circle(P)], [Equals(RadiusOf(Circle(P)),2)] [Find(LengthOf(Arc(R,S)))]. Round to nearest hundredth.",
    "success": true
  },
  "2418": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(A,D,C)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(A,D,C)))].",
    "success": true
  },
  "2419": {
    "text_logic_forms": [
      "InscribedIn(Rectangle($),Circle($))",
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[InscribedIn(Rectangle($),Circle($))]. [Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "2420": {
    "text_logic_forms": [
      "Find(LengthOf(Line(D,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,E)))].",
    "success": true
  },
  "2421": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2422": {
    "text_logic_forms": [
      "Find(LengthOf(Arc(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Arc(A,B)))]. Round to nearest hundredth.",
    "success": true
  },
  "2423": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "Equals(LengthOf(Line(A,B)),Line(B,C))",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))] if [Isosceles(Triangle(A,B,C))] with [Equals(LengthOf(Line(A,B)),Line(B,C))].",
    "success": true
  },
  "2424": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B,G,E)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B,G,E)))].",
    "success": true
  },
  "2425": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round side measure to nearest tenth.",
    "success": true
  },
  "2426": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "2427": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2428": {
    "text_logic_forms": [
      "InscribedIn(Regular(Polygon($)),Circle($))",
      "Find(MeasureOf(Angle($)))"
    ],
    "output_text": ", [InscribedIn(Regular(Polygon($)),Circle($))]. [Find(MeasureOf(Angle($)))].",
    "success": true
  },
  "2429": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2430": {
    "text_logic_forms": [
      "Find(LengthOf(Line(X,Z)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,Z)))].",
    "success": true
  },
  "2431": {
    "text_logic_forms": [
      "Regular(Hexagon(U,V,W,X,Y,Z))",
      "Equals(SideOf(Regular(Hexagon(U,V,W,X,Y,Z))),12)",
      "Find(LengthOf(Line(W,Y)))"
    ],
    "output_text": " [Regular(Hexagon(U,V,W,X,Y,Z))], [Equals(SideOf(Regular(Hexagon(U,V,W,X,Y,Z))),12)] [Find(LengthOf(Line(W,Y)))].",
    "success": true
  },
  "2432": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "2433": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2434": {
    "text_logic_forms": [
      "IsMedianOf(Line(G,H),Quadrilateral(R,S,B,A))",
      "Find(LengthOf(Line(G,H)))"
    ],
    "output_text": "Let [IsMedianOf(Line(G,H),Quadrilateral(R,S,B,A))]. [Find(LengthOf(Line(G,H)))].",
    "success": true
  },
  "2435": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2436": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(B,C)),30)",
      "Equals(MeasureOf(Arc(A,D)),20)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))] if [Equals(MeasureOf(Arc(B,C)),30)] and [Equals(MeasureOf(Arc(A,D)),20)].",
    "success": true
  },
  "2437": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(V,X,W)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(V,X,W)))].",
    "success": true
  },
  "2438": {
    "text_logic_forms": [
      "Find(LengthOf(Line(W,R)))"
    ],
    "output_text": "[Find(LengthOf(Line(W,R)))].",
    "success": true
  },
  "2439": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R,S,T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R,S,T)))].",
    "success": true
  },
  "2440": {
    "text_logic_forms": [
      "Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))",
      "Equals(MeasureOf(Angle(A,G,F)),108)",
      "Equals(LengthOf(Line(G,F)),14)",
      "Equals(LengthOf(Line(A,D)),12)",
      "Equals(LengthOf(Line(D,G)),4.5)",
      "Equals(LengthOf(Line(E,F)),8)",
      "Equals(LengthOf(Line(A,B)),26)",
      "Find(MeasureOf(Angle(A,D,C)))"
    ],
    "output_text": "[Similar(Quadrilateral(A,B,C,D),Quadrilateral(A,E,F,G))], [Equals(MeasureOf(Angle(A,G,F)),108)] [Equals(LengthOf(Line(G,F)),14)] [Equals(LengthOf(Line(A,D)),12)] [Equals(LengthOf(Line(D,G)),4.5)] [Equals(LengthOf(Line(E,F)),8)] and [Equals(LengthOf(Line(A,B)),26)] [Find(MeasureOf(Angle(A,D,C)))].",
    "success": true
  },
  "2441": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),110)",
      "Equals(MeasureOf(Angle(12)),55)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),110)] and [Equals(MeasureOf(Angle(12)),55)] [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2442": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2443": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2444": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2445": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2446": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(M,C)),7)",
      "Equals(LengthOf(Line(R,M)),4)",
      "Equals(LengthOf(Line(A,T)),16)",
      "Find(LengthOf(Line(M,B)))"
    ],
    "output_text": "[Equals(LengthOf(Line(M,C)),7)] [Equals(LengthOf(Line(R,M)),4)] and [Equals(LengthOf(Line(A,T)),16)] [Find(LengthOf(Line(M,B)))].",
    "success": true
  },
  "2447": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2448": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2449": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(W)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(W)))].",
    "success": true
  },
  "2450": {
    "text_logic_forms": [],
    "output_text": "A plane travels from Des Moines to Phoenix, on to Atlanta and back to Des Moines,. Find distance in from Phoenix to Atlanta if trip was 3482.",
    "success": false
  },
  "2451": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "2452": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),58)",
      "Equals(MeasureOf(Angle(2)),47)",
      "Equals(MeasureOf(Angle(3)),26)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),58)] [Equals(MeasureOf(Angle(2)),47)] and [Equals(MeasureOf(Angle(3)),26)] [Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "2453": {
    "text_logic_forms": [
      "Rhombus(F,G,H,J)",
      "IsDiagonalOf(Line(F,H),Rhombus(F,G,H,J))",
      "IsDiagonalOf(Line(G,J),Rhombus(F,G,H,J))",
      "IntersectAt(Line(F,H),Line(G,J),Point(K))",
      "Equals(LengthOf(Line(G,H)),x+9)",
      "Equals(LengthOf(Line(J,H)),5x-2)",
      "Find(x)"
    ],
    "output_text": "[Rhombus(F,G,H,J)]. [IsDiagonalOf(Line(F,H),Rhombus(F,G,H,J))], [IsDiagonalOf(Line(G,J),Rhombus(F,G,H,J))]. [IntersectAt(Line(F,H),Line(G,J),Point(K))]. If [Equals(LengthOf(Line(G,H)),x+9)] and [Equals(LengthOf(Line(J,H)),5x-2)] [Find(x)].",
    "success": true
  },
  "2454": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2455": {
    "text_logic_forms": [
      "Find(CircumferenceOf(Shape($)))"
    ],
    "output_text": "[Find(CircumferenceOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "2456": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(F,E)),118)",
      "Equals(MeasureOf(Arc(A,B)),108)",
      "Equals(MeasureOf(Angle(E,G,B)),52)",
      "Equals(MeasureOf(Angle(E,F,B)),30)",
      "Find(MeasureOf(Arc(C,F)))"
    ],
    "output_text": "If [Equals(MeasureOf(Arc(F,E)),118)] [Equals(MeasureOf(Arc(A,B)),108)] [Equals(MeasureOf(Angle(E,G,B)),52)] and [Equals(MeasureOf(Angle(E,F,B)),30)] [Find(MeasureOf(Arc(C,F)))].",
    "success": true
  },
  "2457": {
    "text_logic_forms": [
      "UseTheorem(Pythagorean_Triple)",
      "Find(x)"
    ],
    "output_text": "[UseTheorem(Pythagorean_Triple)] to [Find(x)].",
    "success": true
  },
  "2458": {
    "text_logic_forms": [
      "Circle(F)",
      "IsDiameterOf(Line(A,C),Circle(F))",
      "Find(MeasureOf(Angle(C,F,D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C,F,D)))] on [Circle(F)], [IsDiameterOf(Line(A,C),Circle(F))].",
    "success": true
  },
  "2459": {
    "text_logic_forms": [
      "Rectangle(J,K,L,M)",
      "Rhombus(M,L,P,R)",
      "Equals(Angle(J,M,K),Angle(R,M,P))",
      "Equals(MeasureOf(Angle(J,M,K)),55)",
      "Equals(MeasureOf(Angle(M,R,P)),70)",
      "Find(MeasureOf(Angle(K,L,P)))"
    ],
    "output_text": " [Rectangle(J,K,L,M)]. [Rhombus(M,L,P,R)]. [Equals(Angle(J,M,K),Angle(R,M,P))], [Equals(MeasureOf(Angle(J,M,K)),55)] and [Equals(MeasureOf(Angle(M,R,P)),70)] [Find(MeasureOf(Angle(K,L,P)))].",
    "success": true
  },
  "2460": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round angle measure to nearest degree.",
    "success": true
  },
  "2461": {
    "text_logic_forms": [
      "IsCentroidOf(Point(Q),Shape($))",
      "Equals(LengthOf(Line(B,E)),9)",
      "Find(LengthOf(Line(B,Q)))"
    ],
    "output_text": "[IsCentroidOf(Point(Q),Shape($))] and [Equals(LengthOf(Line(B,E)),9)] [Find(LengthOf(Line(B,Q)))].",
    "success": true
  },
  "2462": {
    "text_logic_forms": [
      "IsDiameterOf(Line(A,B),Circle($))",
      "Equals(LengthOf(Line(A,C)),8)",
      "Equals(LengthOf(Line(B,C)),15)",
      "Find(RadiusOf(Circle($)))"
    ],
    "output_text": "[IsDiameterOf(Line(A,B),Circle($))], [Equals(LengthOf(Line(A,C)),8)] and [Equals(LengthOf(Line(B,C)),15)] [Find(RadiusOf(Circle($)))].",
    "success": true
  },
  "2463": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2464": {
    "text_logic_forms": [
      "IsPerpendicularBisectorOf(Line(m),Line(X,Z))",
      "Equals(LengthOf(Line(W,Z)),14.9)",
      "Find(LengthOf(Line(W,X)))"
    ],
    "output_text": "[IsPerpendicularBisectorOf(Line(m),Line(X,Z))], [Equals(LengthOf(Line(W,Z)),14.9)] [Find(LengthOf(Line(W,X)))].",
    "success": true
  },
  "2465": {
    "text_logic_forms": [
      "IsPerpendicularBisectorOf(Line(l),Triangle(P,Q,R))",
      "IsPerpendicularBisectorOf(Line(m),Triangle(P,Q,R))",
      "IsPerpendicularBisectorOf(Line(n),Triangle(P,Q,R))",
      "IntersectAt(Line(l),Line(m),Line(n),Point(T))",
      "Equals(LengthOf(Line(T,Q)),2x)",
      "Equals(LengthOf(Line(P,T)),3y-1)",
      "Equals(LengthOf(Line(T,R)),8)",
      "Find(z)"
    ],
    "output_text": "[IsPerpendicularBisectorOf(Line(l),Triangle(P,Q,R))], [IsPerpendicularBisectorOf(Line(m),Triangle(P,Q,R))], [IsPerpendicularBisectorOf(Line(n),Triangle(P,Q,R))]. [IntersectAt(Line(l),Line(m),Line(n),Point(T))]. If [Equals(LengthOf(Line(T,Q)),2x)] [Equals(LengthOf(Line(P,T)),3y-1)] and [Equals(LengthOf(Line(T,R)),8)] [Find(z)].",
    "success": true
  },
  "2466": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),12)",
      "Equals(LengthOf(Line(A,C)),16)",
      "Equals(LengthOf(Line(E,D)),5)",
      "Find(LengthOf(Line(A,E)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,B)),12)] [Equals(LengthOf(Line(A,C)),16)] and [Equals(LengthOf(Line(E,D)),5)] [Find(LengthOf(Line(A,E)))].",
    "success": true
  },
  "2467": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(N,C,L)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(N,C,L)))].",
    "success": true
  },
  "2468": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "2469": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2470": {
    "text_logic_forms": [
      "Rhombus(L,M,P,Q)",
      "Equals(MeasureOf(Angle(Q,L,M)),2x^{2}-10)",
      "Equals(MeasureOf(Angle(Q,P,M)),8x)",
      "Equals(LengthOf(Line(M,P)),10)",
      "Find(PerimeterOf(Quadrilateral(L,M,P,Q)))"
    ],
    "output_text": "In [Rhombus(L,M,P,Q)], [Equals(MeasureOf(Angle(Q,L,M)),2x^{2}-10)] [Equals(MeasureOf(Angle(Q,P,M)),8x)] and [Equals(LengthOf(Line(M,P)),10)] [Find(PerimeterOf(Quadrilateral(L,M,P,Q)))].",
    "success": true
  },
  "2471": {
    "text_logic_forms": [
      "Find(AreaOf(Trapezoid($)))"
    ],
    "output_text": "[Find(AreaOf(Trapezoid($)))].",
    "success": true
  },
  "2472": {
    "text_logic_forms": [
      "Equilateral(Triangle(L,M,N))",
      "BisectsAngle(Line(M,P),Line(L,N))",
      "Find(LengthOf(SideOf(Triangle(L,M,N))))"
    ],
    "output_text": "[Equilateral(Triangle(L,M,N))] and [BisectsAngle(Line(M,P),Line(L,N))]. [Find(LengthOf(SideOf(Triangle(L,M,N))))].",
    "success": true
  },
  "2473": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2474": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,Q)",
      "Equals(MeasureOf(Angle(M)),10x)",
      "Equals(MeasureOf(Angle(N)),20x)",
      "Find(MeasureOf(Angle(M)))"
    ],
    "output_text": "[Parallelogram(M,N,P,Q)] with [Equals(MeasureOf(Angle(M)),10x)] and [Equals(MeasureOf(Angle(N)),20x)] [Find(MeasureOf(Angle(M)))].",
    "success": true
  },
  "2475": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(5)),7x-5)",
      "Equals(MeasureOf(Angle(4)),2x+23)",
      "Find(x)"
    ],
    "output_text": "If [Equals(MeasureOf(Angle(5)),7x-5)] and [Equals(MeasureOf(Angle(4)),2x+23)] [Find(x)].",
    "success": true
  },
  "2476": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,R)",
      "Find(MeasureOf(Angle(R,M,N)))"
    ],
    "output_text": "Use [Parallelogram(M,N,P,R)] to [Find(MeasureOf(Angle(R,M,N)))].",
    "success": true
  },
  "2477": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))].",
    "success": true
  },
  "2478": {
    "text_logic_forms": [
      "Similar(Triangle(L,M,N),Triangle(Q,R,S))",
      "Equals(LengthOf(Line(Q,R)),35)",
      "Equals(LengthOf(Line(R,S)),37)",
      "Equals(LengthOf(Line(S,Q)),12)",
      "Equals(LengthOf(Line(N,L)),5)",
      "Find(PerimeterOf(Triangle(L,M,N)))"
    ],
    "output_text": "If [Similar(Triangle(L,M,N),Triangle(Q,R,S))], [Equals(LengthOf(Line(Q,R)),35)] [Equals(LengthOf(Line(R,S)),37)] [Equals(LengthOf(Line(S,Q)),12)] and [Equals(LengthOf(Line(N,L)),5)] [Find(PerimeterOf(Triangle(L,M,N)))].",
    "success": true
  },
  "2479": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(U,T)))"
    ],
    "output_text": "two [Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(U,T)))].",
    "success": true
  },
  "2480": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "2481": {
    "text_logic_forms": [
      "Congruent(Circle(P),Circle(Q))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Circle(P),Circle(Q))]. [Find(x)].",
    "success": true
  },
  "2482": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2483": {
    "text_logic_forms": [
      "Find(LengthOf(Line(Q,P)))"
    ],
    "output_text": "[Find(LengthOf(Line(Q,P)))].",
    "success": true
  },
  "2484": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2485": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(A,B)),2x+3)",
      "Equals(LengthOf(Line(B,C)),5x)",
      "Find(MeasureOf(Angle(A,E,B)))"
    ],
    "output_text": "In [Rhombus(A,B,C,D)], [Equals(LengthOf(Line(A,B)),2x+3)] and [Equals(LengthOf(Line(B,C)),5x)] [Find(MeasureOf(Angle(A,E,B)))].",
    "success": true
  },
  "2486": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(O)),13)",
      "Equals(Line(O,B),Radius)",
      "IsChordOf(Line(C,D),Circle($))",
      "Perpendicular(Line(O,B),Line(C,D))",
      "Equals(Line(C,D),24)",
      "Equals(MeasureOf(Arc(C,D)),134)",
      "Find(MeasureOf(Arc(C,B)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(O)),13)] [Equals(Line(O,B),Radius)] [IsChordOf(Line(C,D),Circle($))]. [Perpendicular(Line(O,B),Line(C,D))]. [Equals(Line(C,D),24)] If [Equals(MeasureOf(Arc(C,D)),134)] [Find(MeasureOf(Arc(C,B)))].",
    "success": true
  },
  "2487": {
    "text_logic_forms": [
      "IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))",
      "Equals(LengthOf(Line(G,H)),10)",
      "Find(LengthOf(Line(F,H)))"
    ],
    "output_text": "[IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))]. If [Equals(LengthOf(Line(G,H)),10)] [Find(LengthOf(Line(F,H)))].",
    "success": true
  },
  "2488": {
    "text_logic_forms": [
      "Find(ScaleFactorOf(Shape(W),Shape(W')))"
    ],
    "output_text": "[Find(ScaleFactorOf(Shape(W),Shape(W')))].",
    "success": true
  },
  "2489": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R)))].",
    "success": true
  },
  "2490": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "2491": {
    "text_logic_forms": [
      "Find(RatioOf(CosOf(Angle(B))))"
    ],
    "output_text": "[Find(RatioOf(CosOf(Angle(B))))] to nearest hundredth.",
    "success": true
  },
  "2492": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),Line(D,F))",
      "Find(x)"
    ],
    "output_text": "[Equals(LengthOf(Line(A,B)),Line(D,F))]. [Find(x)].",
    "success": true
  },
  "2493": {
    "text_logic_forms": [
      "Circle(M)",
      "Equals(LengthOf(Line(F,L)),24)",
      "Equals(LengthOf(Line(H,J)),48)",
      "Equals(MeasureOf(Arc(H,P)),65)",
      "Find(LengthOf(Line(F,G)))"
    ],
    "output_text": "In [Circle(M)], [Equals(LengthOf(Line(F,L)),24)] [Equals(LengthOf(Line(H,J)),48)] and [Equals(MeasureOf(Arc(H,P)),65)] [Find(LengthOf(Line(F,G)))].",
    "success": true
  },
  "2494": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2495": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2496": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2497": {
    "text_logic_forms": [
      "Circle(H)",
      "Equals(DiameterOf(Circle(H)),18)",
      "Equals(LengthOf(Line(L,M)),12)",
      "Equals(MeasureOf(Arc(L,M)),84)",
      "Find(LengthOf(Line(H,P)))"
    ],
    "output_text": " [Circle(H)], [Equals(DiameterOf(Circle(H)),18)] [Equals(LengthOf(Line(L,M)),12)] and [Equals(MeasureOf(Arc(L,M)),84)] [Find(LengthOf(Line(H,P)))]. Round to nearest hundredth.",
    "success": true
  },
  "2498": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2499": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2500": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2501": {
    "text_logic_forms": [
      "Triangle(P,Q,R)",
      "Parallel(Line(S,T),Line(R,Q))",
      "Equals(LengthOf(Line(P,S)),12.5)",
      "Equals(LengthOf(Line(S,R)),5)",
      "Equals(LengthOf(Line(P,T)),15)",
      "Find(LengthOf(Line(T,Q)))"
    ],
    "output_text": "In [Triangle(P,Q,R)], [Parallel(Line(S,T),Line(R,Q))]. If [Equals(LengthOf(Line(P,S)),12.5)] [Equals(LengthOf(Line(S,R)),5)] and [Equals(LengthOf(Line(P,T)),15)] [Find(LengthOf(Line(T,Q)))].",
    "success": true
  },
  "2502": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "2503": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))].",
    "success": true
  },
  "2504": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest hundredth.",
    "success": true
  },
  "2505": {
    "text_logic_forms": [
      "Find(AreaOf(Rhombus($)))"
    ],
    "output_text": "[Find(AreaOf(Rhombus($)))].",
    "success": true
  },
  "2506": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Equals(LengthOf(Line(J,K)),2b+3)",
      "Equals(LengthOf(Line(J,M)),3a)",
      "Find(MeasureOf(Angle(K,J,L)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(MeasureOf(Angle(K,J,L)))] if [Equals(LengthOf(Line(J,K)),2b+3)] and [Equals(LengthOf(Line(J,M)),3a)].",
    "success": true
  },
  "2507": {
    "text_logic_forms": [
      "Similar(Triangle(J,L,M),Triangle(Q,S,T))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [Similar(Triangle(J,L,M),Triangle(Q,S,T))].",
    "success": true
  },
  "2508": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2509": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),123)",
      "Find(MeasureOf(Angle(14)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),123)] [Find(MeasureOf(Angle(14)))].",
    "success": true
  },
  "2510": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(J)),10)",
      "Equals(RadiusOf(Circle(K)),8)",
      "Equals(LengthOf(Line(B,C)),5.4)",
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(J)),10)] [Equals(RadiusOf(Circle(K)),8)] and [Equals(LengthOf(Line(B,C)),5.4)] [Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "2511": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2512": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2513": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2514": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(G,J)),8)",
      "Equals(LengthOf(Line(G,H)),12)",
      "Equals(LengthOf(Line(H,I)),4)",
      "Find(LengthOf(Line(K,J)))"
    ],
    "output_text": "[Find(LengthOf(Line(K,J)))] if [Equals(LengthOf(Line(G,J)),8)] [Equals(LengthOf(Line(G,H)),12)] and [Equals(LengthOf(Line(H,I)),4)].",
    "success": true
  },
  "2515": {
    "text_logic_forms": [
      "Congruent(Triangle(R,S,T),Triangle(A,B,C))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(R,S,T),Triangle(A,B,C))]. [Find(x)].",
    "success": true
  },
  "2516": {
    "text_logic_forms": [
      "Congruent(Triangle(R,S,V),Triangle(T,V,S))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(R,S,V),Triangle(T,V,S))]. [Find(x)].",
    "success": true
  },
  "2517": {
    "text_logic_forms": [
      "Line(B,A)",
      "Line(B,C)",
      "PointLiesOnLine(B,Line(A,C))",
      "BisectsAngle(Line(B,D),Angle(A,B,F))",
      "Equals(MeasureOf(Angle(F,B,C)),2x+25)",
      "Equals(MeasureOf(Angle(A,B,F)),10x-1)",
      "Find(MeasureOf(Angle(D,B,F)))"
    ],
    "output_text": "[Line(B,A)], [Line(B,C)], [PointLiesOnLine(B,Line(A,C))] and [BisectsAngle(Line(B,D),Angle(A,B,F))]. If [Equals(MeasureOf(Angle(F,B,C)),2x+25)] and [Equals(MeasureOf(Angle(A,B,F)),10x-1)] [Find(MeasureOf(Angle(D,B,F)))].",
    "success": true
  },
  "2518": {
    "text_logic_forms": [
      "Find(RatioOf(CosOf(Angle(X))))"
    ],
    "output_text": "[Find(RatioOf(CosOf(Angle(X))))] to nearest hundredth.",
    "success": true
  },
  "2519": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(R,C,M)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(R,C,M)))].",
    "success": true
  },
  "2520": {
    "text_logic_forms": [
      "Perpendicular(Line(A,B),Line(D,C))",
      "Perpendicular(Line(G,H),Line(F,E))",
      "Similar(Triangle(A,C,D),Triangle(G,E,F))",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Perpendicular(Line(A,B),Line(D,C))] and [Perpendicular(Line(G,H),Line(F,E))]. If [Similar(Triangle(A,C,D),Triangle(G,E,F))], [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2521": {
    "text_logic_forms": [
      "Equilateral(Triangle(R,S,T))",
      "Equals(LengthOf(Line(R,S)),x+9)",
      "Equals(LengthOf(Line(S,T)),2x)",
      "Equals(LengthOf(Line(R,T)),3x-9)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] for [Equilateral(Triangle(R,S,T))] if [Equals(LengthOf(Line(R,S)),x+9)] [Equals(LengthOf(Line(S,T)),2x)] and [Equals(LengthOf(Line(R,T)),3x-9)].",
    "success": true
  },
  "2522": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,E)),3)",
      "Equals(LengthOf(Line(A,B)),2)",
      "Equals(LengthOf(Line(B,C)),6)",
      "Equals(LengthOf(Line(E,D)),2x-3)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] if [Equals(LengthOf(Line(A,E)),3)] [Equals(LengthOf(Line(A,B)),2)] [Equals(LengthOf(Line(B,C)),6)] and [Equals(LengthOf(Line(E,D)),2x-3)].",
    "success": true
  },
  "2523": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(x)].",
    "success": true
  },
  "2524": {
    "text_logic_forms": [
      "Circle(Z)",
      "Equals(Angle(W,Z,X),Angle(X,Z,Y))",
      "Equals(MeasureOf(Angle(V,Z,U)),4x)",
      "Equals(MeasureOf(Angle(U,Z,Y)),2x+24)",
      "IsDiameterOf(Line(V,Y),Circle($))",
      "IsDiameterOf(Line(W,U),Circle($))",
      "Find(MeasureOf(Arc(W,U,X)))"
    ],
    "output_text": "In [Circle(Z)], [Equals(Angle(W,Z,X),Angle(X,Z,Y))], [Equals(MeasureOf(Angle(V,Z,U)),4x)] [Equals(MeasureOf(Angle(U,Z,Y)),2x+24)] and [IsDiameterOf(Line(V,Y),Circle($))], [IsDiameterOf(Line(W,U),Circle($))]. [Find(MeasureOf(Arc(W,U,X)))].",
    "success": true
  },
  "2525": {
    "text_logic_forms": [
      "Equals(PerimeterOf(Triangle(A,B,C)),25)",
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Equals(PerimeterOf(Triangle(A,B,C)),25)] [Find(x)]. Assume [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2526": {
    "text_logic_forms": [
      "Perpendicular(Line(A,B),Line(B,C))",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))] if [Perpendicular(Line(A,B),Line(B,C))].",
    "success": true
  },
  "2527": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2528": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "2529": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2530": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(K)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(K)))].",
    "success": true
  },
  "2531": {
    "text_logic_forms": [
      "Find(PerimeterOf(Triangle($)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle($)))]. Round to nearest hundredth.",
    "success": true
  },
  "2532": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2533": {
    "text_logic_forms": [
      "IsIncenterOf(Point(Q),Triangle(J,L,N))",
      "Find(LengthOf(Line(J,Q)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,Q)))] if [IsIncenterOf(Point(Q),Triangle(J,L,N))]. Rounded to nearest hundredth.",
    "success": true
  },
  "2534": {
    "text_logic_forms": [
      "Parallel(Line(E,B),Line(D,C))",
      "Find(x)"
    ],
    "output_text": "[Parallel(Line(E,B),Line(D,C))]. [Find(x)].",
    "success": true
  },
  "2535": {
    "text_logic_forms": [
      "Triangle($)",
      "Find(y)"
    ],
    "output_text": "[Triangle($)]. [Find(y)] to nearest tenth.",
    "success": true
  },
  "2536": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(A)),10)",
      "Equals(DiameterOf(Circle(B)),30)",
      "Equals(DiameterOf(Circle(C)),10)",
      "Equals(LengthOf(Line(A,Z)),Line(C,W))",
      "Equals(LengthOf(Line(C,W)),2)",
      "Find(LengthOf(Line(Z,X)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(A)),10)] [Equals(DiameterOf(Circle(B)),30)] [Equals(DiameterOf(Circle(C)),10)] [Find(LengthOf(Line(Z,X)))] if [Equals(LengthOf(Line(A,Z)),Line(C,W))] and [Equals(LengthOf(Line(C,W)),2)].",
    "success": true
  },
  "2537": {
    "text_logic_forms": [
      "Circle(F)",
      "IsDiameterOf(Line(A,C),Circle(F))",
      "Find(MeasureOf(Angle(A,F,B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,F,B)))] on [Circle(F)], [IsDiameterOf(Line(A,C),Circle(F))].",
    "success": true
  },
  "2538": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2539": {
    "text_logic_forms": [
      "Circle(M)",
      "Equals(LengthOf(Line(F,L)),24)",
      "Equals(LengthOf(Line(H,J)),48)",
      "Equals(MeasureOf(Arc(H,P)),65)",
      "Find(MeasureOf(Arc(P,J)))"
    ],
    "output_text": "In [Circle(M)], [Equals(LengthOf(Line(F,L)),24)] [Equals(LengthOf(Line(H,J)),48)] and [Equals(MeasureOf(Arc(H,P)),65)] [Find(MeasureOf(Arc(P,J)))].",
    "success": true
  },
  "2540": {
    "text_logic_forms": [
      "Perpendicular(Line(A,B),Line(B,C))",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))] if [Perpendicular(Line(A,B),Line(B,C))].",
    "success": true
  },
  "2541": {
    "text_logic_forms": [
      "Quadrilateral(A,B,C,D)",
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))] of [Quadrilateral(A,B,C,D)].",
    "success": true
  },
  "2542": {
    "text_logic_forms": [
      "Find(ScaleFactorOf(Shape(Q),Shape(Q')))"
    ],
    "output_text": "[Find(ScaleFactorOf(Shape(Q),Shape(Q')))].",
    "success": true
  },
  "2543": {
    "text_logic_forms": [
      "Similar(Triangle(B,C,D),Triangle(F,D,E))",
      "Equals(LengthOf(Line(C,D)),12)",
      "Equals(LengthOf(Line(F,D)),5)",
      "Equals(LengthOf(Line(F,E)),4)",
      "Equals(LengthOf(Line(D,E)),8)",
      "Find(PerimeterOf(Triangle(B,C,D)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(B,C,D)))], if [Similar(Triangle(B,C,D),Triangle(F,D,E))], [Equals(LengthOf(Line(C,D)),12)] [Equals(LengthOf(Line(F,D)),5)] [Equals(LengthOf(Line(F,E)),4)] and [Equals(LengthOf(Line(D,E)),8)].",
    "success": true
  },
  "2544": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Find(MeasureOf(Angle(K,L,M)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(MeasureOf(Angle(K,L,M)))].",
    "success": true
  },
  "2545": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "2546": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "2547": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2548": {
    "text_logic_forms": [
      "Rectangle(D,E,F,G)",
      "Equals(MeasureOf(Angle(E,D,F)),5x-3)",
      "Equals(MeasureOf(Angle(D,F,G)),3x+7)",
      "Find(MeasureOf(Angle(E,D,F)))"
    ],
    "output_text": " [Rectangle(D,E,F,G)]. If [Equals(MeasureOf(Angle(E,D,F)),5x-3)] and [Equals(MeasureOf(Angle(D,F,G)),3x+7)] [Find(MeasureOf(Angle(E,D,F)))].",
    "success": true
  },
  "2549": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,E)),m-2)",
      "Equals(LengthOf(Line(E,C)),m+4)",
      "Equals(LengthOf(Line(A,D)),4)",
      "Equals(LengthOf(Line(A,B)),20)",
      "Find(m)"
    ],
    "output_text": "If [Equals(LengthOf(Line(A,E)),m-2)] [Equals(LengthOf(Line(E,C)),m+4)] [Equals(LengthOf(Line(A,D)),4)] and [Equals(LengthOf(Line(A,B)),20)] [Find(m)].",
    "success": true
  },
  "2550": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(A,B)),2x+3)",
      "Equals(LengthOf(Line(B,C)),5x)",
      "Find(LengthOf(Line(A,D)))"
    ],
    "output_text": "In [Rhombus(A,B,C,D)], [Equals(LengthOf(Line(A,B)),2x+3)] and [Equals(LengthOf(Line(B,C)),5x)] [Find(LengthOf(Line(A,D)))].",
    "success": true
  },
  "2551": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(X,M)),4)",
      "Equals(LengthOf(Line(X,N)),6)",
      "Equals(LengthOf(Line(N,Z)),9)",
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(X,M)),4)] [Equals(LengthOf(Line(X,N)),6)] and [Equals(LengthOf(Line(N,Z)),9)] [Find(LengthOf(Line(X,Y)))].",
    "success": true
  },
  "2552": {
    "text_logic_forms": [],
    "output_text": "Which segments are parallel?",
    "success": false
  },
  "2553": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(11)),62)",
      "Equals(MeasureOf(Angle(14)),38)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(11)),62)] and [Equals(MeasureOf(Angle(14)),38)] [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2554": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2555": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Find(MeasureOf(Angle(J,K,L)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(MeasureOf(Angle(J,K,L)))].",
    "success": true
  },
  "2556": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2557": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2558": {
    "text_logic_forms": [
      "Equilateral(Triangle(Q,R,S))",
      "Triangle($)",
      "Find(LengthOf(Line(R,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(R,S)))] if [Equilateral(Triangle(Q,R,S))] [Triangle($)].",
    "success": true
  },
  "2559": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2560": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2561": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2562": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "2563": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Find(MeasureOf(Angle(K,J,L)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(MeasureOf(Angle(K,J,L)))].",
    "success": true
  },
  "2564": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. Round to nearest tenth.",
    "success": true
  },
  "2565": {
    "text_logic_forms": [
      "Find(TanOf(Angle(X)))"
    ],
    "output_text": "[Find(TanOf(Angle(X)))].",
    "success": true
  },
  "2566": {
    "text_logic_forms": [
      "Equals(AreaOf(Parallelogram($)),2000)",
      "Find(HeightOf(Parallelogram($)))"
    ],
    "output_text": "[Find(HeightOf(Parallelogram($)))], [Equals(AreaOf(Parallelogram($)),2000)].",
    "success": true
  },
  "2567": {
    "text_logic_forms": [
      "Rectangle(E,F,G,H)",
      "Equals(MeasureOf(Angle(H,G,E)),13)",
      "Find(MeasureOf(Angle(F,G,E)))"
    ],
    "output_text": " [Rectangle(E,F,G,H)]. If [Equals(MeasureOf(Angle(H,G,E)),13)] [Find(MeasureOf(Angle(F,G,E)))].",
    "success": true
  },
  "2568": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] in [Parallelogram($)].",
    "success": true
  },
  "2569": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(5)))].",
    "success": true
  },
  "2570": {
    "text_logic_forms": [
      "Tangent(Line(K,L),Circle(M))",
      "Find(x)"
    ],
    "output_text": ", [Tangent(Line(K,L),Circle(M))] at K. [Find(x)].",
    "success": false
  },
  "2571": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2572": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(M,P,Q)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(M,P,Q)))].",
    "success": true
  },
  "2573": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2574": {
    "text_logic_forms": [
      "IsDiameterOf(Line(G,J),Circle(K))",
      "Find(MeasureOf(Arc(G,L,J)))"
    ],
    "output_text": "[IsDiameterOf(Line(G,J),Circle(K))]. [Find(MeasureOf(Arc(G,L,J)))].",
    "success": true
  },
  "2575": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(S)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(S)))].",
    "success": true
  },
  "2576": {
    "text_logic_forms": [
      "Isosceles(Triangle(X,Y,Z))",
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,Y)))] of [Isosceles(Triangle(X,Y,Z))].",
    "success": true
  },
  "2577": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2578": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "2579": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))].",
    "success": true
  },
  "2580": {
    "text_logic_forms": [
      "IsDiameterOf(Line(A,B),Circle($))",
      "Equals(LengthOf(Line(A,C)),8)",
      "Equals(LengthOf(Line(B,C)),15)",
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[IsDiameterOf(Line(A,B),Circle($))], [Equals(LengthOf(Line(A,C)),8)] and [Equals(LengthOf(Line(B,C)),15)] [Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "2581": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "2582": {
    "text_logic_forms": [
      "Find(LengthOf(Line(P,N)))"
    ],
    "output_text": "[Find(LengthOf(Line(P,N)))].",
    "success": true
  },
  "2583": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(L,K)),4)",
      "Equals(LengthOf(Line(M,P)),3)",
      "Equals(LengthOf(Line(P,Q)),6)",
      "Equals(LengthOf(Line(K,J)),2)",
      "Equals(LengthOf(Line(R,S)),6)",
      "Equals(LengthOf(Line(L,P)),2)",
      "Find(LengthOf(Line(M,L)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(L,K)),4)] [Equals(LengthOf(Line(M,P)),3)] [Equals(LengthOf(Line(P,Q)),6)] [Equals(LengthOf(Line(K,J)),2)] [Equals(LengthOf(Line(R,S)),6)] and [Equals(LengthOf(Line(L,P)),2)] [Find(LengthOf(Line(M,L)))].",
    "success": true
  },
  "2584": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),101)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(4)),101)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "2585": {
    "text_logic_forms": [
      "Find(RatioOf(SinOf(Angle(P))))"
    ],
    "output_text": "[Find(RatioOf(SinOf(Angle(P))))] to nearest hundredth.",
    "success": true
  },
  "2586": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2587": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2588": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),x-12)",
      "Equals(MeasureOf(Angle(6)),72)",
      "Find(x)"
    ],
    "output_text": "[Equals(MeasureOf(Angle(3)),x-12)] and [Equals(MeasureOf(Angle(6)),72)] [Find(x)].",
    "success": true
  },
  "2589": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2590": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(G,H)),9)",
      "Equals(LengthOf(Line(G,K)),6)",
      "Equals(LengthOf(Line(K,J)),4)",
      "Find(LengthOf(Line(G,I)))"
    ],
    "output_text": "[Find(LengthOf(Line(G,I)))] if [Equals(LengthOf(Line(G,H)),9)] [Equals(LengthOf(Line(G,K)),6)] and [Equals(LengthOf(Line(K,J)),4)].",
    "success": true
  },
  "2591": {
    "text_logic_forms": [
      "Regular(Pentagon($))",
      "Square($)",
      "Equals(Line(X,Y),SideOf(Regular(Polygon($))))",
      "Equals(Line(X,Z),SideOf(Regular(Polygon($))))",
      "Regular(Polygon($))",
      "Polygon($)"
    ],
    "output_text": "[Regular(Pentagon($))] and[Square($)] share a mutual vertex X. [Equals(Line(X,Y),SideOf(Regular(Polygon($))))], [Equals(Line(X,Z),SideOf(Regular(Polygon($))))] of third [Regular(Polygon($))] with a vertex at X. How many sides does [Polygon($)] have?",
    "success": false
  },
  "2592": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))].",
    "success": true
  },
  "2593": {
    "text_logic_forms": [
      "Isosceles(Triangle(D,E,F))",
      "Find(SideOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(SideOf(Regular(Polygon($))))] in [Isosceles(Triangle(D,E,F))].",
    "success": true
  },
  "2594": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))].",
    "success": true
  },
  "2595": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(S)),30)",
      "Equals(DiameterOf(Circle(R)),20)",
      "Equals(LengthOf(Line(D,S)),9)",
      "Find(LengthOf(Line(R,C)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(S)),30)] [Equals(DiameterOf(Circle(R)),20)] and [Equals(LengthOf(Line(D,S)),9)] [Find(LengthOf(Line(R,C)))].",
    "success": true
  },
  "2596": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2597": {
    "text_logic_forms": [
      "InscribedIn(Equilateral(Pentagon(P,Q,R,S,T)),Circle(U))",
      "Find(MeasureOf(Arc(Q,R)))"
    ],
    "output_text": "[InscribedIn(Equilateral(Pentagon(P,Q,R,S,T)),Circle(U))]. [Find(MeasureOf(Arc(Q,R)))].",
    "success": true
  },
  "2598": {
    "text_logic_forms": [
      "Similar(Triangle(R,U,W),Triangle(S,T,V))",
      "Equals(LengthOf(Line(S,T)),24)",
      "Equals(LengthOf(Line(V,S)),12)",
      "Equals(LengthOf(Line(V,T)),18)",
      "Equals(LengthOf(Line(U,W)),21)",
      "Find(PerimeterOf(Triangle(R,U,W)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(R,U,W)))] if [Similar(Triangle(R,U,W),Triangle(S,T,V))], [Equals(LengthOf(Line(S,T)),24)] [Equals(LengthOf(Line(V,S)),12)] [Equals(LengthOf(Line(V,T)),18)] and [Equals(LengthOf(Line(U,W)),21)].",
    "success": true
  },
  "2599": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(S,T)),8)",
      "Equals(LengthOf(Line(T,R)),4)",
      "Equals(LengthOf(Line(P,T)),6)",
      "Find(LengthOf(Line(Q,R)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(S,T)),8)] [Equals(LengthOf(Line(T,R)),4)] and [Equals(LengthOf(Line(P,T)),6)] [Find(LengthOf(Line(Q,R)))].",
    "success": true
  },
  "2600": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2601": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,D)))].",
    "success": true
  },
  "2602": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2603": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(L,K)),4)",
      "Equals(LengthOf(Line(M,P)),3)",
      "Equals(LengthOf(Line(P,Q)),6)",
      "Equals(LengthOf(Line(K,J)),2)",
      "Equals(LengthOf(Line(R,S)),6)",
      "Equals(LengthOf(Line(L,P)),2)",
      "Find(LengthOf(Line(J,H)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(L,K)),4)] [Equals(LengthOf(Line(M,P)),3)] [Equals(LengthOf(Line(P,Q)),6)] [Equals(LengthOf(Line(K,J)),2)] [Equals(LengthOf(Line(R,S)),6)] and [Equals(LengthOf(Line(L,P)),2)] [Find(LengthOf(Line(J,H)))].",
    "success": true
  },
  "2604": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2605": {
    "text_logic_forms": [
      "Equals(MeasureOf(Arc(A,C)),160)",
      "Equals(MeasureOf(Angle(B,E,C)),38)",
      "Find(MeasureOf(Angle(A,E,B)))"
    ],
    "output_text": "[Equals(MeasureOf(Arc(A,C)),160)] and [Equals(MeasureOf(Angle(B,E,C)),38)] [Find(MeasureOf(Angle(A,E,B)))]?",
    "success": true
  },
  "2606": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2607": {
    "text_logic_forms": [
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "2608": {
    "text_logic_forms": [
      "Equilateral(Triangle(L,M,N))",
      "BisectsAngle(Line(M,P),Line(L,N))",
      "Find(y)"
    ],
    "output_text": "[Equilateral(Triangle(L,M,N))] and [BisectsAngle(Line(M,P),Line(L,N))]. [Find(y)].",
    "success": true
  },
  "2609": {
    "text_logic_forms": [
      "Circle(M)",
      "Equals(LengthOf(Line(F,L)),24)",
      "Equals(LengthOf(Line(H,J)),48)",
      "Equals(MeasureOf(Arc(H,P)),65)",
      "Find(MeasureOf(Arc(H,J)))"
    ],
    "output_text": "In [Circle(M)], [Equals(LengthOf(Line(F,L)),24)] [Equals(LengthOf(Line(H,J)),48)] and [Equals(MeasureOf(Arc(H,P)),65)] [Find(MeasureOf(Arc(H,J)))].",
    "success": true
  },
  "2610": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2611": {
    "text_logic_forms": [
      "Line(Q,P)",
      "Line(Q,R)",
      "PointLiesOnLine(Q,Line(P,R))",
      "BisectsAngle(Line(Q,T),Angle(S,Q,R))",
      "Equals(MeasureOf(Angle(S,Q,R)),6x+8)",
      "Equals(MeasureOf(Angle(T,Q,R)),4x-14)",
      "Find(MeasureOf(Angle(S,Q,T)))"
    ],
    "output_text": "[Line(Q,P)], [Line(Q,R)], [PointLiesOnLine(Q,Line(P,R))] and [BisectsAngle(Line(Q,T),Angle(S,Q,R))]. If [Equals(MeasureOf(Angle(S,Q,R)),6x+8)] and [Equals(MeasureOf(Angle(T,Q,R)),4x-14)] [Find(MeasureOf(Angle(S,Q,T)))].",
    "success": true
  },
  "2612": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2613": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2614": {
    "text_logic_forms": [
      "Equilateral(Triangle(E,F,G))",
      "BisectsAngle(Line(E,H),Angle(E))",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Equilateral(Triangle(E,F,G))] and [BisectsAngle(Line(E,H),Angle(E))]. [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2615": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2616": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2617": {
    "text_logic_forms": [
      "Triangle(D,E,F)",
      "Equals(MeasureOf(Angle(E)),108)",
      "Equals(MeasureOf(Angle(F)),26)",
      "Equals(f,20)",
      "Find(d)"
    ],
    "output_text": "In [Triangle(D,E,F)], [Equals(MeasureOf(Angle(E)),108)] [Equals(MeasureOf(Angle(F)),26)] and [Equals(f,20)] [Find(d)] to nearest whole number.",
    "success": true
  },
  "2618": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2619": {
    "text_logic_forms": [
      "Rectangle(E,F,G,H)",
      "Equals(LengthOf(Line(F,K)),32)",
      "Find(LengthOf(Line(E,G)))"
    ],
    "output_text": " [Rectangle(E,F,G,H)]. If [Equals(LengthOf(Line(F,K)),32)] [Find(LengthOf(Line(E,G)))].",
    "success": true
  },
  "2620": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2621": {
    "text_logic_forms": [
      "Find(LengthOf(Line(S,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(S,T)))].",
    "success": true
  },
  "2622": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(AreaOf(Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], [Find(AreaOf(Green(Shape($))))].",
    "success": true
  },
  "2623": {
    "text_logic_forms": [
      "Trapezoid(A,B,C,D)",
      "IsMidpointOf(Point(S),LegOf(Trapezoid(A,B,C,D)))",
      "IsMidpointOf(Point(T),LegOf(Trapezoid(A,B,C,D)))",
      "Equals(LengthOf(Line(A,B)),x+4)",
      "Equals(LengthOf(Line(C,D)),3x+2)",
      "Equals(LengthOf(Line(S,T)),9)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Trapezoid(A,B,C,D)], [IsMidpointOf(Point(S),LegOf(Trapezoid(A,B,C,D)))], [IsMidpointOf(Point(T),LegOf(Trapezoid(A,B,C,D)))],. If [Equals(LengthOf(Line(A,B)),x+4)] [Equals(LengthOf(Line(C,D)),3x+2)] and [Equals(LengthOf(Line(S,T)),9)] [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2624": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(9)),2x-4)",
      "Equals(MeasureOf(Angle(10)),2x+4)",
      "Find(MeasureOf(Angle(10)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(9)),2x-4)] [Equals(MeasureOf(Angle(10)),2x+4)] [Find(MeasureOf(Angle(10)))].",
    "success": true
  },
  "2625": {
    "text_logic_forms": [
      "Rectangle(D,E,F,G)",
      "Equals(MeasureOf(Angle(E,F,D)),2x-3)",
      "Equals(MeasureOf(Angle(D,F,G)),x+12)",
      "Find(MeasureOf(Angle(E,F,D)))"
    ],
    "output_text": " [Rectangle(D,E,F,G)]. If [Equals(MeasureOf(Angle(E,F,D)),2x-3)] and [Equals(MeasureOf(Angle(D,F,G)),x+12)] [Find(MeasureOf(Angle(E,F,D)))].",
    "success": true
  },
  "2626": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram(A,B,C,D)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram(A,B,C,D)))]?",
    "success": true
  },
  "2627": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2628": {
    "text_logic_forms": [
      "Circle(M)",
      "Equals(LengthOf(Line(F,L)),24)",
      "Equals(LengthOf(Line(H,J)),48)",
      "Equals(MeasureOf(Arc(H,P)),65)",
      "Find(LengthOf(Line(N,J)))"
    ],
    "output_text": "In [Circle(M)], [Equals(LengthOf(Line(F,L)),24)] [Equals(LengthOf(Line(H,J)),48)] and [Equals(MeasureOf(Arc(H,P)),65)] [Find(LengthOf(Line(N,J)))].",
    "success": true
  },
  "2629": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(9)),75)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(9)),75)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "2630": {
    "text_logic_forms": [
      "BisectsAngle(Line(B,F),Angle(A,B,C))",
      "Parallel(Line(A,C),Line(E,D))",
      "Equals(LengthOf(Line(B,A)),6)",
      "Equals(LengthOf(Line(B,C)),7.5)",
      "Equals(LengthOf(Line(A,C)),9)",
      "Equals(LengthOf(Line(D,E)),9)",
      "Find(LengthOf(Line(B,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,D)))] if [BisectsAngle(Line(B,F),Angle(A,B,C))] and [Parallel(Line(A,C),Line(E,D))], [Equals(LengthOf(Line(B,A)),6)] [Equals(LengthOf(Line(B,C)),7.5)] [Equals(LengthOf(Line(A,C)),9)] and [Equals(LengthOf(Line(D,E)),9)].",
    "success": true
  },
  "2631": {
    "text_logic_forms": [
      "Parallel(Line(a),Line(b))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(a),Line(b))].",
    "success": true
  },
  "2632": {
    "text_logic_forms": [
      "Similar(Triangle(A,B,C),Triangle(D,E,F))",
      "IsMedianOf(Line(B,G),Triangle(A,B,C))",
      "IsMedianOf(Line(E,H),Triangle(D,E,F))",
      "Equals(LengthOf(Line(B,C)),30)",
      "Equals(LengthOf(Line(B,G)),15)",
      "Equals(LengthOf(Line(E,F)),15)",
      "Find(LengthOf(Line(E,H)))"
    ],
    "output_text": ", [Similar(Triangle(A,B,C),Triangle(D,E,F))]. [IsMedianOf(Line(B,G),Triangle(A,B,C))] and [IsMedianOf(Line(E,H),Triangle(D,E,F))]. [Find(LengthOf(Line(E,H)))] if [Equals(LengthOf(Line(B,C)),30)] [Equals(LengthOf(Line(B,G)),15)] and [Equals(LengthOf(Line(E,F)),15)].",
    "success": true
  },
  "2633": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(2)),2x)",
      "Equals(MeasureOf(Angle(3)),x)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(2)),2x)] [Equals(MeasureOf(Angle(3)),x)] [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2634": {
    "text_logic_forms": [
      "IsMidsegmentOf(Line(X,Y),Triangle(R,S,T))",
      "IsMidsegmentOf(Line(X,Z),Triangle(R,S,T))",
      "Find(LengthOf(Line(S,T)))"
    ],
    "output_text": "[IsMidsegmentOf(Line(X,Y),Triangle(R,S,T))], [IsMidsegmentOf(Line(X,Z),Triangle(R,S,T))]. [Find(LengthOf(Line(S,T)))].",
    "success": true
  },
  "2635": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(E,X)),24)",
      "Equals(LengthOf(Line(D,E)),7)",
      "Find(LengthOf(Line(T,X)))"
    ],
    "output_text": "[Find(LengthOf(Line(T,X)))] if [Equals(LengthOf(Line(E,X)),24)] and [Equals(LengthOf(Line(D,E)),7)].",
    "success": true
  },
  "2636": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2637": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth?",
    "success": true
  },
  "2638": {
    "text_logic_forms": [
      "Isosceles(Triangle(K,L,N))",
      "Isosceles(Triangle(L,M,N))",
      "Equals(MeasureOf(Angle(J,K,N)),130)",
      "Find(MeasureOf(Angle(J)))"
    ],
    "output_text": "[Isosceles(Triangle(K,L,N))], [Isosceles(Triangle(L,M,N))] and [Equals(MeasureOf(Angle(J,K,N)),130)] [Find(MeasureOf(Angle(J)))].",
    "success": true
  },
  "2639": {
    "text_logic_forms": [
      "Find(LengthOf(Line(Q,M)))"
    ],
    "output_text": "[Find(LengthOf(Line(Q,M)))].",
    "success": true
  },
  "2640": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2641": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A,B,C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,B,C)))].",
    "success": true
  },
  "2642": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2643": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2644": {
    "text_logic_forms": [
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "2645": {
    "text_logic_forms": [
      "Triangle($)",
      "Find(h)"
    ],
    "output_text": "[Find(h)] in [Triangle($)].",
    "success": true
  },
  "2646": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))] to nearest tenth.",
    "success": true
  },
  "2647": {
    "text_logic_forms": [
      "Parallel(Line(m),Line(n))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(m),Line(n))].",
    "success": true
  },
  "2648": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2649": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2650": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2651": {
    "text_logic_forms": [
      "InscribedIn(Quadrilateral(A,B,C,D),Circle(Z))",
      "Equals(MeasureOf(Angle(B,Z,A)),104)",
      "Equals(MeasureOf(Arc(C,B)),94)",
      "Parallel(Line(A,B),Line(D,C))",
      "Find(MeasureOf(Angle(Z,A,C)))"
    ],
    "output_text": "[InscribedIn(Quadrilateral(A,B,C,D),Circle(Z))] [Equals(MeasureOf(Angle(B,Z,A)),104)] [Equals(MeasureOf(Arc(C,B)),94)] and [Parallel(Line(A,B),Line(D,C))]. [Find(MeasureOf(Angle(Z,A,C)))].",
    "success": true
  },
  "2652": {
    "text_logic_forms": [
      "Equals(a,14)",
      "Equals(b,48)",
      "Equals(c,50)",
      "Find(SinOf(Angle(A)))"
    ],
    "output_text": "[Equals(a,14)] [Equals(b,48)] and [Equals(c,50)] [Find(SinOf(Angle(A)))].",
    "success": true
  },
  "2653": {
    "text_logic_forms": [
      "Rectangle(W,X,Y,Z)",
      "Equals(MeasureOf(Angle(1)),30)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": " [Rectangle(W,X,Y,Z)]. [Find(MeasureOf(Angle(6)))] if [Equals(MeasureOf(Angle(1)),30)].",
    "success": true
  },
  "2654": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "2655": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2656": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2657": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2658": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2659": {
    "text_logic_forms": [
      "Equilateral(Triangle(I,W,N))",
      "Equals(LengthOf(Line(W,N)),5)",
      "Find(Arc(W,N))"
    ],
    "output_text": "[Find(Arc(W,N))] if [Equilateral(Triangle(I,W,N))] and [Equals(LengthOf(Line(W,N)),5)].",
    "success": true
  },
  "2660": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2661": {
    "text_logic_forms": [
      "IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))",
      "Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))"
    ],
    "output_text": "[Find(LengthOf(AltitudeOf(Triangle($1,$2,$3))))], [IsHypotenuseOf(Line($1,$3),Triangle($1,$2,$3))].",
    "success": true
  },
  "2662": {
    "text_logic_forms": [
      "IsDiameterOf(Line(H,K),Circle(L))",
      "IsDiameterOf(Line(I,G),Circle(L))",
      "Find(MeasureOf(Arc(I,H,J)))"
    ],
    "output_text": "[IsDiameterOf(Line(H,K),Circle(L))], [IsDiameterOf(Line(I,G),Circle(L))]. [Find(MeasureOf(Arc(I,H,J)))].",
    "success": true
  },
  "2663": {
    "text_logic_forms": [
      "Equals(AreaOf(Trapezoid(G,H,J,K)),188.35)",
      "Equals(Line(H,J),16.5)",
      "Find(LengthOf(Line(G,K)))"
    ],
    "output_text": "[Equals(AreaOf(Trapezoid(G,H,J,K)),188.35)] If [Equals(Line(H,J),16.5)] [Find(LengthOf(Line(G,K)))].",
    "success": true
  },
  "2664": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(A)),10)",
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))] if [Equals(MeasureOf(Angle(A)),10)]?",
    "success": true
  },
  "2665": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(x)].",
    "success": true
  },
  "2666": {
    "text_logic_forms": [
      "Parallel(Line(E,B),Line(D,C))",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Parallel(Line(E,B),Line(D,C))]. [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2667": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(D,A,B)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(D,A,B)))].",
    "success": true
  },
  "2668": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2669": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2670": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(MeasureOf(Angle(2)),40)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. [Equals(MeasureOf(Angle(2)),40)] [Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2671": {
    "text_logic_forms": [
      "Find(LengthOf(Line(K,L)))"
    ],
    "output_text": "[Find(LengthOf(Line(K,L)))].",
    "success": true
  },
  "2672": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2673": {
    "text_logic_forms": [
      "Circle(R)",
      "Find(LengthOf(Line(T,V)))"
    ],
    "output_text": "In [Circle(R)], [Find(LengthOf(Line(T,V)))]. Round to nearest hundredth.",
    "success": true
  },
  "2674": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(MeasureOf(Angle(D,F,A)),50)",
      "Perpendicular(Line(C,F),Line(F,B))",
      "Find(MeasureOf(Arc(A,C,E)))"
    ],
    "output_text": "In [Circle(F)], [Equals(MeasureOf(Angle(D,F,A)),50)] and [Perpendicular(Line(C,F),Line(F,B))]. [Find(MeasureOf(Arc(A,C,E)))].",
    "success": true
  },
  "2675": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2676": {
    "text_logic_forms": [
      "Parallel(Line(M,N),Line(B,C))",
      "Find(x)"
    ],
    "output_text": "[Parallel(Line(M,N),Line(B,C))]. [Find(x)].",
    "success": true
  },
  "2677": {
    "text_logic_forms": [
      "Equals(PerimeterOf(Polygon($)),60)",
      "Find(LengthOf(SideOf(Polygon($))))"
    ],
    "output_text": "[Equals(PerimeterOf(Polygon($)),60)] [Find(LengthOf(SideOf(Polygon($))))].",
    "success": true
  },
  "2678": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(2)),2x)",
      "Equals(MeasureOf(Angle(3)),x)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(2)),2x)] [Equals(MeasureOf(Angle(3)),x)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2679": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "diagram shows layout of Elm, Plum and Oak streets. [Find(x)].",
    "success": false
  },
  "2680": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "2681": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2682": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2683": {
    "text_logic_forms": [
      "Find(LengthOf(Line(P,Q)))"
    ],
    "output_text": "[Find(LengthOf(Line(P,Q)))].",
    "success": true
  },
  "2684": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2685": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "2686": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A,B,C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,B,C)))].",
    "success": true
  },
  "2687": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(A)),10)",
      "Equals(DiameterOf(Circle(B)),30)",
      "Equals(DiameterOf(Circle(C)),10)",
      "Equals(LengthOf(Line(A,Z)),Line(C,W))",
      "Equals(LengthOf(Line(C,W)),2)",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(A)),10)] [Equals(DiameterOf(Circle(B)),30)] [Equals(DiameterOf(Circle(C)),10)] [Find(LengthOf(Line(A,C)))] if [Equals(LengthOf(Line(A,Z)),Line(C,W))] and [Equals(LengthOf(Line(C,W)),2)].",
    "success": true
  },
  "2688": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(t)"
    ],
    "output_text": "[Find(t)] in [Parallelogram($)].",
    "success": true
  },
  "2689": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2690": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2691": {
    "text_logic_forms": [
      "Find(LengthOf(Line(Q,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(Q,S)))].",
    "success": true
  },
  "2692": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2693": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2694": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,R)",
      "Find(MeasureOf(Angle(M,N,P)))"
    ],
    "output_text": "Use [Parallelogram(M,N,P,R)] to [Find(MeasureOf(Angle(M,N,P)))].",
    "success": true
  },
  "2695": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(L,P)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(L,P)))].",
    "success": true
  },
  "2696": {
    "text_logic_forms": [
      "Isosceles(Triangle(A,B,C))",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,C)))] in [Isosceles(Triangle(A,B,C))].",
    "success": true
  },
  "2697": {
    "text_logic_forms": [
      "Parallel(Line(A,B),Line(D,C))",
      "Find(x)"
    ],
    "output_text": "If [Parallel(Line(A,B),Line(D,C))], [Find(x)].",
    "success": true
  },
  "2698": {
    "text_logic_forms": [
      "Congruent(Triangle(W,T,Y),Triangle(T,W,Y))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(W,T,Y),Triangle(T,W,Y))]. [Find(x)].",
    "success": true
  },
  "2699": {
    "text_logic_forms": [
      "Circle(X)",
      "Equals(LengthOf(Line(A,B)),30)",
      "Equals(LengthOf(Line(C,D)),30)",
      "Equals(MeasureOf(Arc(C,Z)),40)",
      "Find(LengthOf(Line(N,D)))"
    ],
    "output_text": "In [Circle(X)], [Equals(LengthOf(Line(A,B)),30)] [Equals(LengthOf(Line(C,D)),30)] and [Equals(MeasureOf(Arc(C,Z)),40)] [Find(LengthOf(Line(N,D)))].",
    "success": true
  },
  "2700": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2701": {
    "text_logic_forms": [
      "Parallelogram(W,X,Y,Z)",
      "Find(MeasureOf(Angle(X,Y,Z)))"
    ],
    "output_text": "Use [Parallelogram(W,X,Y,Z)] to [Find(MeasureOf(Angle(X,Y,Z)))].",
    "success": true
  },
  "2702": {
    "text_logic_forms": [
      "Triangle(P,Q,R)",
      "Equals(LengthOf(Line(Z,Q)),3a-11)",
      "Equals(LengthOf(Line(Z,P)),a+5)",
      "Equals(LengthOf(Line(P,Y)),2c-1)",
      "Equals(LengthOf(Line(Y,R)),4c-11)",
      "Equals(MeasureOf(Angle(P,R,Z)),4b-17)",
      "Equals(MeasureOf(Angle(Z,R,Q)),3b-4)",
      "Equals(MeasureOf(Angle(Q,Y,R)),7b+6)",
      "Equals(MeasureOf(Angle(P,X,R)),2a+10)",
      "BisectsAngle(Line(R,Z),Angle($))",
      "Find(MeasureOf(Angle(P,R,Z)))"
    ],
    "output_text": "In [Triangle(P,Q,R)], [Equals(LengthOf(Line(Z,Q)),3a-11)] [Equals(LengthOf(Line(Z,P)),a+5)] [Equals(LengthOf(Line(P,Y)),2c-1)] [Equals(LengthOf(Line(Y,R)),4c-11)] [Equals(MeasureOf(Angle(P,R,Z)),4b-17)] [Equals(MeasureOf(Angle(Z,R,Q)),3b-4)] [Equals(MeasureOf(Angle(Q,Y,R)),7b+6)] and [Equals(MeasureOf(Angle(P,X,R)),2a+10)] If [BisectsAngle(Line(R,Z),Angle($))], [Find(MeasureOf(Angle(P,R,Z)))].",
    "success": true
  },
  "2703": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2704": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),357)",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Equals(AreaOf(Shape(A)),357)].",
    "success": true
  },
  "2705": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "2706": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2707": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2708": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2709": {
    "text_logic_forms": [
      "Equals(RadiusOf(Circle(J)),10)",
      "Equals(RadiusOf(Circle(K)),8)",
      "Equals(LengthOf(Line(B,C)),5.4)",
      "Find(LengthOf(Line(C,K)))"
    ],
    "output_text": "[Equals(RadiusOf(Circle(J)),10)] [Equals(RadiusOf(Circle(K)),8)] and [Equals(LengthOf(Line(B,C)),5.4)] [Find(LengthOf(Line(C,K)))].",
    "success": true
  },
  "2710": {
    "text_logic_forms": [
      "Rectangle(W,X,Y,Z)",
      "Equals(MeasureOf(Angle(1)),30)",
      "Find(MeasureOf(Angle(5)))"
    ],
    "output_text": " [Rectangle(W,X,Y,Z)]. [Find(MeasureOf(Angle(5)))] if [Equals(MeasureOf(Angle(1)),30)].",
    "success": true
  },
  "2711": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2712": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(D,B)),24)",
      "Equals(LengthOf(Line(A,E)),3)",
      "Equals(LengthOf(Line(E,C)),18)",
      "Find(LengthOf(Line(A,D)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(D,B)),24)] [Equals(LengthOf(Line(A,E)),3)] and [Equals(LengthOf(Line(E,C)),18)] [Find(LengthOf(Line(A,D)))].",
    "success": true
  },
  "2713": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(C,D,F)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(C,D,F)))].",
    "success": true
  },
  "2714": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(B)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(B)))].",
    "success": true
  },
  "2715": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "2716": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2717": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),43)",
      "Find(MeasureOf(Angle(11)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),43)] [Find(MeasureOf(Angle(11)))].",
    "success": true
  },
  "2718": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2719": {
    "text_logic_forms": [
      "Shape($)",
      "Parallel(Line(p),Line(q))",
      "Find(MeasureOf(Angle(F,C,E)))"
    ],
    "output_text": "[Shape($)]. [Find(MeasureOf(Angle(F,C,E)))] if [Parallel(Line(p),Line(q))].",
    "success": true
  },
  "2720": {
    "text_logic_forms": [
      "Rectangle(L,M,N,P)",
      "Parallelogram(L,K,M,J)",
      "Equals(LengthOf(Line(L,N)),10)",
      "Equals(LengthOf(Line(L,J)),2x+1)",
      "Equals(LengthOf(Line(P,J)),3x-1)",
      "Find(x)"
    ],
    "output_text": "Use [Rectangle(L,M,N,P)], [Parallelogram(L,K,M,J)] to. If [Equals(LengthOf(Line(L,N)),10)] [Equals(LengthOf(Line(L,J)),2x+1)] and [Equals(LengthOf(Line(P,J)),3x-1)] [Find(x)].",
    "success": true
  },
  "2721": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(K,L))",
      "Equals(LengthOf(Line(K,N)),9)",
      "Equals(LengthOf(Line(L,N)),16)",
      "Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))",
      "Find(LengthOf(Line(K,M)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(K,L))], [Equals(LengthOf(Line(K,N)),9)] [Equals(LengthOf(Line(L,N)),16)] and [Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))], [Find(LengthOf(Line(K,M)))].",
    "success": true
  },
  "2722": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(y)"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(y)].",
    "success": true
  },
  "2723": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2724": {
    "text_logic_forms": [
      "Congruent(Triangle(L,M,N),Triangle(Q,R,S))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(L,M,N),Triangle(Q,R,S))]. [Find(x)].",
    "success": true
  },
  "2725": {
    "text_logic_forms": [
      "Equals(DiameterOf(Circle(A)),10)",
      "Equals(DiameterOf(Circle(B)),30)",
      "Equals(DiameterOf(Circle(C)),10)",
      "Equals(LengthOf(Line(A,Z)),Line(C,W))",
      "Equals(LengthOf(Line(C,W)),2)",
      "Find(LengthOf(Line(Y,W)))"
    ],
    "output_text": "[Equals(DiameterOf(Circle(A)),10)] [Equals(DiameterOf(Circle(B)),30)] [Equals(DiameterOf(Circle(C)),10)] [Find(LengthOf(Line(Y,W)))] if [Equals(LengthOf(Line(A,Z)),Line(C,W))] and [Equals(LengthOf(Line(C,W)),2)].",
    "success": true
  },
  "2726": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2727": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Z)))] to nearest tenth.",
    "success": true
  },
  "2728": {
    "text_logic_forms": [
      "Circle($)",
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))] formed by [Circle($)] and [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "2729": {
    "text_logic_forms": [
      "Parallelogram(M,N,P,R)",
      "Find(x)"
    ],
    "output_text": "Use [Parallelogram(M,N,P,R)] to [Find(x)].",
    "success": true
  },
  "2730": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(G,F)))"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(G,F)))].",
    "success": true
  },
  "2731": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2732": {
    "text_logic_forms": [
      "InscribedIn(Square($),Circle($))",
      "Equals(RadiusOf(Circle($)),6)",
      "Find(LengthOf(SideOf(Square($))))"
    ],
    "output_text": "[InscribedIn(Square($),Circle($))], [Equals(RadiusOf(Circle($)),6)] [Find(LengthOf(SideOf(Square($))))].",
    "success": true
  },
  "2733": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2734": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2735": {
    "text_logic_forms": [
      "Find(AreaOf(Trapezoid($)))"
    ],
    "output_text": "[Find(AreaOf(Trapezoid($)))].",
    "success": true
  },
  "2736": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "2737": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest hundredth.",
    "success": true
  },
  "2738": {
    "text_logic_forms": [
      "Find(RatioOf(TanOf(Angle(L))))"
    ],
    "output_text": "[Find(RatioOf(TanOf(Angle(L))))] to nearest hundredth.",
    "success": true
  },
  "2739": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))].",
    "success": true
  },
  "2740": {
    "text_logic_forms": [
      "Circle(S)",
      "Equals(MeasureOf(Arc(P,Q,R)),98)",
      "Find(MeasureOf(Arc(P,Q)))"
    ],
    "output_text": "In [Circle(S)], [Equals(MeasureOf(Arc(P,Q,R)),98)] [Find(MeasureOf(Arc(P,Q)))].",
    "success": true
  },
  "2741": {
    "text_logic_forms": [
      "InscribedIn(Equilateral(Pentagon(P,Q,R,S,T)),Circle(U))",
      "Find(MeasureOf(Angle(P,S,R)))"
    ],
    "output_text": "[InscribedIn(Equilateral(Pentagon(P,Q,R,S,T)),Circle(U))]. [Find(MeasureOf(Angle(P,S,R)))].",
    "success": true
  },
  "2742": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2743": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2744": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(C,D,A)),61)",
      "Find(MeasureOf(Angle(A,B,C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A,B,C)))] if [Equals(MeasureOf(Angle(C,D,A)),61)].",
    "success": true
  },
  "2745": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Equals(PerimeterOf(Quadrilateral(A,B,C,D)),22)",
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": " [Parallelogram(A,B,C,D)]. [Equals(PerimeterOf(Quadrilateral(A,B,C,D)),22)] [Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2746": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2747": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest hundredth, if necessary.",
    "success": true
  },
  "2748": {
    "text_logic_forms": [
      "Parallel(Line(d),Line(X,Z))"
    ],
    "output_text": "Which of following facts would be sufficient to prove [Parallel(Line(d),Line(X,Z))]?",
    "success": true
  },
  "2749": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(Z,P)),4x-9)",
      "Equals(LengthOf(Line(P,Y)),2x+5)",
      "Find(LengthOf(Line(Z,X)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(Z,P)),4x-9)] and [Equals(LengthOf(Line(P,Y)),2x+5)] [Find(LengthOf(Line(Z,X)))].",
    "success": true
  },
  "2750": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2751": {
    "text_logic_forms": [
      "Equals(RatioOf(Line(I,J),Line(X,J)),RatioOf(Line(H,J),Line(Y,J)))",
      "Equals(MeasureOf(Angle(W,X,J)),130)",
      "Equals(MeasureOf(Angle(W,Z,G)),20)",
      "Find(MeasureOf(Angle(Y,I,Z)))"
    ],
    "output_text": "If [Equals(RatioOf(Line(I,J),Line(X,J)),RatioOf(Line(H,J),Line(Y,J)))], [Equals(MeasureOf(Angle(W,X,J)),130)] and [Equals(MeasureOf(Angle(W,Z,G)),20)] [Find(MeasureOf(Angle(Y,I,Z)))].",
    "success": true
  },
  "2752": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),50)",
      "Equals(MeasureOf(Angle(3)),60)",
      "Find(MeasureOf(Angle(6)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),50)] and [Equals(MeasureOf(Angle(3)),60)] [Find(MeasureOf(Angle(6)))].",
    "success": true
  },
  "2753": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2754": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2755": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(H)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(H)))].",
    "success": true
  },
  "2756": {
    "text_logic_forms": [
      "Similar(Triangle(W,Z,X),Triangle(S,R,T))",
      "Equals(LengthOf(Line(S,T)),6)",
      "Equals(LengthOf(Line(W,X)),5)",
      "Equals(PerimeterOf(Triangle(S,R,T)),15)",
      "Find(PerimeterOf(Triangle(W,Z,X)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(W,Z,X)))], if [Similar(Triangle(W,Z,X),Triangle(S,R,T))], [Equals(LengthOf(Line(S,T)),6)] [Equals(LengthOf(Line(W,X)),5)] and [Equals(PerimeterOf(Triangle(S,R,T)),15)].",
    "success": true
  },
  "2757": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),4p+15)",
      "Equals(MeasureOf(Angle(3)),3p-10)",
      "Equals(MeasureOf(Angle(4)),6r+5)",
      "Find(p)"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),4p+15)] [Equals(MeasureOf(Angle(3)),3p-10)] and [Equals(MeasureOf(Angle(4)),6r+5)] [Find(p)].",
    "success": true
  },
  "2758": {
    "text_logic_forms": [
      "Equals(AreaOf(Trapezoid(G,H,J,K)),75)",
      "Find(HeightOf(Polygon($)))"
    ],
    "output_text": "[Equals(AreaOf(Trapezoid(G,H,J,K)),75)] [Find(HeightOf(Polygon($)))].",
    "success": true
  },
  "2759": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram(J,K,L,M)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram(J,K,L,M)))].",
    "success": true
  },
  "2760": {
    "text_logic_forms": [
      "IsDiameterOf(Line(D,F),Circle(A))",
      "IsDiameterOf(Line(P,G),Circle(A))",
      "Equals(LengthOf(Line(D,F)),10)",
      "Find(LengthOf(Line(D,A)))"
    ],
    "output_text": "[IsDiameterOf(Line(D,F),Circle(A))], [IsDiameterOf(Line(P,G),Circle(A))]. If [Equals(LengthOf(Line(D,F)),10)] [Find(LengthOf(Line(D,A)))].",
    "success": true
  },
  "2761": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2762": {
    "text_logic_forms": [
      "Similar(Triangle(A,B,C),Triangle(F,D,G))",
      "Find(x)"
    ],
    "output_text": "[Similar(Triangle(A,B,C),Triangle(F,D,G))]. [Find(x)].",
    "success": true
  },
  "2763": {
    "text_logic_forms": [
      "IsDiagonalOf(Line(A,C),Rhombus(A,B,C,D))",
      "Equals(MeasureOf(Angle(C,D,E)),116)",
      "Find(MeasureOf(Angle(A,C,D)))"
    ],
    "output_text": "[IsDiagonalOf(Line(A,C),Rhombus(A,B,C,D))]. If [Equals(MeasureOf(Angle(C,D,E)),116)] [Find(MeasureOf(Angle(A,C,D)))]?",
    "success": true
  },
  "2764": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2765": {
    "text_logic_forms": [
      "Find(ScaleFactorOf(Shape(B),Shape(B')))"
    ],
    "output_text": "[Find(ScaleFactorOf(Shape(B),Shape(B')))].",
    "success": true
  },
  "2766": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2767": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2768": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),50)",
      "Equals(MeasureOf(Angle(3)),60)",
      "Find(MeasureOf(Angle(4)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),50)] and [Equals(MeasureOf(Angle(3)),60)] [Find(MeasureOf(Angle(4)))].",
    "success": true
  },
  "2769": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "2770": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(A)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(A)))].",
    "success": true
  },
  "2771": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2772": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(X,Z)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(X,Z)))].",
    "success": true
  },
  "2773": {
    "text_logic_forms": [
      "IsIncenterOf(Point(P),Triangle(A,E,C))",
      "Find(MeasureOf(Angle(D,E,P)))"
    ],
    "output_text": "[IsIncenterOf(Point(P),Triangle(A,E,C))]. [Find(MeasureOf(Angle(D,E,P)))].",
    "success": true
  },
  "2774": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2775": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallelogram($)]",
    "success": true
  },
  "2776": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Equals(MeasureOf(Angle(2)),40)",
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. [Equals(MeasureOf(Angle(2)),40)] [Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "2777": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2778": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2779": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2780": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(9)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(9)))].",
    "success": true
  },
  "2781": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(A,B,C)),70)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "If [Rhombus(A,B,C,D)] and [Equals(MeasureOf(Angle(A,B,C)),70)] [Find(MeasureOf(Angle(1)))]?",
    "success": true
  },
  "2782": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2783": {
    "text_logic_forms": [
      "Find(LengthOf(Arc(J,K)))"
    ],
    "output_text": "[Find(LengthOf(Arc(J,K)))]. Round to nearest hundredth.",
    "success": true
  },
  "2784": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2785": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2786": {
    "text_logic_forms": [
      "Find(LengthOf(Line(X,W)))"
    ],
    "output_text": "[Find(LengthOf(Line(X,W)))].",
    "success": true
  },
  "2787": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(Q,T,S)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(Q,T,S)))].",
    "success": true
  },
  "2788": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2789": {
    "text_logic_forms": [
      "Circle(T)",
      "Equals(LengthOf(Line(Z,V)),1)",
      "Equals(LengthOf(Line(T,W)),13)",
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": "In [Circle(T)], [Equals(LengthOf(Line(Z,V)),1)] and [Equals(LengthOf(Line(T,W)),13)] [Find(LengthOf(Line(X,Y)))].",
    "success": true
  },
  "2790": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(U,J)),9)",
      "Equals(LengthOf(Line(V,J)),3)",
      "Equals(LengthOf(Line(Z,T)),18)",
      "Find(LengthOf(Line(S,V)))"
    ],
    "output_text": "[Equals(LengthOf(Line(U,J)),9)] [Equals(LengthOf(Line(V,J)),3)] and [Equals(LengthOf(Line(Z,T)),18)] [Find(LengthOf(Line(S,V)))].",
    "success": true
  },
  "2791": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(F,G)),18)",
      "Equals(LengthOf(Line(G,H)),42)",
      "Equals(LengthOf(Line(F,K)),15)",
      "Find(a)"
    ],
    "output_text": "[Find(a)], if [Equals(LengthOf(Line(F,G)),18)] [Equals(LengthOf(Line(G,H)),42)] and [Equals(LengthOf(Line(F,K)),15)].",
    "success": true
  },
  "2792": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))] if [Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))].",
    "success": true
  },
  "2793": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(y)"
    ],
    "output_text": "[Find(y)] so [Parallelogram($)]",
    "success": true
  },
  "2794": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(ScaleFactorOf(Blue(Shape($)),Green(Shape($))))].",
    "success": true
  },
  "2795": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Z)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Z)))].",
    "success": true
  },
  "2796": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(Y,X,Z)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(Y,X,Z)))].",
    "success": true
  },
  "2797": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(R,L)),5)",
      "Equals(LengthOf(Line(R,T)),9)",
      "Equals(LengthOf(Line(W,S)),6)",
      "Find(LengthOf(Line(R,W)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(R,L)),5)] [Equals(LengthOf(Line(R,T)),9)] and [Equals(LengthOf(Line(W,S)),6)] [Find(LengthOf(Line(R,W)))].",
    "success": true
  },
  "2798": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "2799": {
    "text_logic_forms": [
      "IsChordOf(Line(A,C),Circle($))",
      "IsChordOf(Line(D,F),Circle($))",
      "Line(A,C)",
      "Line(D,F)",
      "Equals(RadiusOf(Circle(G)),26)",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[IsChordOf(Line(A,C),Circle($))], [IsChordOf(Line(D,F),Circle($))]. [Line(A,C)] and [Line(D,F)] are equidistant from center. If [Equals(RadiusOf(Circle(G)),26)] [Find(LengthOf(Line(A,C)))].",
    "success": false
  },
  "2800": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2801": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(A,C,D)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(A,C,D)))].",
    "success": true
  },
  "2802": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(C,A,D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C,A,D)))].",
    "success": true
  },
  "2803": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest hundredth.",
    "success": true
  },
  "2804": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2805": {
    "text_logic_forms": [
      "Circle(O)",
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Equals(Angle(B,O,D),Angle(D,O,E))",
      "Equals(Angle(D,O,E),Angle(E,O,F))",
      "Equals(Angle(E,O,F),Angle(F,O,A))",
      "Find(MeasureOf(Arc(A,E)))"
    ],
    "output_text": "[Circle(O)], [IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))] and [Equals(Angle(B,O,D),Angle(D,O,E))], [Equals(Angle(D,O,E),Angle(E,O,F))], [Equals(Angle(E,O,F),Angle(F,O,A))]. [Find(MeasureOf(Arc(A,E)))].",
    "success": true
  },
  "2806": {
    "text_logic_forms": [
      "Quadrilateral(A,B,C,D)",
      "Find(MeasureOf(Angle(C)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(C)))] of [Quadrilateral(A,B,C,D)].",
    "success": true
  },
  "2807": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2808": {
    "text_logic_forms": [
      "Perpendicular(Line(B,E),Line(A,D))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Perpendicular(Line(B,E),Line(A,D))].",
    "success": true
  },
  "2809": {
    "text_logic_forms": [
      "Equals(Triangle($),3)",
      "LengthOf(Triangle($))"
    ],
    "output_text": "ratio of measure of angles of [Equals(Triangle($),3)] : 2 : 1. Which of following is not angle [LengthOf(Triangle($))]?",
    "success": false
  },
  "2810": {
    "text_logic_forms": [
      "Rectangle(A,B,D,C)",
      "Equals(MeasureOf(Angle(1)),38)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": " [Rectangle(A,B,D,C)]. If [Equals(MeasureOf(Angle(1)),38)] [Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2811": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2812": {
    "text_logic_forms": [
      "InscribedIn(Quadrilateral(W,X,Y,Z),Circle(V))",
      "Find(MeasureOf(Angle(X)))"
    ],
    "output_text": "[InscribedIn(Quadrilateral(W,X,Y,Z),Circle(V))]. [Find(MeasureOf(Angle(X)))].",
    "success": true
  },
  "2813": {
    "text_logic_forms": [
      "Find(LengthOf(Line(D,E)))"
    ],
    "output_text": "[Find(LengthOf(Line(D,E)))].",
    "success": true
  },
  "2814": {
    "text_logic_forms": [
      "Kite(W,X,Y,Z)",
      "Find(LengthOf(Line(W,P)))"
    ],
    "output_text": "If [Kite(W,X,Y,Z)], [Find(LengthOf(Line(W,P)))].",
    "success": true
  },
  "2815": {
    "text_logic_forms": [
      "Triangle($)",
      "PerimeterOf(Triangle($))"
    ],
    "output_text": "If two sides of [Triangle($)] measure 12 and 7, which of following cannot be [PerimeterOf(Triangle($))]?",
    "success": false
  },
  "2816": {
    "text_logic_forms": [
      "Quadrilateral(R,S,T,V)",
      "Equals(LengthOf(Line(R,S)),6)",
      "Equals(LengthOf(Line(V,T)),3)",
      "Equals(Line(R,X),Mul(LengthOf(Line(X,V)),2))",
      "Find(LengthOf(Line(X,Y)))"
    ],
    "output_text": "In [Quadrilateral(R,S,T,V)], [Equals(LengthOf(Line(R,S)),6)] [Equals(LengthOf(Line(V,T)),3)] and [Equals(Line(R,X),Mul(LengthOf(Line(X,V)),2))]. [Find(LengthOf(Line(X,Y)))].",
    "success": true
  },
  "2817": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2818": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2819": {
    "text_logic_forms": [
      "Find(AreaOf(Rhombus($)))"
    ],
    "output_text": "[Find(AreaOf(Rhombus($)))].",
    "success": true
  },
  "2820": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth.",
    "success": true
  },
  "2821": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(A,B)),2x+3)",
      "Equals(LengthOf(Line(B,C)),x+7)",
      "Find(LengthOf(Line(C,D)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(A,B)),2x+3)] and [Equals(LengthOf(Line(B,C)),x+7)] [Find(LengthOf(Line(C,D)))].",
    "success": true
  },
  "2822": {
    "text_logic_forms": [
      "Trapezoid(T,R,S,V)",
      "IsMidpointOf(Point(M),LegOf(Trapezoid(T,R,S,V)))",
      "IsMidpointOf(Point(N),LegOf(Trapezoid(T,R,S,V)))",
      "Equals(LengthOf(Line(T,R)),32)",
      "Equals(LengthOf(Line(M,N)),25)",
      "Find(LengthOf(Line(V,S)))"
    ],
    "output_text": "[Trapezoid(T,R,S,V)], [IsMidpointOf(Point(M),LegOf(Trapezoid(T,R,S,V)))], [IsMidpointOf(Point(N),LegOf(Trapezoid(T,R,S,V)))],. If [Equals(LengthOf(Line(T,R)),32)] and [Equals(LengthOf(Line(M,N)),25)] [Find(LengthOf(Line(V,S)))].",
    "success": true
  },
  "2823": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2824": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(M,C)),7)",
      "Equals(LengthOf(Line(R,M)),4)",
      "Equals(LengthOf(Line(A,T)),16)",
      "Find(LengthOf(Line(M,S)))"
    ],
    "output_text": "[Equals(LengthOf(Line(M,C)),7)] [Equals(LengthOf(Line(R,M)),4)] and [Equals(LengthOf(Line(A,T)),16)] [Find(LengthOf(Line(M,S)))].",
    "success": true
  },
  "2825": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(LengthOf(Line(J,K)),10)",
      "Equals(Arc(J,K,L),134)",
      "Find(MeasureOf(Arc(J,L)))"
    ],
    "output_text": "In [Circle(P)], [Equals(LengthOf(Line(J,K)),10)] and [Equals(Arc(J,K,L),134)] [Find(MeasureOf(Arc(J,L)))].",
    "success": true
  },
  "2826": {
    "text_logic_forms": [
      "Rectangle(W,X,Y,Z)",
      "Equals(MeasureOf(Angle(1)),30)",
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": " [Rectangle(W,X,Y,Z)]. [Find(MeasureOf(Angle(3)))] if [Equals(MeasureOf(Angle(1)),30)].",
    "success": true
  },
  "2827": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(MeasureOf(Angle(D,A,B)),2)",
      "MeasureOf(Angle(A,D,C))",
      "Equals(LengthOf(Line(C,B)),6)",
      "Find(MeasureOf(Angle(A,D,B)))"
    ],
    "output_text": "In [Rhombus(A,B,C,D)], [Equals(MeasureOf(Angle(D,A,B)),2)] [MeasureOf(Angle(A,D,C))] and [Equals(LengthOf(Line(C,B)),6)] [Find(MeasureOf(Angle(A,D,B)))].",
    "success": true
  },
  "2828": {
    "text_logic_forms": [
      "Similar(Triangle(J,K,L),Triangle(W,Y,Z))",
      "Find(x)"
    ],
    "output_text": "[Similar(Triangle(J,K,L),Triangle(W,Y,Z))]. [Find(x)].",
    "success": true
  },
  "2829": {
    "text_logic_forms": [
      "Regular(Polygon($))",
      "Find(AreaOf(Shaded(Shape($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Shape($))))]. [Regular(Polygon($))]. Round to nearest tenth.",
    "success": true
  },
  "2830": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2831": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2832": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2833": {
    "text_logic_forms": [
      "Triangle(C,D,F)",
      "IsCentroidOf(Point(K),Triangle(C,D,F))",
      "Equals(LengthOf(Line(D,K)),16)",
      "Find(LengthOf(Line(C,D)))"
    ],
    "output_text": " [Triangle(C,D,F)], [IsCentroidOf(Point(K),Triangle(C,D,F))] and [Equals(LengthOf(Line(D,K)),16)] [Find(LengthOf(Line(C,D)))].",
    "success": true
  },
  "2834": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2835": {
    "text_logic_forms": [
      "InscribedIn(Square($),Circle($))",
      "Equals(AreaOf(Square($)),18\\pi)",
      "Find(LengthOf(SideOf(Square($))))"
    ],
    "output_text": "[InscribedIn(Square($),Circle($))], [Equals(AreaOf(Square($)),18\\pi)] [Find(LengthOf(SideOf(Square($))))].",
    "success": true
  },
  "2836": {
    "text_logic_forms": [
      "IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))",
      "Equals(LengthOf(Line(G,H)),10)",
      "Find(LengthOf(Line(J,L)))"
    ],
    "output_text": "[IntersectAt(Circle(G),Circle(J),Circle(K),Point(L))]. If [Equals(LengthOf(Line(G,H)),10)] [Find(LengthOf(Line(J,L)))].",
    "success": true
  },
  "2837": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(a)"
    ],
    "output_text": "[Find(a)] in [Parallelogram($)].",
    "success": true
  },
  "2838": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(K,L))",
      "Equals(LengthOf(Line(K,N)),9)",
      "Equals(LengthOf(Line(L,N)),16)",
      "Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))",
      "Find(LengthOf(Line(P,R)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(K,L))], [Equals(LengthOf(Line(K,N)),9)] [Equals(LengthOf(Line(L,N)),16)] [Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))], [Find(LengthOf(Line(P,R)))].",
    "success": true
  },
  "2839": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),66)",
      "Find(x)"
    ],
    "output_text": ". [Find(x)]. [Equals(AreaOf(Shape(A)),66)].",
    "success": true
  },
  "2840": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2841": {
    "text_logic_forms": [
      "Find(RatioOf(CosOf(Angle(A))))"
    ],
    "output_text": "[Find(RatioOf(CosOf(Angle(A))))] to nearest hundredth.",
    "success": true
  },
  "2842": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(D,A,C)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(D,A,C)))].",
    "success": true
  },
  "2843": {
    "text_logic_forms": [
      "Congruent(Triangle(L,M,N),Triangle(Q,R,S))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(L,M,N),Triangle(Q,R,S))]. [Find(x)].",
    "success": true
  },
  "2844": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2845": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),58)",
      "Equals(MeasureOf(Angle(2)),47)",
      "Equals(MeasureOf(Angle(3)),26)",
      "Find(MeasureOf(Angle(9)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),58)] [Equals(MeasureOf(Angle(2)),47)] and [Equals(MeasureOf(Angle(3)),26)] [Find(MeasureOf(Angle(9)))].",
    "success": true
  },
  "2846": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2847": {
    "text_logic_forms": [
      "Find(MeasureOf(Arc(J,K,L)))"
    ],
    "output_text": "[Find(MeasureOf(Arc(J,K,L)))].",
    "success": true
  },
  "2848": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2849": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),2y+32)",
      "Equals(MeasureOf(Angle(5)),3y-3)",
      "Find(y)"
    ],
    "output_text": "[Equals(MeasureOf(Angle(4)),2y+32)] and [Equals(MeasureOf(Angle(5)),3y-3)] [Find(y)].",
    "success": true
  },
  "2850": {
    "text_logic_forms": [
      "Rectangle(E,F,G,H)",
      "Equals(LengthOf(Line(E,F)),4x-6)",
      "Equals(LengthOf(Line(H,G)),x+3)",
      "Find(LengthOf(Line(E,F)))"
    ],
    "output_text": " [Rectangle(E,F,G,H)]. If [Equals(LengthOf(Line(E,F)),4x-6)] and [Equals(LengthOf(Line(H,G)),x+3)] [Find(LengthOf(Line(E,F)))].",
    "success": true
  },
  "2851": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2852": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2853": {
    "text_logic_forms": [
      "Equals(a,14)",
      "Equals(b,48)",
      "Equals(c,50)",
      "Find(CosOf(Angle(A)))"
    ],
    "output_text": "[Equals(a,14)] [Equals(b,48)] and [Equals(c,50)] [Find(CosOf(Angle(A)))].",
    "success": true
  },
  "2854": {
    "text_logic_forms": [
      "Triangle($)",
      "Find(h)"
    ],
    "output_text": "[Find(h)] in [Triangle($)].",
    "success": true
  },
  "2855": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2856": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Circle($)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line($),Circle($))] to [Circle($)]. [Find(x)].",
    "success": true
  },
  "2857": {
    "text_logic_forms": [
      "Kite($)",
      "Find(LengthOf(Line(G,H)))"
    ],
    "output_text": "[Find(LengthOf(Line(G,H)))] in [Kite($)].",
    "success": true
  },
  "2858": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2859": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2860": {
    "text_logic_forms": [
      "Find(t)"
    ],
    "output_text": "[Find(t)].",
    "success": true
  },
  "2861": {
    "text_logic_forms": [
      "Parallel(Line(l),Line(m))",
      "IntersectAt(Line(n),Line(l),Point($))",
      "IntersectAt(Line(n),Line(m),Point($))",
      "Angle(1)"
    ],
    "output_text": ", [Parallel(Line(l),Line(m))]. [IntersectAt(Line(n),Line(l),Point($))], [IntersectAt(Line(n),Line(m),Point($))]. Which of following lists includes of angles are supplementary to [Angle(1)]?",
    "success": false
  },
  "2862": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(W)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(W)))].",
    "success": true
  },
  "2863": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(7)))] if [Equals(MeasureOf(Angle(4)),MeasureOf(Angle(5)))].",
    "success": true
  },
  "2864": {
    "text_logic_forms": [
      "Find(RatioOf(CosOf(Angle(N))))"
    ],
    "output_text": "[Find(RatioOf(CosOf(Angle(N))))] to nearest hundredth.",
    "success": true
  },
  "2865": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(LengthOf(Line(A,D)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(LengthOf(Line(A,D)))].",
    "success": true
  },
  "2866": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(3)),110)",
      "Equals(MeasureOf(Angle(12)),55)",
      "Find(MeasureOf(Angle(13)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(3)),110)] and [Equals(MeasureOf(Angle(12)),55)] [Find(MeasureOf(Angle(13)))].",
    "success": true
  },
  "2867": {
    "text_logic_forms": [
      "IsDiameterOf(Line(A,D),Circle(B))",
      "IsDiameterOf(Line(C,G),Circle(B))",
      "Find(MeasureOf(Arc(A,G)))"
    ],
    "output_text": "[IsDiameterOf(Line(A,D),Circle(B))], [IsDiameterOf(Line(C,G),Circle(B))]. [Find(MeasureOf(Arc(A,G)))].",
    "success": true
  },
  "2868": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2869": {
    "text_logic_forms": [
      "Equals(AreaOf(Shape(A)),148)",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Equals(AreaOf(Shape(A)),148)].",
    "success": true
  },
  "2870": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2871": {
    "text_logic_forms": [
      "Find(AreaOf(Kite($)))"
    ],
    "output_text": "[Find(AreaOf(Kite($)))].",
    "success": true
  },
  "2872": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2873": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2874": {
    "text_logic_forms": [
      "Parallel(Line(P,R),Line(K,L))",
      "Equals(LengthOf(Line(K,N)),9)",
      "Equals(LengthOf(Line(L,N)),16)",
      "Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))",
      "Find(LengthOf(Line(M,N)))"
    ],
    "output_text": "If [Parallel(Line(P,R),Line(K,L))], [Equals(LengthOf(Line(K,N)),9)] [Equals(LengthOf(Line(L,N)),16)] [Equals(LengthOf(Line(P,M)),Mul(Line(K,P),2))], [Find(LengthOf(Line(M,N)))].",
    "success": true
  },
  "2875": {
    "text_logic_forms": [
      "Find(LengthOf(Line(P,S)))"
    ],
    "output_text": "[Find(LengthOf(Line(P,S)))].",
    "success": true
  },
  "2876": {
    "text_logic_forms": [
      "Similar(Triangle(D,E,F),Triangle(C,B,F))",
      "Equals(PerimeterOf(Triangle(C,B,F)),27)",
      "Equals(LengthOf(Line(D,F)),6)",
      "Equals(LengthOf(Line(F,C)),8)",
      "Find(PerimeterOf(Triangle(D,E,F)))"
    ],
    "output_text": "[Find(PerimeterOf(Triangle(D,E,F)))], if [Similar(Triangle(D,E,F),Triangle(C,B,F))], [Equals(PerimeterOf(Triangle(C,B,F)),27)] [Equals(LengthOf(Line(D,F)),6)] and [Equals(LengthOf(Line(F,C)),8)].",
    "success": true
  },
  "2877": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "2878": {
    "text_logic_forms": [
      "Equals(SumOf(MeasureOf(Angle(1)),MeasureOf(Angle(1))),180)",
      "Equals(MeasureOf(Angle(2)),67)",
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Equals(SumOf(MeasureOf(Angle(1)),MeasureOf(Angle(1))),180)] and [Equals(MeasureOf(Angle(2)),67)] [Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2879": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2880": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(MeasureOf(Angle(M,P,L)),65)",
      "Perpendicular(Line(N,P),Line(P,L))",
      "Find(MeasureOf(Arc(N,J,K)))"
    ],
    "output_text": "In [Circle(P)], [Equals(MeasureOf(Angle(M,P,L)),65)] and [Perpendicular(Line(N,P),Line(P,L))]. [Find(MeasureOf(Arc(N,J,K)))].",
    "success": true
  },
  "2881": {
    "text_logic_forms": [
      "IsIncenterOf(Point(G),Triangle(A,B,C))",
      "Find(LengthOf(Line(E,G)))"
    ],
    "output_text": "[Find(LengthOf(Line(E,G)))] if [IsIncenterOf(Point(G),Triangle(A,B,C))].",
    "success": true
  },
  "2882": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(G,H)),Line(K,J))",
      "Find(x)"
    ],
    "output_text": "[Equals(LengthOf(Line(G,H)),Line(K,J))]. [Find(x)].",
    "success": true
  },
  "2883": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2884": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(A,B)),6)",
      "Equals(LengthOf(Line(A,F)),8)",
      "Equals(LengthOf(Line(B,C)),x)",
      "Equals(LengthOf(Line(C,D)),y)",
      "Equals(LengthOf(Line(D,E)),2y-3)",
      "Equals(LengthOf(Line(F,E)),x+\\frac{10}{3})",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,C)))] if [Equals(LengthOf(Line(A,B)),6)] [Equals(LengthOf(Line(A,F)),8)] [Equals(LengthOf(Line(B,C)),x)] [Equals(LengthOf(Line(C,D)),y)] [Equals(LengthOf(Line(D,E)),2y-3)] and [Equals(LengthOf(Line(F,E)),x+\\frac{10}{3})].",
    "success": true
  },
  "2885": {
    "text_logic_forms": [
      "Similar(Pentagon(A,B,C,D,E),Pentagon(P,Q,R,S,T))",
      "Find(LengthOf(Line(S,R)))"
    ],
    "output_text": "If [Similar(Pentagon(A,B,C,D,E),Pentagon(P,Q,R,S,T))], [Find(LengthOf(Line(S,R)))].",
    "success": true
  },
  "2886": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(D)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(D)))].",
    "success": true
  },
  "2887": {
    "text_logic_forms": [
      "Circle(F)",
      "Equals(LengthOf(Line(F,H)),Line(F,L))",
      "Equals(LengthOf(Line(F,K)),17)",
      "Find(LengthOf(Line(J,G)))"
    ],
    "output_text": "In [Circle(F)], [Equals(LengthOf(Line(F,H)),Line(F,L))] and [Equals(LengthOf(Line(F,K)),17)] [Find(LengthOf(Line(J,G)))].",
    "success": true
  },
  "2888": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2889": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2890": {
    "text_logic_forms": [
      "Find(LengthOf(Line(P,T)))"
    ],
    "output_text": "[Find(LengthOf(Line(P,T)))].",
    "success": true
  },
  "2891": {
    "text_logic_forms": [
      "Circle(B)",
      "Equals(LengthOf(Line(C,E)),13.5)",
      "Find(LengthOf(Line(B,D)))"
    ],
    "output_text": "In [Circle(B)], [Equals(LengthOf(Line(C,E)),13.5)] [Find(LengthOf(Line(B,D)))]. Round to nearest hundredth.",
    "success": true
  },
  "2892": {
    "text_logic_forms": [
      "Triangle(X,Y,Z)",
      "IsCentroidOf(Point(P),Triangle(X,Y,Z))",
      "Equals(LengthOf(Line(K,P)),3)",
      "Equals(LengthOf(Line(X,J)),8)",
      "Find(LengthOf(Line(Y,J)))"
    ],
    "output_text": "in  [Triangle(X,Y,Z)], [IsCentroidOf(Point(P),Triangle(X,Y,Z))], [Equals(LengthOf(Line(K,P)),3)] and [Equals(LengthOf(Line(X,J)),8)] [Find(LengthOf(Line(Y,J)))].",
    "success": true
  },
  "2893": {
    "text_logic_forms": [
      "Find(RatioOf(CosOf(Angle(P))))"
    ],
    "output_text": "[Find(RatioOf(CosOf(Angle(P))))] to nearest hundredth.",
    "success": true
  },
  "2894": {
    "text_logic_forms": [
      "Find(PerimeterOf(Parallelogram($)))"
    ],
    "output_text": "[Find(PerimeterOf(Parallelogram($)))].",
    "success": true
  },
  "2895": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2896": {
    "text_logic_forms": [
      "Parallelogram(J,K,L,M)",
      "Find(MeasureOf(Angle(J,M,L)))"
    ],
    "output_text": "Use [Parallelogram(J,K,L,M)] to [Find(MeasureOf(Angle(J,M,L)))].",
    "success": true
  },
  "2897": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] in [Parallelogram($)].",
    "success": true
  },
  "2898": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))] to nearest tenth.",
    "success": true
  },
  "2899": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(C,W)),Line(W,F))",
      "Equals(LengthOf(Line(E,D)),30)",
      "Find(LengthOf(Line(D,F)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(C,W)),Line(W,F))] and [Equals(LengthOf(Line(E,D)),30)] [Find(LengthOf(Line(D,F)))]?",
    "success": true
  },
  "2900": {
    "text_logic_forms": [
      "Find(AreaOf(Triangle($)))"
    ],
    "output_text": "[Find(AreaOf(Triangle($)))]. Round to nearest hundredth.",
    "success": true
  },
  "2901": {
    "text_logic_forms": [
      "Congruent(Triangle(W,X,Y),Triangle(W,X,Z))",
      "Find(y)"
    ],
    "output_text": "[Congruent(Triangle(W,X,Y),Triangle(W,X,Z))]. [Find(y)].",
    "success": true
  },
  "2902": {
    "text_logic_forms": [
      "Find(LengthOf(Line(J,K)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,K)))].",
    "success": true
  },
  "2903": {
    "text_logic_forms": [
      "Find(RatioOf(SinOf(Angle(N))))"
    ],
    "output_text": "[Find(RatioOf(SinOf(Angle(N))))] to nearest hundredth.",
    "success": true
  },
  "2904": {
    "text_logic_forms": [
      "UseTheorem(Pythagorean_Theorem)",
      "Find(LengthOf(HypotenuseOf(Right(Triangle($)))))"
    ],
    "output_text": "[UseTheorem(Pythagorean_Theorem)] to [Find(LengthOf(HypotenuseOf(Right(Triangle($)))))].",
    "success": true
  },
  "2905": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)]. Round to nearest tenth, if necessary.",
    "success": true
  },
  "2906": {
    "text_logic_forms": [
      "Rectangle(A,B,C,D)",
      "Find(x)"
    ],
    "output_text": " [Rectangle(A,B,C,D)]. [Find(x)].",
    "success": true
  },
  "2907": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(J,K,L)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(J,K,L)))].",
    "success": true
  },
  "2908": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2909": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2910": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2911": {
    "text_logic_forms": [
      "Equals(c,5)",
      "Find(b)"
    ],
    "output_text": "If [Equals(c,5)] [Find(b)].",
    "success": true
  },
  "2912": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(12)),64)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(12)),64)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "2913": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2914": {
    "text_logic_forms": [
      "Find(AreaOf(Parallelogram($)))"
    ],
    "output_text": "[Find(AreaOf(Parallelogram($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2915": {
    "text_logic_forms": [
      "Circle(O)",
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Equals(Angle(B,O,D),Angle(D,O,E))",
      "Equals(Angle(D,O,E),Angle(E,O,F))",
      "Equals(Angle(E,O,F),Angle(F,O,A))",
      "Find(MeasureOf(Arc(A,D)))"
    ],
    "output_text": "[Circle(O)], [IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))] and [Equals(Angle(B,O,D),Angle(D,O,E))], [Equals(Angle(D,O,E),Angle(E,O,F))], [Equals(Angle(E,O,F),Angle(F,O,A))]. [Find(MeasureOf(Arc(A,D)))].",
    "success": true
  },
  "2916": {
    "text_logic_forms": [
      "Find(LengthOf(Line(K,L)))"
    ],
    "output_text": "[Find(LengthOf(Line(K,L)))].",
    "success": true
  },
  "2917": {
    "text_logic_forms": [
      "Find(LengthOf(Line(T,Q)))"
    ],
    "output_text": "[Find(LengthOf(Line(T,Q)))].",
    "success": true
  },
  "2918": {
    "text_logic_forms": [
      "Parallel(Line(G,J),Line(F,K))",
      "Equals(LengthOf(Line(G,H)),x+3.5)",
      "Equals(LengthOf(Line(H,J)),x-8.5)",
      "Equals(LengthOf(Line(F,H)),21)",
      "Equals(LengthOf(Line(H,K)),7)",
      "Find(x)"
    ],
    "output_text": "[Find(x)] so [Parallel(Line(G,J),Line(F,K))]. [Equals(LengthOf(Line(G,H)),x+3.5)] [Equals(LengthOf(Line(H,J)),x-8.5)] [Equals(LengthOf(Line(F,H)),21)] [Equals(LengthOf(Line(H,K)),7)].",
    "success": true
  },
  "2919": {
    "text_logic_forms": [
      "Equals(Rhombus($),2long)",
      "Equals(AreaOf(Rhombus($)),169)"
    ],
    "output_text": "One diagonal of [Equals(Rhombus($),2long)] other diagonal. If [Equals(AreaOf(Rhombus($)),169)] what are lengths of diagonals?",
    "success": false
  },
  "2920": {
    "text_logic_forms": [
      "Trapezoid(Q,R,T,U)",
      "IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))",
      "IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))",
      "Equals(LengthOf(Line(Q,R)),4)",
      "Equals(LengthOf(Line(U,T)),16)",
      "Find(LengthOf(Line(V,S)))"
    ],
    "output_text": "[Trapezoid(Q,R,T,U)], [IsMidpointOf(Point(V),LegOf(Trapezoid(Q,R,T,U)))], [IsMidpointOf(Point(S),LegOf(Trapezoid(Q,R,T,U)))],. If [Equals(LengthOf(Line(Q,R)),4)] and [Equals(LengthOf(Line(U,T)),16)] [Find(LengthOf(Line(V,S)))].",
    "success": true
  },
  "2921": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(T)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(T)))] to nearest tenth.",
    "success": true
  },
  "2922": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth if necessary. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2923": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2924": {
    "text_logic_forms": [
      "Find(CosOf(Angle(C)))"
    ],
    "output_text": "[Find(CosOf(Angle(C)))].",
    "success": true
  },
  "2925": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))].",
    "success": true
  },
  "2926": {
    "text_logic_forms": [
      "Find(AreaOf(Trapezoid($)))"
    ],
    "output_text": "[Find(AreaOf(Trapezoid($)))].",
    "success": true
  },
  "2927": {
    "text_logic_forms": [
      "Equals(AreaOf(Trapezoid(J,K,L,M)),138)",
      "Equals(AreaOf(Trapezoid(Q,R,S,T)),5.52)",
      "Similar(Trapezoid(J,K,L,M),Trapezoid(Q,R,S,T))",
      "Find(x)"
    ],
    "output_text": "[Equals(AreaOf(Trapezoid(J,K,L,M)),138)] [Equals(AreaOf(Trapezoid(Q,R,S,T)),5.52)] If [Similar(Trapezoid(J,K,L,M),Trapezoid(Q,R,S,T))], [Find(x)].",
    "success": true
  },
  "2928": {
    "text_logic_forms": [
      "BisectsAngle(Line(B,F),Angle(A,B,C))",
      "Parallel(Line(A,C),Line(E,D))",
      "Equals(LengthOf(Line(B,A)),6)",
      "Equals(LengthOf(Line(B,C)),7.5)",
      "Equals(LengthOf(Line(A,C)),9)",
      "Equals(LengthOf(Line(D,E)),9)",
      "Find(LengthOf(Line(C,F)))"
    ],
    "output_text": "[Find(LengthOf(Line(C,F)))] if [BisectsAngle(Line(B,F),Angle(A,B,C))] and [Parallel(Line(A,C),Line(E,D))], [Equals(LengthOf(Line(B,A)),6)] [Equals(LengthOf(Line(B,C)),7.5)] [Equals(LengthOf(Line(A,C)),9)] and [Equals(LengthOf(Line(D,E)),9)].",
    "success": true
  },
  "2929": {
    "text_logic_forms": [
      "Equals(RatioOf(Line(I,J),Line(X,J)),RatioOf(Line(H,J),Line(Y,J)))",
      "Equals(MeasureOf(Angle(W,X,J)),130)",
      "Equals(MeasureOf(Angle(W,Z,G)),20)",
      "Find(MeasureOf(Angle(J)))"
    ],
    "output_text": "If [Equals(RatioOf(Line(I,J),Line(X,J)),RatioOf(Line(H,J),Line(Y,J)))], [Equals(MeasureOf(Angle(W,X,J)),130)] and [Equals(MeasureOf(Angle(W,Z,G)),20)] [Find(MeasureOf(Angle(J)))].",
    "success": true
  },
  "2930": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(J)))"
    ],
    "output_text": "to [Find(MeasureOf(Angle(J)))] to nearest degree.",
    "success": true
  },
  "2931": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(w)"
    ],
    "output_text": "[Find(w)] in [Parallelogram($)].",
    "success": true
  },
  "2932": {
    "text_logic_forms": [
      "Trapezoid(A,B,C,D)",
      "IsMidpointOf(Point(S),LegOf(Trapezoid(A,B,C,D)))",
      "IsMidpointOf(Point(T),LegOf(Trapezoid(A,B,C,D)))",
      "Equals(LengthOf(Line(C,D)),14)",
      "Equals(LengthOf(Line(S,T)),10)",
      "Equals(LengthOf(Line(A,B)),2x)",
      "Find(x)"
    ],
    "output_text": "[Trapezoid(A,B,C,D)], [IsMidpointOf(Point(S),LegOf(Trapezoid(A,B,C,D)))], [IsMidpointOf(Point(T),LegOf(Trapezoid(A,B,C,D)))],. If [Equals(LengthOf(Line(C,D)),14)] [Equals(LengthOf(Line(S,T)),10)] and [Equals(LengthOf(Line(A,B)),2x)] [Find(x)].",
    "success": true
  },
  "2933": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(1)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(1)))].",
    "success": true
  },
  "2934": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2935": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))] in. Round to nearest tenth, if necessary.",
    "success": true
  },
  "2936": {
    "text_logic_forms": [
      "Find(RatioOf(TanOf(Angle(M))))"
    ],
    "output_text": "[Find(RatioOf(TanOf(Angle(M))))] to nearest hundredth.",
    "success": true
  },
  "2937": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2938": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2939": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2940": {
    "text_logic_forms": [
      "Circle(X)",
      "Equals(LengthOf(Line(A,B)),30)",
      "Equals(LengthOf(Line(C,D)),30)",
      "Equals(MeasureOf(Arc(C,Z)),40)",
      "Find(MeasureOf(Arc(C,D)))"
    ],
    "output_text": "In [Circle(X)], [Equals(LengthOf(Line(A,B)),30)] [Equals(LengthOf(Line(C,D)),30)] and [Equals(MeasureOf(Arc(C,Z)),40)] [Find(MeasureOf(Arc(C,D)))].",
    "success": true
  },
  "2941": {
    "text_logic_forms": [
      "InscribedIn(Square(A,B,D,C),Circle(K))",
      "Find(MeasureOf(Angle($)))"
    ],
    "output_text": ", [InscribedIn(Square(A,B,D,C),Circle(K))]. [Find(MeasureOf(Angle($)))].",
    "success": true
  },
  "2942": {
    "text_logic_forms": [
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "2943": {
    "text_logic_forms": [
      "Parallelogram(A,B,C,D)",
      "Find(MeasureOf(Angle(A,F,D)))"
    ],
    "output_text": "Use [Parallelogram(A,B,C,D)] to [Find(MeasureOf(Angle(A,F,D)))].",
    "success": true
  },
  "2944": {
    "text_logic_forms": [
      "Rectangle(W,X,Y,Z)",
      "Equals(MeasureOf(Angle(1)),30)",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": " [Rectangle(W,X,Y,Z)]. [Find(MeasureOf(Angle(2)))] if [Equals(MeasureOf(Angle(1)),30)].",
    "success": true
  },
  "2945": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(H)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(H)))].",
    "success": true
  },
  "2946": {
    "text_logic_forms": [
      "Kite(F,G,H,J)",
      "Find(MeasureOf(Angle(G,F,J)))"
    ],
    "output_text": "If [Kite(F,G,H,J)], [Find(MeasureOf(Angle(G,F,J)))].",
    "success": true
  },
  "2947": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2948": {
    "text_logic_forms": [
      "Perpendicular(Line(A,D),Line(B,C))",
      "Perpendicular(Line(A,B),Line(A,C))",
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": ", [Perpendicular(Line(A,D),Line(B,C))] and [Perpendicular(Line(A,B),Line(A,C))]. [Find(LengthOf(Line(B,C)))]?",
    "success": true
  },
  "2949": {
    "text_logic_forms": [
      "Find(AreaOf(Shape($)))"
    ],
    "output_text": "[Find(AreaOf(Shape($)))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2950": {
    "text_logic_forms": [
      "IsCentroidOf(Point(D),Circle($))",
      "Find(MeasureOf(Angle(A,B,C)))"
    ],
    "output_text": "[IsCentroidOf(Point(D),Circle($))]. [Find(MeasureOf(Angle(A,B,C)))]?",
    "success": true
  },
  "2951": {
    "text_logic_forms": [
      "Find(PerimeterOf(Shape($)))"
    ],
    "output_text": "[Find(PerimeterOf(Shape($)))].",
    "success": true
  },
  "2952": {
    "text_logic_forms": [
      "Trapezoid(Q,R,S,T)",
      "IsMidpointOf(Point(A),LegOf(Trapezoid(Q,R,S,T)))",
      "IsMidpointOf(Point(B),LegOf(Trapezoid(Q,R,S,T)))",
      "Find(MeasureOf(Angle(S)))"
    ],
    "output_text": "[Trapezoid(Q,R,S,T)], [IsMidpointOf(Point(A),LegOf(Trapezoid(Q,R,S,T)))], [IsMidpointOf(Point(B),LegOf(Trapezoid(Q,R,S,T)))],. [Find(MeasureOf(Angle(S)))].",
    "success": true
  },
  "2953": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(3)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(3)))].",
    "success": true
  },
  "2954": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2955": {
    "text_logic_forms": [
      "Equals(SumOf(MeasureOf(Angle(6)),MeasureOf(Angle(6))),90)",
      "Equals(MeasureOf(Angle(8)),47)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": "[Equals(SumOf(MeasureOf(Angle(6)),MeasureOf(Angle(6))),90)], [Equals(MeasureOf(Angle(8)),47)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "2956": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2957": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2958": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2959": {
    "text_logic_forms": [
      "Find(AreaOf(Rhombus($)))"
    ],
    "output_text": "[Find(AreaOf(Rhombus($)))].",
    "success": true
  },
  "2960": {
    "text_logic_forms": [
      "Find(SinOf(Angle(S)))"
    ],
    "output_text": "[Find(SinOf(Angle(S)))].",
    "success": true
  },
  "2961": {
    "text_logic_forms": [
      "Find(LengthOf(Line(J,L)))"
    ],
    "output_text": "[Find(LengthOf(Line(J,L)))].",
    "success": true
  },
  "2962": {
    "text_logic_forms": [
      "Find(AreaOf(Shaded(Sector($))))"
    ],
    "output_text": "[Find(AreaOf(Shaded(Sector($))))]. Round to nearest tenth.",
    "success": true
  },
  "2963": {
    "text_logic_forms": [
      "IsAltitudeOf(Line(C,P),Shape($))",
      "BisectsAngle(Line(C,Q),Angle(A,C,B))",
      "IsMidpointOf(Point(R),Line(A,B))",
      "Equals(MeasureOf(Angle(A,C,B)),123-x)",
      "Equals(MeasureOf(Angle(Q,C,B)),42+x)",
      "Find(MeasureOf(Angle(A,C,Q)))"
    ],
    "output_text": ", [IsAltitudeOf(Line(C,P),Shape($))], [BisectsAngle(Line(C,Q),Angle(A,C,B))] and [IsMidpointOf(Point(R),Line(A,B))]. [Find(MeasureOf(Angle(A,C,Q)))] if [Equals(MeasureOf(Angle(A,C,B)),123-x)] and [Equals(MeasureOf(Angle(Q,C,B)),42+x)].",
    "success": true
  },
  "2964": {
    "text_logic_forms": [
      "Find(z)"
    ],
    "output_text": "[Find(z)].",
    "success": true
  },
  "2965": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2966": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(z)"
    ],
    "output_text": "[Find(z)] in [Parallelogram($)].",
    "success": true
  },
  "2967": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(C,E)),t-2)",
      "Equals(LengthOf(Line(E,B)),t+1)",
      "Equals(LengthOf(Line(C,D)),2)",
      "Equals(LengthOf(Line(C,A)),10)",
      "Find(LengthOf(Line(C,E)))"
    ],
    "output_text": "If [Equals(LengthOf(Line(C,E)),t-2)] [Equals(LengthOf(Line(E,B)),t+1)] [Equals(LengthOf(Line(C,D)),2)] and [Equals(LengthOf(Line(C,A)),10)] [Find(LengthOf(Line(C,E)))].",
    "success": true
  },
  "2968": {
    "text_logic_forms": [
      "Equals(c,5)",
      "Find(a)"
    ],
    "output_text": "If [Equals(c,5)] [Find(a)].",
    "success": true
  },
  "2969": {
    "text_logic_forms": [
      "Arc(A,C)",
      "Arc(A,D,C)",
      "Equals(MeasureOf(Angle(A,B,C)),70)",
      "Find(x)"
    ],
    "output_text": "degree measure ofinor arc [Arc(A,C)] and major arc [Arc(A,D,C)] are x and y. If [Equals(MeasureOf(Angle(A,B,C)),70)] [Find(x)].",
    "success": false
  },
  "2970": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(W,Y,Z)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(W,Y,Z)))].",
    "success": true
  },
  "2971": {
    "text_logic_forms": [
      "Parallelogram($)",
      "Find(b)"
    ],
    "output_text": "Use [Parallelogram($)] to [Find(b)].",
    "success": true
  },
  "2972": {
    "text_logic_forms": [
      "Equals(LengthOf(Line(U,J)),9)",
      "Equals(LengthOf(Line(V,J)),3)",
      "Equals(LengthOf(Line(Z,T)),18)",
      "Find(LengthOf(Line(S,J)))"
    ],
    "output_text": "[Equals(LengthOf(Line(U,J)),9)] [Equals(LengthOf(Line(V,J)),3)] and [Equals(LengthOf(Line(Z,T)),18)] [Find(LengthOf(Line(S,J)))].",
    "success": true
  },
  "2973": {
    "text_logic_forms": [
      "Find(LengthOf(Line(A,B)))"
    ],
    "output_text": "[Find(LengthOf(Line(A,B)))].",
    "success": true
  },
  "2974": {
    "text_logic_forms": [
      "InscribedIn(Rhombus(P,Q,R,S),Circle($))",
      "Find(MeasureOf(Arc(S,P)))"
    ],
    "output_text": " [InscribedIn(Rhombus(P,Q,R,S),Circle($))]. [Find(MeasureOf(Arc(S,P)))].",
    "success": true
  },
  "2975": {
    "text_logic_forms": [
      "Tangent(Line(M,P),Circle(O))",
      "Equals(LengthOf(Line(M,O)),20)",
      "Find(x)"
    ],
    "output_text": "[Tangent(Line(M,P),Circle(O))]. [Find(x)] if [Equals(LengthOf(Line(M,O)),20)].",
    "success": true
  },
  "2976": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))].",
    "success": true
  },
  "2977": {
    "text_logic_forms": [
      "Find(LengthOf(Line(G,D)))"
    ],
    "output_text": "[Find(LengthOf(Line(G,D)))].",
    "success": true
  },
  "2978": {
    "text_logic_forms": [
      "Circle(P)",
      "Equals(MeasureOf(Angle(M,P,L)),65)",
      "Perpendicular(Line(N,P),Line(P,L))",
      "Find(MeasureOf(Arc(N,M)))"
    ],
    "output_text": "In [Circle(P)], [Equals(MeasureOf(Angle(M,P,L)),65)] and [Perpendicular(Line(N,P),Line(P,L))]. [Find(MeasureOf(Arc(N,M)))].",
    "success": true
  },
  "2979": {
    "text_logic_forms": [
      "Find(AreaOf(Regular(Polygon($))))"
    ],
    "output_text": "[Find(AreaOf(Regular(Polygon($))))]. Round to nearest tenth.",
    "success": true
  },
  "2980": {
    "text_logic_forms": [
      "Find(LengthOf(Arc(Z,Y)))"
    ],
    "output_text": "[Find(LengthOf(Arc(Z,Y)))]. Round to nearest hundredth.",
    "success": true
  },
  "2981": {
    "text_logic_forms": [
      "Find(AreaOf(Rhombus($)))"
    ],
    "output_text": "[Find(AreaOf(Rhombus($)))].",
    "success": true
  },
  "2982": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(4)),42)",
      "Find(MeasureOf(Angle(7)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(4)),42)] [Find(MeasureOf(Angle(7)))].",
    "success": true
  },
  "2983": {
    "text_logic_forms": [
      "Rectangle($)",
      "Octagon($)",
      "Find(AreaOf(Octagon($)))"
    ],
    "output_text": "Cut four congruent triangles off corners of [Rectangle($)] to make [Octagon($)]. [Find(AreaOf(Octagon($)))]?",
    "success": false
  },
  "2984": {
    "text_logic_forms": [
      "Find(MeasureOf(Angle(Y)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(Y)))].",
    "success": true
  },
  "2985": {
    "text_logic_forms": [
      "Similar(Polygon($1),Polygon($2))",
      "Find(LengthOf(Line(A,C)))"
    ],
    "output_text": "[Similar(Polygon($1),Polygon($2))]. [Find(LengthOf(Line(A,C)))].",
    "success": true
  },
  "2986": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)] to nearest tenth. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2987": {
    "text_logic_forms": [
      "Find(LengthOf(Line(B,C)))"
    ],
    "output_text": "[Find(LengthOf(Line(B,C)))].",
    "success": true
  },
  "2988": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)]. Round to nearest tenth.",
    "success": true
  },
  "2989": {
    "text_logic_forms": [
      "Similar(Shape($1),Shape($2))",
      "Find(x)"
    ],
    "output_text": "[Similar(Shape($1),Shape($2))], to [Find(x)].",
    "success": true
  },
  "2990": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(1)),50)",
      "Equals(MeasureOf(Angle(3)),60)",
      "Find(MeasureOf(Angle(8)))"
    ],
    "output_text": ", [Equals(MeasureOf(Angle(1)),50)] and [Equals(MeasureOf(Angle(3)),60)] [Find(MeasureOf(Angle(8)))].",
    "success": true
  },
  "2991": {
    "text_logic_forms": [
      "Equals(MeasureOf(Angle(B,A,C)),38)",
      "Equals(LengthOf(Line(B,C)),5)",
      "Equals(LengthOf(Line(D,C)),5)",
      "Find(MeasureOf(Angle(D,A,C)))"
    ],
    "output_text": "[Equals(MeasureOf(Angle(B,A,C)),38)] [Equals(LengthOf(Line(B,C)),5)] and [Equals(LengthOf(Line(D,C)),5)] [Find(MeasureOf(Angle(D,A,C)))].",
    "success": true
  },
  "2992": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(MeasureOf(Angle(2)))"
    ],
    "output_text": "[Find(MeasureOf(Angle(2)))]. [Tangent(Line($),Circle($))].",
    "success": true
  },
  "2993": {
    "text_logic_forms": [
      "Circle(O)",
      "IsDiameterOf(Line(E,C),Circle(O))",
      "IsDiameterOf(Line(A,B),Circle(O))",
      "Equals(Angle(B,O,D),Angle(D,O,E))",
      "Equals(Angle(D,O,E),Angle(E,O,F))",
      "Equals(Angle(E,O,F),Angle(F,O,A))",
      "Find(MeasureOf(Arc(A,C)))"
    ],
    "output_text": "[Circle(O)], [IsDiameterOf(Line(E,C),Circle(O))], [IsDiameterOf(Line(A,B),Circle(O))] and [Equals(Angle(B,O,D),Angle(D,O,E))], [Equals(Angle(D,O,E),Angle(E,O,F))], [Equals(Angle(E,O,F),Angle(F,O,A))]. [Find(MeasureOf(Arc(A,C)))].",
    "success": true
  },
  "2994": {
    "text_logic_forms": [
      "Tangent(Line($),Circle($))",
      "Find(x)"
    ],
    "output_text": "[Find(x)]. [Tangent(Line($),Circle($))]. Round to nearest tenth if necessary.",
    "success": true
  },
  "2995": {
    "text_logic_forms": [
      "Congruent(Triangle(B,C,D),Triangle(W,X,Y))",
      "Find(x)"
    ],
    "output_text": "[Congruent(Triangle(B,C,D),Triangle(W,X,Y))]. [Find(x)].",
    "success": true
  },
  "2996": {
    "text_logic_forms": [
      "Parallelogram(P,Q,R,S)",
      "Find(LengthOf(Line(Q,P)))"
    ],
    "output_text": "Use [Parallelogram(P,Q,R,S)] to [Find(LengthOf(Line(Q,P)))].",
    "success": true
  },
  "2997": {
    "text_logic_forms": [
      "Find(x)"
    ],
    "output_text": "[Find(x)].",
    "success": true
  },
  "2998": {
    "text_logic_forms": [
      "Find(y)"
    ],
    "output_text": "[Find(y)].",
    "success": true
  },
  "2999": {
    "text_logic_forms": [
      "CircumscribedTo(Square($),Circle($))",
      "Find(CircumferenceOf(Circle($)))"
    ],
    "output_text": "[CircumscribedTo(Square($),Circle($))]. [Find(CircumferenceOf(Circle($)))].",
    "success": true
  },
  "3000": {
    "text_logic_forms": [
      "Rhombus(A,B,C,D)",
      "Equals(LengthOf(Line(P,B)),12)",
      "Equals(LengthOf(Line(A,B)),15)",
      "Equals(MeasureOf(Angle(A,B,D)),24)",
      "Find(MeasureOf(Angle(B,D,A)))"
    ],
    "output_text": " [Rhombus(A,B,C,D)]. If [Equals(LengthOf(Line(P,B)),12)] [Equals(LengthOf(Line(A,B)),15)] and [Equals(MeasureOf(Angle(A,B,D)),24)] [Find(MeasureOf(Angle(B,D,A)))].",
    "success": true
  },
  "3001": {
    "text_logic_forms": [
      "Find(LengthOf(Arc(J,K)))"
    ],
    "output_text": "[Find(LengthOf(Arc(J,K)))]. Round to nearest hundredth.",
    "success": true
  }
}